<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022深度学习框架</title>
    <url>/2022/05/08/2022%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<p>本文记录以下2022年深度学习框架考试答案：</p>
<span id="more"></span>
<h3 id="单选题"><a class="markdownIt-Anchor" href="#单选题"></a> 单选题</h3>
<ol>
<li>
<p>（layers）模块提供了一组高级神经网络层</p>
</li>
<li>
<p>假设需要改变参数来最小化代价函数（cost function），可以使用下列哪项技术？</p>
<blockquote>
<p>穷举搜索、随机搜索、Bayesian优化（以上任意一种）</p>
</blockquote>
</li>
<li>
<p>梯度下降算法的正确步骤是什么？</p>
<ol>
<li>初始化随机权重和偏差</li>
<li>把输入传输网络，得到输出值</li>
<li>计算预测值和真实值之间的误差</li>
<li>对每一个产生误差的神经元，改变响应的（权重值）以减小误差</li>
<li>迭代更新，直到找到最佳权重</li>
</ol>
</li>
<li>
<p>（TensorFlow）具有对多种语言的 API 支持，例如 Matlab 和 C++。研究人员一直在努力使它变得更好。还引入了一个 javascript 库 tensorflow.js，用于训练和部署机器学习模型。</p>
</li>
<li>
<p>防止（过拟合）本质上来说就是添加先验。</p>
</li>
</ol>
<h3 id="多选题"><a class="markdownIt-Anchor" href="#多选题"></a> 多选题</h3>
<ol>
<li>
<p>TensorBoard 当前支持哪些可视化技术？</p>
<blockquote>
<p>图像、标量、音频、图形</p>
</blockquote>
</li>
<li>
<p>TensorFlow 的主要优点包括以下哪些？</p>
<blockquote>
<p>定制和开源、平台灵活性、对线程/异步计算/队列具有高级支持</p>
</blockquote>
</li>
<li>
<p>以下哪些属于目标检测的四大任务？</p>
<blockquote>
<p>语义分割、目标分类、实例分割（还有目标定位）</p>
</blockquote>
</li>
<li>
<p>以下哪个是属于激活函数？</p>
<blockquote>
<p>sigmoid、tanh、relu</p>
</blockquote>
</li>
<li>
<p>CNN 结构特点包括哪些？</p>
<blockquote>
<p>局部连接、权值共享、池化操作</p>
</blockquote>
</li>
</ol>
<h3 id="填空题"><a class="markdownIt-Anchor" href="#填空题"></a> 填空题</h3>
<ol>
<li>
<p>（TensorBoard）是一套可视化工具，用于检查和理解 TensorFlow 运行和图形。</p>
</li>
<li>
<p>TensorFlow 使用（张量）表示数据，（变量）维护状态。</p>
</li>
<li>
<p>TensorFlow 构架的三个工作组件是：</p>
<ul>
<li>预处理数据</li>
<li>建立模型训练</li>
<li>评估模型</li>
</ul>
</li>
<li>
<p>例举三个经典的卷积神经网络：AlexNet、DenseNet、ResNet、GoogleNet、VGG</p>
</li>
<li>
<p>增加训练轮次，减少正则参数（减小高偏差），增加网络复杂度，是为了解决（欠拟合）现象。</p>
</li>
</ol>
<h3 id="判断题"><a class="markdownIt-Anchor" href="#判断题"></a> 判断题</h3>
<ol>
<li>在 TensorFlow 及其开发方面，Python 是其主要语言。它是 TensorFlow 支持的第一种也是最易识别的语言，并且仍然支持大多数功能。TensorFlow 的功能似乎最初是在 Python 种定义的，后来又转移到了 C++。（正确）</li>
<li>TensorFlow 不提供对 OpenCL 的支持。（正确）</li>
<li>TensorFlow 来源是识别并提供服务的模块类型。每个源提供零个或多个可服务流。每个可服务版本都提供了一个加载程序。使其可以访问，以便可以加载。（正确）</li>
<li>TensorFlow 最初由 Google Brain 团队的研究人员和工程师创建，并于 2015 年成为开源。（正确）</li>
<li>在 TensorFlow 中， 可以在同一个会话中创建两个计算图。（错误）</li>
</ol>
<h3 id="实训题"><a class="markdownIt-Anchor" href="#实训题"></a> 实训题</h3>
<ol>
<li>
<p>全连接层和激活函数的反向传播的实现</p>
<p>1）实现全连接层的反向传播</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FullyConnected</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, W, b</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        全连接层的初始化。</span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - W: numpy.array, (D_in, D_out)</span></span><br><span class="line"><span class="string">        - b: numpy.array, (D_out)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        self.W = W</span><br><span class="line">        self.b = b</span><br><span class="line">        </span><br><span class="line">        self.x = <span class="literal">None</span></span><br><span class="line">        self.original_x_shape = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        全连接层的前向传播</span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - x: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">        - y: numpy.array, (B, M)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        y = np.dot(x, self.W) + self.b</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">backward</span>(<span class="params">self, dout</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        全连接层的反向传播</span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - dout: numpy.array, (B, M)</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">        - dx: numpy.array, (B, d1, d2, ..., dk) 与self.original_x_shape形状相同</span></span><br><span class="line"><span class="string">        另外，还需计算以下结果：</span></span><br><span class="line"><span class="string">        - self.dW: numpy.array, (N, M)与self.W形状相同</span></span><br><span class="line"><span class="string">        - self.db: numpy.array, (M,)      </span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        dx = np.dot(dout, self.W.T)</span><br><span class="line">        self.dW = np.dot(self.x.T, dout)</span><br><span class="line">        self.db = np.<span class="built_in">sum</span>(dout, axis=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> dx</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure>
<p>2）实现常用激活函数的反向传播</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sigmoid</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.out = <span class="literal">None</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Sigmoid激活函数的前向传播。</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - x:　numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        Return :</span></span><br><span class="line"><span class="string">        - y: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        y = <span class="number">1</span> / (<span class="number">1</span> + np.exp(-x))</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">backward</span>(<span class="params">self, dout</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        sigmoid的反向传播</span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - dout: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">        - dx: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        dx = dout * (<span class="number">1.0</span> - self.out) * self.out</span><br><span class="line">        <span class="keyword">return</span> dx</span><br><span class="line">        <span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReLU</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.mask = <span class="literal">None</span></span><br><span class="line">    </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        ReLU激活函数的前向传播</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - x: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">        - y: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        self.mask = (x&lt;=<span class="number">0</span>)</span><br><span class="line">        out = x.copy()</span><br><span class="line">        out[self.mask] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">backward</span>(<span class="params">self, dout</span>):</span><br><span class="line">        <span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        relu的反向传播</span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">        - dout: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">        - dx: numpy.array, (B, d1, d2, ..., dk)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">		<span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        dout[self.mask]= <span class="number">0</span></span><br><span class="line">        dx = dout</span><br><span class="line">        <span class="keyword">return</span> dx</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>TensorFlow 入门——运算</p>
<p>1）TensorFlow 基本运算</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&quot;TF_CPP_MIN_LOG_LEVEL&quot;</span>]=<span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simple_func</span>(<span class="params">a, b, c, d</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    返回值：</span></span><br><span class="line"><span class="string">    result：一个标量值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 请在此添加代码</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">    ta = tf.constant(a) <span class="comment"># ta表示a的tensor形式</span></span><br><span class="line">    tb = tf.constant(b)</span><br><span class="line">    tc = tf.constant(c)</span><br><span class="line">    td = tf.constant(d)</span><br><span class="line">    result = tf.multiply(tf.add(ta, tb), tf.add(tc, td)).<span class="built_in">eval</span>()</span><br><span class="line">    <span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">b = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">c = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">d = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">init_op = tf.global_variables_initializer()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    <span class="built_in">print</span>(simple_func(a,b,c,d))</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>TensorFlow 入门——构建神经网络</p>
<p>1）神经元与激活函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment"># 模拟一个 M-P 神经元的工作原理</span></span><br><span class="line"><span class="comment"># input_value是输入值，类型为一维的tf.constant</span></span><br><span class="line"><span class="comment"># weight 是这个神经元的权重，类型为一维的tf.constant</span></span><br><span class="line"><span class="comment"># threshold 是这个神经元的阈值，类型为零维的tf.constant</span></span><br><span class="line"><span class="comment"># 返回值是一个浮点数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">neuron</span>(<span class="params">input_value, weight, threshold</span>):</span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">    out = tf.reduce_sum(input_value*weight)-threshold</span><br><span class="line">    out = tf.sigmoid(out)</span><br><span class="line">    <span class="keyword">return</span> out.<span class="built_in">eval</span>()</span><br><span class="line">	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>2）神经元与激活函数——tanh方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment"># 模拟一个 M-P 神经元</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">neuron</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 构造函数</span></span><br><span class="line">    <span class="comment"># weight为本神经元的权重，类型为一维的tf.constant</span></span><br><span class="line">    <span class="comment"># threshold为本神经元的阈值，类型为零维的tf.constant</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, weight, threshold</span>):</span><br><span class="line">        <span class="comment"># 请在此添加代码，完成本关任务</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        self.weight = weight</span><br><span class="line">        self.threshold = threshold</span><br><span class="line">        <span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 计算函数</span></span><br><span class="line">    <span class="comment"># input_value 是输入值，类型为一维的tf.constant</span></span><br><span class="line">    <span class="comment"># 返回值是一个浮点数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">computes</span>(<span class="params">self, input_value</span>):</span><br><span class="line">        <span class="comment"># 请在此添加代码</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        self.input_value = input_value</span><br><span class="line">        out = tf.reduce_sum(input_value * self.weight) - self.threshold</span><br><span class="line">        out = tf.tanh(out)</span><br><span class="line">        <span class="keyword">return</span> out.<span class="built_in">eval</span>()</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span>       </span><br></pre></td></tr></table></figure>
<p>3）构建简单的单隐层前馈神经网络</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment"># 模拟一个 M-P 神经元</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">neuron</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 构造函数</span></span><br><span class="line">    <span class="comment"># weight为本神经元的权重，类型为一维的tf.constant</span></span><br><span class="line">    <span class="comment"># threshold为本神经元的阈值，类型为零维的tf.constant</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, weight, threshold</span>):</span><br><span class="line">        <span class="comment"># 请在此添加代码，完成本关任务</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        self.weight = weight</span><br><span class="line">        self.threshold = threshold</span><br><span class="line">        <span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 计算函数</span></span><br><span class="line">    <span class="comment"># input_value 是输入值，类型为一维的tf.constant</span></span><br><span class="line">    <span class="comment"># 返回值是一个浮点数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">computes</span>(<span class="params">self, input_value</span>):</span><br><span class="line">        <span class="comment"># 请在此添加代码</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        self.input_value = input_value</span><br><span class="line">        out = tf.reduce_sum(input_value * self.weight) - self.threshold</span><br><span class="line">        out = tf.tanh(out)</span><br><span class="line">        <span class="keyword">return</span> out.<span class="built_in">eval</span>()</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span>   </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 模拟神经网络中的一层</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dense</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 构造函数</span></span><br><span class="line">    <span class="comment"># weights 为本层中每个神经元的权重，元素类型为一维的tf.constant，weights的类型为python列表</span></span><br><span class="line">    <span class="comment"># thresholds 为本层中每个神经元的权重，元素类型为零维的tf.constant，thresholds的类型为python列表</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, weights, thresholds</span>):</span><br><span class="line">        <span class="comment"># 请在此添加代码</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        size = <span class="built_in">len</span>(weights)</span><br><span class="line">        self.neurons = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">            self.neurons.append(neuron(weights[i], thresholds[i]))</span><br><span class="line">        <span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 计算函数</span></span><br><span class="line">    <span class="comment"># input_value 为输入值，类型为一维的tf.constant</span></span><br><span class="line">    <span class="comment"># 返回值为一个1维，长度为n的Tensor，n为本层中神经元的数量</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">computes</span>(<span class="params">self, input_value</span>):</span><br><span class="line">        <span class="comment">#请在此添加代码</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">        L = []</span><br><span class="line">        size = <span class="built_in">len</span>(self.neurons)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">            L.append(self.neurons[i].computes(input_value))</span><br><span class="line">        <span class="keyword">return</span> tf.constant(L)</span><br><span class="line">    	<span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 模拟一个简单的神经网络</span></span><br><span class="line"><span class="comment"># input_value是这个神经网络的输入，类型为一维的tf.constant</span></span><br><span class="line"><span class="comment"># wegihtsOfMiddle 是这个神经网络中间层每个神经元的权重， 元素类型为一维的tf.constant，wegihtsOfMiddle的类型是python的列表</span></span><br><span class="line"><span class="comment"># thresholdsOfMiddle 是这个神经网络中间层每个神经元的阈值， 元素类型为零维的tf.constant，thresholdsOfMiddle的类型是python的列表</span></span><br><span class="line"><span class="comment"># wegihtsOfOut 是这个神经网络输出层每个神经元的权重， 元素类型为一维的tf.constant，wegihtsOfOut 的类型是python的列表</span></span><br><span class="line"><span class="comment"># thresholdsOfOut 是这个神经网络输出层每个神经元的阈值， 元素类型为零维的tf.constant，thresholdsOfOut 的类型是python的列表</span></span><br><span class="line"><span class="comment"># 返回值是一个一维浮点数组 （注意不是Tensor），数组的长度为输出层神经元的数量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">NetWork</span>(<span class="params">input_value, weightsOfMiddle, thresholdsOfMiddle, weightsOfOut, thresholdsOfOut</span>):</span><br><span class="line">    <span class="comment"># 请在此添加代码</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Begin&quot;&quot;&quot;</span></span><br><span class="line">    	middle = Dense(weightsOfMiddle, thresholdsOfMiddle)</span><br><span class="line">        out = Dense(weightsOfOut, thresholdsOfOut)</span><br><span class="line">        <span class="keyword">return</span> out.computes(middle.computes(input_value)).<span class="built_in">eval</span>()</span><br><span class="line">    <span class="string">&quot;&quot;&quot;End&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>考试</category>
      </categories>
      <tags>
        <tag>深度学习框架</tag>
      </tags>
  </entry>
  <entry>
    <title>ACM格式输入2</title>
    <url>/2023/04/13/ACM%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%85%A52/</url>
    <content><![CDATA[<p>本文转载自 <a href="https://dfsgwb.github.io/2023/04/13/ACM%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%85%A52/">ACM格式输入（二） | DFSgwb</a></p>
<span id="more"></span>
<h1 id="c常用的输入输出方法"><a class="markdownIt-Anchor" href="#c常用的输入输出方法"></a> c++常用的输入输出方法</h1>
<h2 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h2>
<p>一维数组：</p>
<blockquote>
<p>输入包含一个整数n代表数组长度。<br />
接下来包含n个整数，代表数组中的元素<br />
3<br />
1 2 3</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n); <span class="comment">// 读入3，说明数组的大小是3</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(n)</span></span>; <span class="comment">// 创建大小为3的vector&lt;int&gt;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">	cin &gt;&gt; nums[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证是否读入成功</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">	cout &lt;&lt; nums[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>若是不限定输入数据的大小</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; num) &#123;</span><br><span class="line">	nums.<span class="built_in">push_back</span>(num);</span><br><span class="line">	<span class="comment">// 读到换行符，终止循环</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">getchar</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 验证是否读入成功</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">	cout &lt;&lt; nums[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<h3 id="二维数组"><a class="markdownIt-Anchor" href="#二维数组"></a> 二维数组</h3>
<p>例如</p>
<blockquote>
<p>输出N行，每行M个空格分隔的整数。每个整数表示该位置距离最近的水域的距离。<br />
4 4<br />
0110<br />
1111<br />
1111<br />
0110</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> res[n][m];</span><br><span class="line"><span class="comment">//vector&lt;vector&lt;int&gt;&gt;res(n,vector&lt;int&gt;(n));</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;res[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 验证是否读入成功</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">		cout &lt;&lt; matrix[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; endl;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>ACM格式输入1</title>
    <url>/2023/04/13/ACM%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%85%A51/</url>
    <content><![CDATA[<p>本文转载自 <a href="https://dfsgwb.github.io/2023/04/13/ACM%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%85%A5/">ACM格式输入（一） | DFSgwb</a>：</p>
<span id="more"></span>
<h1 id="c常用的输入输出方法"><a class="markdownIt-Anchor" href="#c常用的输入输出方法"></a> c++常用的输入输出方法</h1>
<h2 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h2>
<p>1.cin</p>
<blockquote>
<p>注意1：cin可以连续从键盘读入数据<br />
注意2：cin以空格、tab、换行符作为分隔符<br />
注意3：cin从第一个非空格字符开始读取，直到遇到分隔符结束读取</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用法1，读入单数据</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;  <span class="comment">// 输出读入的整数num</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法2，批量读入多个数据</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(<span class="number">5</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">	cin &gt;&gt; nums[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出读入的数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">	cout &lt;&lt; nums[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.getline()</p>
<blockquote>
<p>当读取的字符串中间存在空格时，cin就不可用了，便可以使用getline()</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin, s);</span><br><span class="line"><span class="comment">// 输出读入的字符串</span></span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<p>3.getchar</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> ch;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="comment">// 输出读入的字符</span></span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<p>4.scanf()</p>
<blockquote>
<p>使用最多的输入方式</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.输入十进制的数 </span></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%i&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%u&quot;</span>,&amp;a);</span><br><span class="line"><span class="comment">//这三种写法都是可以的 </span></span><br><span class="line"><span class="comment">//2.输入八进制和十六进制数 </span></span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%o&quot;</span>,&amp;b); <span class="comment">//八进制 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%x&quot;</span>,&amp;b); <span class="comment">//十六进制 </span></span><br><span class="line"><span class="comment">//3.输入实数</span></span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;c);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%e&quot;</span>,&amp;c);</span><br><span class="line"><span class="comment">//这两种写法可以互换 </span></span><br><span class="line"><span class="comment">//4.输入字符和字符串 </span></span><br><span class="line"><span class="type">char</span> d;</span><br><span class="line">string dd;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;d); <span class="comment">//单个字符 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;dd); <span class="comment">//字符串 </span></span><br><span class="line"><span class="comment">//5.跳过一次输入 </span></span><br><span class="line"><span class="type">int</span> e;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%*&quot;</span>,&amp;e);</span><br><span class="line"><span class="comment">//6.输入长整型数 </span></span><br><span class="line"><span class="type">int</span> f;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;f);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lo&quot;</span>,&amp;f);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lx&quot;</span>,&amp;f);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%l&quot;</span>,&amp;f);</span><br><span class="line"><span class="comment">//四种写法都可以用 </span></span><br><span class="line"><span class="comment">//7.输入短整型数 </span></span><br><span class="line"><span class="type">int</span> g;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%hd&quot;</span>,&amp;g);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%ho&quot;</span>,&amp;g);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%hx&quot;</span>,&amp;g);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%h&quot;</span>,&amp;g);</span><br><span class="line"><span class="comment">//四种写法都可以用 </span></span><br><span class="line"><span class="comment">//8.输入double型数（小数 </span></span><br><span class="line"><span class="type">double</span> h;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;h);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;h);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%l&quot;</span>,&amp;h);</span><br><span class="line"><span class="comment">//三种写法都可以用 </span></span><br><span class="line"><span class="comment">//9.域宽的使用 </span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%5d&quot;</span>,&amp;i);</span><br><span class="line"><span class="comment">//10.特殊占位符 </span></span><br><span class="line"><span class="type">int</span> j,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;j,&amp;k);</span><br><span class="line"><span class="type">int</span> j,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;j);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;,&quot;</span>); <span class="comment">//cout&lt;&lt;&quot;,&quot;;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br></pre></td></tr></table></figure>
<h2 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h2>
<p>cout，printf随意搭配，就不讲了</p>
<p>下面将一些输入格式</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span>  <span class="comment">//INT_MIN 和 INT_MAX的头文件  </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu</span> &#123;</span><br><span class="line">	string name;</span><br><span class="line">	<span class="type">int</span> num;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 直接输入一个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; n) &#123; </span><br><span class="line">		cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 直接输入一个字符串</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string str;</span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; str) &#123;</span><br><span class="line">		cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 只读取一个字符 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">	<span class="comment">//方式1</span></span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; ch) &#123;</span><br><span class="line">		cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//方式2： cin.get(ch) 或者 ch = cin.get() 或者 cin.get()</span></span><br><span class="line">	<span class="keyword">while</span> (cin.<span class="built_in">get</span>(ch)) &#123;   </span><br><span class="line">		cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//方式3 ：ch = getchar()  </span></span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">getchar</span>()) &#123;</span><br><span class="line">		cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.1给定一个数，表示有多少组数（可能是数字和字符串的组合），然后读取</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>; </span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; n) &#123;   <span class="comment">//每次读取1 + n 个数，即一个样例有n+1个数 </span></span><br><span class="line">		<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(n)</span></span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">			cin &gt;&gt; nums[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//处理这组数/字符串</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">			cout &lt;&lt; nums[i] &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.2 首先给一个数字，表示需读取n个字符，然后顺序读取n个字符</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; n) &#123;  <span class="comment">//输入数量</span></span><br><span class="line">		vector&lt;string&gt; strs;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">			string temp;</span><br><span class="line">			cin &gt;&gt; temp;</span><br><span class="line">			strs.<span class="built_in">push_back</span>(temp);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//处理这组字符串</span></span><br><span class="line">		<span class="built_in">sort</span>(strs.<span class="built_in">begin</span>(), strs.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; str : strs) &#123;</span><br><span class="line">			cout &lt;&lt; str &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//4.未给定数据个数，但是每一行代表一组数据，每个数据之间用空格隔开</span></span><br><span class="line"><span class="comment">//4.1使用getchar() 或者 cin.get() 读取判断是否是换行符，若是的话，则表示该组数（样例）结束了，需进行处理</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> ele;</span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; ele) &#123;</span><br><span class="line">		<span class="type">int</span> sum = ele;</span><br><span class="line">		<span class="comment">// getchar()   //读取单个字符</span></span><br><span class="line">		<span class="comment">/*while (cin.get() != &#x27;\n&#x27;) &#123;*/</span>   <span class="comment">//判断换行符号</span></span><br><span class="line">		<span class="keyword">while</span> (<span class="built_in">getchar</span>() != <span class="string">&#x27;\n&#x27;</span>) &#123;  <span class="comment">//如果不是换行符号的话，读到的是数字后面的空格或者table</span></span><br><span class="line">			<span class="type">int</span> num;</span><br><span class="line">			cin &gt;&gt; num;</span><br><span class="line">			sum += num;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.2 给定一行字符串，每个字符串用空格间隔，一个样例为一行</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string str;</span><br><span class="line">	vector&lt;string&gt; strs;</span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; str) &#123;</span><br><span class="line">		strs.<span class="built_in">push_back</span>(str);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">getchar</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123;  <span class="comment">//控制测试样例</span></span><br><span class="line">			<span class="built_in">sort</span>(strs.<span class="built_in">begin</span>(), strs.<span class="built_in">end</span>());</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; str : strs) &#123;</span><br><span class="line">				cout &lt;&lt; str &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			cout &lt;&lt; endl;</span><br><span class="line">			strs.<span class="built_in">clear</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//4.3 使用getline 读取一整行数字到字符串input中，然后使用字符串流stringstream，读取单个数字或者字符。</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string input;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">getline</span>(cin, input)) &#123;  <span class="comment">//读取一行</span></span><br><span class="line">		<span class="function">stringstream <span class="title">data</span><span class="params">(input)</span></span>;  <span class="comment">//使用字符串流</span></span><br><span class="line">		<span class="type">int</span> num = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span> (data &gt;&gt; num) &#123;</span><br><span class="line">			sum += num;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//4.4 使用getline 读取一整行字符串到字符串input中，然后使用字符串流stringstream，读取单个数字或者字符。</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string words;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">getline</span>(cin, words)) &#123;</span><br><span class="line">		<span class="function">stringstream <span class="title">data</span><span class="params">(words)</span></span>;</span><br><span class="line">		vector&lt;string&gt; strs;</span><br><span class="line">		string str;</span><br><span class="line">		<span class="keyword">while</span> (data &gt;&gt; str) &#123;</span><br><span class="line">			strs.<span class="built_in">push_back</span>(str);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">sort</span>(strs.<span class="built_in">begin</span>(), strs.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; str : strs) &#123;</span><br><span class="line">			cout &lt;&lt; str &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.5 使用getline 读取一整行字符串到字符串input中，然后使用字符串流stringstream，读取单个数字或者字符。每个字符中间用&#x27;,&#x27;间隔</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string line;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//while (cin &gt;&gt; line) &#123;  //因为加了“，”所以可以看出一个字符串读取</span></span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">getline</span>(cin, line))&#123;</span><br><span class="line">		vector&lt;string&gt; strs;</span><br><span class="line">		<span class="function">stringstream <span class="title">ss</span><span class="params">(line)</span></span>;</span><br><span class="line">		string str;</span><br><span class="line">		<span class="keyword">while</span> (<span class="built_in">getline</span>(ss, str, <span class="string">&#x27;,&#x27;</span>)) &#123;</span><br><span class="line">			strs.<span class="built_in">push_back</span>(str);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//</span></span><br><span class="line">		<span class="built_in">sort</span>(strs.<span class="built_in">begin</span>(), strs.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; str : strs) &#123;</span><br><span class="line">			cout &lt;&lt; str &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string str;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//C语言读取字符、数字</span></span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="type">char</span> c;</span><br><span class="line">	string s;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">scanf_s</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;s);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//读取字符</span></span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">	cin &gt;&gt; ch;</span><br><span class="line">	ch = <span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span> (cin.<span class="built_in">get</span>(ch)) &#123; <span class="comment">//获得单个字符</span></span><br><span class="line">		;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//读取字符串</span></span><br><span class="line">	cin &gt;&gt; str;  <span class="comment">//遇到空白停止</span></span><br><span class="line">	<span class="built_in">getline</span>(cin, str);  <span class="comment">//读入一行字符串</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>ANTLR学习过程和资料</title>
    <url>/2022/10/21/ANTLR%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%92%8C%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<p>本文记录以下学习ANTLR过程中所使用的资料和学习经验：</p>
<span id="more"></span>
<h3 id="学习资料"><a class="markdownIt-Anchor" href="#学习资料"></a> 学习资料</h3>
<ol>
<li><a href="https://abcdabcd987.com/notes-on-antlr4/">ANTLR4 笔记</a>：记录了ANTLR4的使用技巧</li>
<li><a href="https://www.zhihu.com/question/437337408/answer/1661188049">如何学习ANTLR? - 知乎</a>：记录了学习ANTLR的经验</li>
<li><a href="https://github.com/antlr/grammars-v4">grammars-v4</a>：ANTLR4官方仓库，收集了大量ANTLR v4的形式化语法</li>
<li><a href="https://github.com/antlr/antlr4/blob/master/doc/grammars.md">antlr4/grammars.md</a>：ANTLR4官方开源仓库的语法文档，描述了语法结构</li>
<li><a href="https://book.douban.com/subject/27082372/">ANTLR 4权威指南 (豆瓣)</a></li>
</ol>
<h3 id="配置教程"><a class="markdownIt-Anchor" href="#配置教程"></a> 配置教程</h3>
<ol>
<li><a href="https://www.cnblogs.com/solvit/p/10097234.html">ANTLR4在windows10下的安装 - solvit - 博客园</a></li>
</ol>
<h3 id="快速上手"><a class="markdownIt-Anchor" href="#快速上手"></a> 快速上手</h3>
<ol>
<li><a href="https://juejin.cn/post/7018521754125467661">语法解析器ANTLR4从入门到实践 - 掘金</a></li>
<li><a href="https://www.chungkwong.cc/antlr.html">用ANTLR解析领域特定语言 | 陈颂光</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/114982293">Antlr4简易快速入门 - 知乎</a></li>
</ol>
<h3 id="所遇问题"><a class="markdownIt-Anchor" href="#所遇问题"></a> 所遇问题</h3>
<ol>
<li>出现<code>Cannot resolve symbol 'antlr'</code>。如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221021115827.png" alt="" /><br />
原因：虽然已经在本地下载了antlr包并将其添加进了CLASSPATH，但IDEA并不能识别出。<br />
解决方案：在Project Settings对应Module中添加依赖<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221021120414.png" alt="" /></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>ANTLR</tag>
      </tags>
  </entry>
  <entry>
    <title>Android文章索引</title>
    <url>/2022/08/04/Android%E6%96%87%E7%AB%A0%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<p>本文记录一下在学习使用Android Studio进行Android开发过程中的一些比较好的文章：</p>
<span id="more"></span>
<ol>
<li><a href="https://developer.aliyun.com/article/293410">Android LayoutInflater详解</a></li>
<li><a href="https://bbs.huaweicloud.com/blogs/233017">Android进阶(十四)Android Adapter详解</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio配置</title>
    <url>/2022/07/27/Android-Studio%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在配置Android Studio中一些tips：</p>
<span id="more"></span>
<h3 id="通过配置环境变量将sdk和emulator放在d盘"><a class="markdownIt-Anchor" href="#通过配置环境变量将sdk和emulator放在d盘"></a> 通过配置环境变量将SDK和Emulator放在D盘</h3>
<ul>
<li>
<p>配置<code>ANDROID_SDK_ROOT</code>环境变量，对应目录下存放安装的<code>SDK</code>：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730191707531.png" alt="image-20220730191707531" /></p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730191849901.png" alt="image-20220730191849901" /></p>
</li>
<li>
<p>配置<code>ANDROID_SDK_HOME</code>环境变量，对应目录下的<code>.android\avd</code>目录中存放安装的安卓模拟器。</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730191737331.png" alt="image-20220730191737331" /></p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730191916435.png" alt="image-20220730191916435" /></p>
<p>注意将原本C盘中的<code>.android</code>文件夹复制到该目录处时，需要更改<code>avd</code>下面对应模拟器的<code>.ini</code>文件中的路径：</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730190220294.png" alt="image-20220730190220294" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://developer.android.com/studio/command-line/variables?hl=zh-cn">环境变量</a></li>
<li><a href="https://blog.51cto.com/u_15307523/3133953">Android Studio 配置模拟器AVD存放路径（默认在c盘，解决c盘空间不够问题）</a></li>
</ol>
</blockquote>
<h3 id="在android-studio项目中导入已有安卓模拟器"><a class="markdownIt-Anchor" href="#在android-studio项目中导入已有安卓模拟器"></a> 在Android Studio项目中导入已有安卓模拟器</h3>
<p>直接导入对应<code>avd</code>目录下的<code>.ini</code>文件即可。</p>
<h3 id="android-studio各种报错"><a class="markdownIt-Anchor" href="#android-studio各种报错"></a> Android Studio各种报错</h3>
<p>1.出现报错：<code>This view is not constrained vertically: at runtime it will jump to the top unless you add a vertical constraint</code>。出现场景如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730190618272.png" alt="image-20220730190618272" /></p>
<p>此时可以通过点击右上方的魔法工具完整自动补全解决报错：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220730190838880.png" alt="image-20220730190838880" /></p>
<p>补全后代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/37859613/this-view-is-not-constrained-vertically-at-runtime-it-will-jump-to-the-left-unl">This view is not constrained vertically. At runtime it will jump to the left unless you add a vertical constraint</a></li>
</ol>
</blockquote>
<h3 id="android-studio配置国内镜像"><a class="markdownIt-Anchor" href="#android-studio配置国内镜像"></a> Android Studio配置国内镜像</h3>
<h3 id="android-studio中用viewbinding替代kotlin-android-extension插件"><a class="markdownIt-Anchor" href="#android-studio中用viewbinding替代kotlin-android-extension插件"></a> Android Studio中用ViewBinding替代kotlin-android-extension插件</h3>
<p>在Activity中使用视图绑定的流程如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        <span class="keyword">var</span> binding = FirstLayoutBinding.inflate(layoutInflater)</span><br><span class="line">        <span class="keyword">val</span> view = binding.root</span><br><span class="line">        setContentView(view)</span><br><span class="line">        <span class="comment">// val button1: Button = findViewById(R.id.button1)</span></span><br><span class="line">        <span class="comment">// Toast.makeText要求传入三个参数，第一个参数为一个Context对象，Activity本身就是一个Context对象，因此传入this即可；第二个参数为显示的文本；第三个参数为显示时长</span></span><br><span class="line">        binding.button1.setOnClickListener&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;You clicked Button 1&quot;</span>, Toast.LENGTH_LONG).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其与以下代码功能等价，但在页面中控件较多时更为高效：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.first_layout)</span><br><span class="line">        <span class="keyword">val</span> button1: Button = findViewById(R.id.button1)</span><br><span class="line">        <span class="comment">// Toast.makeText要求传入三个参数，第一个参数为一个Context对象，Activity本身就是一个Context对象，因此传入this即可；第二个参数为显示的文本；第三个参数为显示时长</span></span><br><span class="line">        button1.setOnClickListener&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;You clicked Button 1&quot;</span>, Toast.LENGTH_LONG).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/guolin_blog/article/details/113089706">kotlin-android-extensions插件也被废弃了？扶我起来</a></li>
<li><a href="https://developer.android.com/topic/libraries/view-binding">视图绑定</a> 官方文档</li>
</ol>
</blockquote>
<h3 id="android-studio返回上一次光标所在位置"><a class="markdownIt-Anchor" href="#android-studio返回上一次光标所在位置"></a> Android Studio返回上一次光标所在位置</h3>
<ul>
<li>
<p>快捷键：<code>Ctrl+Alt+向左箭头</code></p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220804163700574.png" alt="image-20220804163700574" /></p>
</li>
<li>
<p>双击<code>shift</code>全局搜索，然后搜索<code>show Main ToolBar</code>配置，置为<code>ON</code>：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220804163756703.png" alt="image-20220804163756703" /></p>
<p>可以看到顶栏工具栏已经打开：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220804163915966.png" alt="image-20220804163915966" /></p>
</li>
</ul>
<h3 id="android-studio报override-nothing错误"><a class="markdownIt-Anchor" href="#android-studio报override-nothing错误"></a> Android Studio报<code>override nothing</code>错误</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220805212313748.png" alt="image-20220805212313748" /></p>
<p>其原因在于没有继承包含该方法的类。在本例中，需要在下述代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>()</span><br></pre></td></tr></table></figure>
<p>后加上需要继承的类：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>(), View.OnClickListener </span><br></pre></td></tr></table></figure>
<p>tip：在IDE报错的时候，不要先怀疑它在缓存等方面出了问题，先怀疑自己 😃</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>C++知识点01</title>
    <url>/2022/11/04/C++%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下与C++相关的知识点：</p>
<span id="more"></span>
<h3 id="c中setfindxsetend"><a class="markdownIt-Anchor" href="#c中setfindxsetend"></a> C++中<code>set.find(x)!=set.end()</code></h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/45119362/why-is-it-necessary-to-to-use-set-findx-set-end-while-finding-an-element">Why is it necessary to to use set.find(x) != set.end() while finding an element.</a></li>
</ol>
</blockquote>
<h3 id="c中int和string的转换"><a class="markdownIt-Anchor" href="#c中int和string的转换"></a> C++中int和string的转换</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/smile233/p/8379802.html">C++ int与string的相互转换(含源码实现) - <sub>君莫笑</sub> - 博客园</a></li>
</ol>
</blockquote>
<h3 id="c中string的reserve和resize"><a class="markdownIt-Anchor" href="#c中string的reserve和resize"></a> C++中string的reserve和resize</h3>
<p>用于给容器分配空间以及resize容器空间</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.51cto.com/u_15127568/3455526">string的reserve和resize_51CTO博客_vector resize和reserve</a></li>
</ol>
</blockquote>
<h3 id="c中fill"><a class="markdownIt-Anchor" href="#c中fill"></a> C++中fill</h3>
<p>对一个容器进行填充</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.51cto.com/lawsonabs/3011028">C++ 中 fill() 的使用_51CTO博客_c++ fill</a></li>
</ol>
</blockquote>
<h3 id="c中size_t类型"><a class="markdownIt-Anchor" href="#c中size_t类型"></a> C++中size_t类型</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/24773728">size_t 这个类型的意义是什么？ - 知乎</a></li>
</ol>
</blockquote>
<h3 id="c风格规范"><a class="markdownIt-Anchor" href="#c风格规范"></a> C++风格规范</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/">C++ 风格指南 - 内容目录 — Google 开源项目风格指南</a></li>
</ol>
</blockquote>
<h3 id="c按值-引用和指针传递"><a class="markdownIt-Anchor" href="#c按值-引用和指针传递"></a> C++按值、引用和指针传递</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/yanlingyin/archive/2011/12/07/2278961.html">C++ 值传递、指针传递、引用传递详解 - Geek_Ling - 博客园</a></li>
</ol>
</blockquote>
<h3 id="c中auto关键字"><a class="markdownIt-Anchor" href="#c中auto关键字"></a> C++中auto关键字</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zh.m.wikipedia.org/zh-hans/Auto_(C%2B%2B)">auto (C++) - 维基百科，自由的百科全书</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1660750">C++ auto 关键字的使用 - 腾讯云开发者社区-腾讯云</a></li>
</ol>
</blockquote>
<h3 id="c中移位操作"><a class="markdownIt-Anchor" href="#c中移位操作"></a> C++中移位操作</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/shrimp-can/p/5145351.html">C++移位运算符详解 - shrimp_929 - 博客园</a></li>
<li><a href="https://www.runoob.com/cplusplus/cpp-operators.html">C++ 运算符 | 菜鸟教程</a></li>
</ol>
</blockquote>
<h3 id="c中溢出"><a class="markdownIt-Anchor" href="#c中溢出"></a> C++中溢出</h3>
<p>以leetcod260为例，如下为有问题的代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">result</span><span class="params">(<span class="number">2</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="type">int</span> eor = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num: nums) eor ^= num;</span><br><span class="line">        <span class="comment">//假设两个元素为a1, a2；则a1 ^ a2 = eor。a1和a2从最右边即最低位开始第一个不同的位可以通过以下操作得到：</span></span><br><span class="line">        <span class="type">int</span> lowbit = eor &amp; -eor;</span><br><span class="line">        <span class="comment">//由于可以通过异或抵消两个重复元素，故通过下面的异或可以得到两个单元素中的一个</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num: nums)&#123;</span><br><span class="line">            <span class="keyword">if</span>(lowbit &amp; num)&#123;</span><br><span class="line">                result[<span class="number">0</span>] ^= num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//由result[0] ^ result[1] = eor, 故result[1] = result[0] ^ eor</span></span><br><span class="line">        result[<span class="number">1</span>] = result[<span class="number">0</span>] ^ eor;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>问题：<code>int</code>类型最小值<code>-2147483648</code>和最大值<code>2147483647</code>绝对值差一，故上述<code>eor ^= -eor</code>操作会导致溢出。<br />
解决方案：将<code>eor</code>声明为<code>long long</code>类型，即<code>long long eor=0</code>。</p>
<h3 id="c数据类型"><a class="markdownIt-Anchor" href="#c数据类型"></a> C++数据类型</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/cplusplus/cpp-data-types.html">C++ 数据类型 | 菜鸟教程</a></li>
</ol>
</blockquote>
<h3 id="cc中的头文件"><a class="markdownIt-Anchor" href="#cc中的头文件"></a> C/C++中的头文件</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li>《Linux C编程一站式学习》第20章</li>
<li><a href="https://reality0ne.com/how-to-struct-c-header-files/">如何组织好 C 的头文件</a></li>
<li><a href="https://bbs.csdn.net/topics/380062140">请大家说说　结构体　是放在头文件中好?　还是放在源文件好呢?-CSDN社区</a></li>
<li><a href="https://www.runoob.com/cprogramming/c-header-files.html">C 头文件 | 菜鸟教程</a></li>
<li><a href="https://www.cnblogs.com/moodlxs/archive/2012/03/08/2385118.html">函数实现不放在头文件的原因，及何时可以放头文件的情况 - 绿色冰点 - 博客园</a></li>
</ol>
</blockquote>
<h3 id="c中和-"><a class="markdownIt-Anchor" href="#c中和-"></a> C++中<code>.</code>和<code>-&gt;</code></h3>
<p><code>-&gt;</code>主要用于对类类型的指针访问类的成员，<code>.</code>主要用于对类类型的引用对象访问类的成员。例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ListNode</span>&#123;</span><br><span class="line">	<span class="type">int</span> val;</span><br><span class="line">	ListNode *next;</span><br><span class="line">	<span class="built_in">ListNode</span>(<span class="type">int</span> x): <span class="built_in">val</span>(x), <span class="built_in">next</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ListNode* dummy1 = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">	<span class="function">ListNode <span class="title">dummy2</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">	cout &lt;&lt; dummy1-&gt;val &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; dummy2.val &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/aziji/p/10701156.html">c++中 . 和 -&gt; 的区别是什么？ - iSZ - 博客园</a></li>
<li><a href="https://blog.csdn.net/s15868887695/article/details/56834685">C++中的.和::和：和-&gt;的区别_define_SGZ的博客-CSDN博客</a></li>
</ol>
</blockquote>
<h3 id="c中的和"><a class="markdownIt-Anchor" href="#c中的和"></a> C++中的&amp;和*</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/cplusplus/cpp-pointer-operators.html">C++ 指针运算符（&amp; 和 *） | 菜鸟教程</a></li>
<li><a href="https://segmentfault.com/a/1190000017434150">c++ - C++中的&amp;和&amp;&amp;_个人文章 - SegmentFault 思否</a></li>
<li><a href="https://www.cnblogs.com/klb561/p/13830487.html">C++中&amp;的功能 及 用法 - konglingbin - 博客园</a></li>
</ol>
</blockquote>
<h3 id="c结构体构造函数"><a class="markdownIt-Anchor" href="#c结构体构造函数"></a> C++结构体构造函数</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/wlw-x/p/11566191.html">C++ - 结构体构造函数使用总结 - _starsky - 博客园</a></li>
<li><a href="http://c.biancheng.net/view/1570.html">C++链表及其创建</a></li>
</ol>
</blockquote>
<h3 id="c头插法和尾插法"><a class="markdownIt-Anchor" href="#c头插法和尾插法"></a> C++头插法和尾插法</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.51cto.com/u_15178976/2988807">单链表的头插法与尾插法代码实现及详解_51CTO博客_单链表尾插法代码</a></li>
</ol>
</blockquote>
<h3 id="c结构体的初始化"><a class="markdownIt-Anchor" href="#c结构体的初始化"></a> C++结构体的初始化</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ListNode</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    ListNode *next;</span><br><span class="line">    <span class="built_in">ListNode</span>() : <span class="built_in">val</span>(<span class="number">0</span>), <span class="built_in">next</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">    <span class="built_in">ListNode</span>(<span class="type">int</span> x) : <span class="built_in">val</span>(x), <span class="built_in">next</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">    <span class="built_in">ListNode</span>(<span class="type">int</span> x, ListNode *next) : <span class="built_in">val</span>(x), <span class="built_in">next</span>(next) &#123;&#125;;</span><br><span class="line">    <span class="comment">//通过数组来初始化</span></span><br><span class="line">    <span class="built_in">ListNode</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums)&#123;</span><br><span class="line">        <span class="function">ListNode <span class="title">dummy</span><span class="params">(<span class="number">-1</span>)</span></span>;</span><br><span class="line">        ListNode* curNode = &amp;dummy;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num: nums)&#123;</span><br><span class="line">            curNode-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(num, <span class="literal">nullptr</span>);</span><br><span class="line">            curNode = curNode-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        val = dummy.next-&gt;val; </span><br><span class="line">        next = dummy.next-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="http://c.biancheng.net/view/1407.html">C++结构体完全攻略（超详细）</a></li>
<li><a href="https://www.cnblogs.com/wlw-x/p/11566191.html">C++ - 结构体构造函数使用总结 - _starsky - 博客园</a></li>
</ol>
</blockquote>
<h3 id="c编译器在windows上的配置"><a class="markdownIt-Anchor" href="#c编译器在windows上的配置"></a> C++编译器在Windows上的配置</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.mingw-w64.org/downloads/#pre-built-toolchains-and-packages">Downloads - MinGW-w64</a></li>
<li><a href="https://packages.msys2.org/package/mingw-w64-x86_64-gcc-fortran">Package: mingw-w64-x86_64-gcc-fortran - MSYS2 Packages</a></li>
<li><a href="https://packages.msys2.org/package/mingw-w64-x86_64-gcc">Package: mingw-w64-x86_64-gcc - MSYS2 Packages</a></li>
</ol>
</blockquote>
<h3 id="c中数组的使用"><a class="markdownIt-Anchor" href="#c中数组的使用"></a> C++中数组的使用</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/cplusplus/cpp-multi-dimensional-arrays.html">C++ 多维数组 | 菜鸟教程</a></li>
<li><a href="https://www.runoob.com/cplusplus/cpp-passing-arrays-to-functions.html">C++ 传递数组给函数 | 菜鸟教程</a></li>
<li><a href="https://www.cnblogs.com/pacino12134/p/11277153.html">数组引用、数组做参数 - keepgoing18 - 博客园</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1784790#:~:text=%E7%9B%B8%E5%BD%93%E4%BA%8E%E6%89%A7%E8%A1%8C%E5%A6%82%E4%B8%8B%E8%AF%AD%E5%8F%A5,%E7%9A%84%E4%B8%AA%E6%95%B0%EF%BC%8C%E5%90%A6%E5%88%99%E5%87%BA%E9%94%99%E3%80%82">C++二维数组初始化的形式 - 腾讯云开发者社区-腾讯云</a></li>
</ol>
</blockquote>
<h3 id="c中h头文件和cpp源文件应该写什么"><a class="markdownIt-Anchor" href="#c中h头文件和cpp源文件应该写什么"></a> C++中<code>.h</code>头文件和<code>.cpp</code>源文件应该写什么</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/fenghuan/p/4794514.html">C++中头文件（.h）和源文件（.cpp）都应该写些什么 - fenghuan - 博客园</a></li>
<li><a href="https://stackoverflow.com/questions/51117196/undefined-reference-error-in-vscode">c - undefined reference error in VScode - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/17904643/error-with-multiple-definitions-of-function">c++ - Error with multiple definitions of function - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="c代码风格"><a class="markdownIt-Anchor" href="#c代码风格"></a> C++代码风格</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://oi.men.ci/code-style-oi/">Menci’s Code Style for OI | Menci’s OI Blog</a></li>
<li><a href="https://google.github.io/styleguide/cppguide.html">Google C++ Style Guide</a></li>
<li><a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/contents/">C++ 风格指南 - 内容目录 — Google 开源项目风格指南</a></li>
</ol>
</blockquote>
<h3 id="c-ipch文件夹和ipch文件"><a class="markdownIt-Anchor" href="#c-ipch文件夹和ipch文件"></a> C++ ipch文件夹和.ipch文件</h3>
<p>在<code>C:\Users\26899\AppData\Local\Microsoft\vscode-cpptools\ipch</code>目录下有打量了的C++ Precompiled headers，这些可以安全删除</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/2757402/is-it-safe-to-delete-the-ipch-folder-precompiled-headers">visual studio 2010 - Is it safe to delete the “ipch” folder - Precompiled headers? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="c中和的区别"><a class="markdownIt-Anchor" href="#c中和的区别"></a> C++中&amp;和&amp;&amp;的区别</h3>
<p><code>||</code>和<code>&amp;&amp;</code>为逻辑运算符；<code>|</code>和<code>&amp;</code>为位运算符。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/note/34429">| 和 ||，&amp; 和 &amp;&amp; 的区别</a></li>
</ol>
</blockquote>
<h3 id="c遍历map"><a class="markdownIt-Anchor" href="#c遍历map"></a> C++遍历map</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> i = map_s.<span class="built_in">begin</span>(); i != map_s.<span class="built_in">end</span>(); i++)&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="type">map_t</span>[i-&gt;first] != i-&gt;second)&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/26281979/c-loop-through-map">dictionary - C++ Loop through Map - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>CS学习指南整理</title>
    <url>/2022/08/15/CS%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文汇总一下目前位置本人接触到的比较好的学习资料：</p>
<span id="more"></span>
<h3 id="学习规划"><a class="markdownIt-Anchor" href="#学习规划"></a> 学习规划</h3>
<ol>
<li><a href="https://csdiy.wiki/">CS自学指南</a>：搭配<a href="https://hkn.eecs.berkeley.edu/courseguides">UCB cs roadmap</a>使用更佳</li>
<li><a href="https://inst.eecs.berkeley.edu/classes-eecs.html">EECS Course WEB Sites</a>：UCB的EE和CS课程归档。</li>
<li><a href="http://norvig.com/21-days.html">Teach Yourself Programming in Ten Years</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/30742986">Teach Yourself Programming in Ten Years中文版</a></li>
<li><a href="https://www.yuque.com/0xffff.one/cs-learning">0xFFFF CS Wiki</a></li>
<li><a href="https://wiki.0xffff.one/">0xFFFF Wiki</a></li>
<li><a href="https://github.com/izackwu/TeachYourselfCS-CN/blob/master/TeachYourselfCS-CN.md">TeachYourselfCS-CN</a></li>
<li><a href="https://www.reddit.com/r/learnprogramming/wiki/faq/">learning programming</a></li>
<li><a href="https://roadmap.sh/">Developer Roadmaps</a></li>
<li><a href="https://time.geekbang.org/column/article/8216?code=%20HH8ceM6XIVutB%2F1Oj496tkAnq4o7HBjSZf%20t0Wy4qM%3D">程序员练级攻略</a></li>
<li><a href="https://honeysuckle-terrier-6c8.notion.site/CS-4b9f59acd3a64bf8916f834d0c7f25ea">Notion – The all-in-one workspace for your notes, tasks, wikis, and databases.</a></li>
<li><a href="https://hackway.org/docs/cs/intro">计算机专业学习路线 | HackWay技术学习路线</a></li>
</ol>
<h3 id="课程整理"><a class="markdownIt-Anchor" href="#课程整理"></a> 课程整理</h3>
<ol>
<li><a href="https://csdiy.wiki/">CS自学指南</a></li>
<li><a href="https://conanhujinming.github.io/comments-for-awesome-courses/index.html">名校公开课程评价网</a></li>
<li><a href="https://www.mcatin.com/index">MCATIN</a></li>
<li><a href="https://www.zhihu.com/question/22436320/answer/32477238">Coursera 上有哪些课程值得推荐</a></li>
<li><a href="https://inst.eecs.berkeley.edu/classes-eecs.html">EECS Course WEB Sites</a></li>
<li><a href="https://hkn.eecs.berkeley.edu/courseguides">UCB cs roadmap</a></li>
<li><a href="https://program-think.blogspot.com/2021/05/share-books.html">分享各类电子书（政治、IT、科普、历史、等，97本）</a></li>
<li><a href="https://www.coursicle.com/mit/courses/6/">6 courses at Massachusetts Institute of Technology | Coursicle MIT</a>：MIT课程</li>
</ol>
<h3 id="刷题"><a class="markdownIt-Anchor" href="#刷题"></a> 刷题</h3>
<h4 id="leetcode"><a class="markdownIt-Anchor" href="#leetcode"></a> leetcode</h4>
<ol>
<li><a href="https://github.com/doocs/leetcode/blob/main/solution/README.md">leetcode/README.md at main · doocs/leetcode · GitHub</a>：leetcode按序排列</li>
<li><a href="https://github.com/doocs/leetcode/blob/main/solution/CONTEST_README.md">leetcode/CONTEST_README.md at main · doocs/leetcode · GitHub</a>：leetcode周赛</li>
<li><a href="https://github.com/doocs/leetcode/blob/main/lcof/README.md">leetcode/README.md at main · doocs/leetcode · GitHub</a>：剑指offer第二版系列</li>
<li><a href="https://github.com/doocs/leetcode/blob/main/lcof2/README.md">leetcode/README.md at main · doocs/leetcode · GitHub</a>：剑指offer (专项突击版)</li>
<li><a href="https://github.com/doocs/leetcode/blob/main/lcci/README.md">leetcode/README.md at main · doocs/leetcode · GitHub</a>：程序员面试金典第6版</li>
<li><a href="https://neetcode.io/roadmap">Roadmap</a>：leetcode刷题Roadmap</li>
<li><a href="https://leetcode.cn/progress/">力扣</a>：个人leetcode做题分析，用于生成anki card</li>
<li><a href="https://leetcode.cn/u/johnkram/">johnkram - 力扣（LeetCode）</a>：清华汪乐平主页，可以学习leetcode代码风格</li>
</ol>
<h4 id="codeforces"><a class="markdownIt-Anchor" href="#codeforces"></a> CodeForces</h4>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/42106537">【洛谷日报#19】Codeforces游玩攻略 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/71674596">【洛谷日报#116】Codeforces快速精通 - 知乎</a></li>
<li><a href="https://www.bilibili.com/video/BV1tT4y1e7nG">sublime text 4 刷题一键配置FastOlympicCoding FiraCode gcc-11.2.0(c++20)_哔哩哔哩_bilibili</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/104963169">算法竞赛编程变量命名指南 - 知乎</a></li>
<li><a href="https://unbug.github.io/codelf/">CODELF</a>：变量命名搜索</li>
<li><a href="https://codeforces.com/submissions/jiangly">Personal submissions - Codeforces</a>：jiangly submissions主页，可以查看其submissions学习代码风格</li>
<li><a href="https://codeforces.com/submissions/tourist">Personal submissions - Codeforces</a>：tourist submissions主页</li>
</ol>
<h3 id="开拓视野"><a class="markdownIt-Anchor" href="#开拓视野"></a> 开拓视野</h3>
<ol>
<li><a href="https://fwjmath.wordpress.com/recommended-list/">《计算的极限》等文章索引</a></li>
<li><a href="https://aosabook.org/en/index.html">The Architecture of Open Source Applications</a></li>
<li><a href="https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/">《category-theory-for-programmers》</a></li>
</ol>
<h3 id="综合类学习站点"><a class="markdownIt-Anchor" href="#综合类学习站点"></a> 综合类学习站点</h3>
<ol>
<li><a href="https://hepsoftwarefoundation.org/training/curriculum.html">HSF Software Training Center</a></li>
<li><a href="https://www.javatpoint.com/">javatpoint</a></li>
<li><a href="https://www.tutorialspoint.com/index.htm">tutorialspoint</a></li>
<li><a href="https://www.tuthub.io/">TutHub.io</a></li>
<li><a href="https://docs.w3cub.com/vite/">W3cubDocs</a>：整理了各大流行项目的Guide/API/Configuration等</li>
<li><a href="https://devdocs.io/">devdocs</a></li>
<li><a href="https://wangdoc.com/">网道</a></li>
<li><a href="https://www.runoob.com/">菜鸟教程</a></li>
<li><a href="https://www.w3cschool.cn/">W3Cschool</a></li>
<li><a href="https://zetcode.com/all/">ZetCode</a></li>
<li><a href="https://oi-wiki.org/">OI Wiki</a></li>
<li><a href="https://www.geeksforgeeks.org/">GeeksForGeeks</a></li>
<li><a href="https://steshaw.org/plt/">PLT by steshaw</a></li>
</ol>
<h3 id="有趣站点"><a class="markdownIt-Anchor" href="#有趣站点"></a> 有趣站点</h3>
<ol>
<li><a href="https://iep.utm.edu/">互联网哲学百科</a></li>
<li><a href="https://rosettacode.org/wiki/Rosetta_Code">Rosetta Code</a>：用不同的语言解决相同的问题</li>
<li><a href="https://literateprograms.org/">LiteratePrograms:Welcome - LiteratePrograms</a>：同上</li>
</ol>
<h3 id="好用工具"><a class="markdownIt-Anchor" href="#好用工具"></a> 好用工具</h3>
<ol>
<li><a href="http://www.moreofit.com/">moreofit</a>：查找相似的网站</li>
<li><a href="https://cs.github.com/?scopeName=All+repos&amp;scope=&amp;q=">GitHub Code Search</a>：搜索GitHub中的代码，可指定仓库</li>
<li><a href="https://kaifa.baidu.com/">开发者搜索</a>：用于搜索GitHub上的目标仓库</li>
<li><a href="https://endoflife.date/">流行项目生命周期</a>：整理各种流行的大型项目的生命周期，从发布、更新到死亡</li>
<li><a href="https://www.tuthub.io/">TutHub.io</a>：其宗旨为不要在不好的编程教程上浪费时间，可以用来搜索免费和付费的编程教程</li>
<li><a href="https://m3o.com/explore">General APIs</a>：整理收集了各种通用API</li>
<li><a href="https://www.libhunt.com/">LibHunt - Trending open-source projects and their alternatives</a>：对比相似的github仓库</li>
</ol>
<h3 id="百科"><a class="markdownIt-Anchor" href="#百科"></a> 百科</h3>
<ol>
<li><a href="https://www.britannica.com/science/">Britannica</a></li>
</ol>
<h3 id="入门资料收集"><a class="markdownIt-Anchor" href="#入门资料收集"></a> 入门资料收集</h3>
<p>用于上手项目，快速入门</p>
<ol>
<li><a href="https://pan.baidu.com/share/init?surl=Kg7UUpO3wwALX6x28cWA7A#list/path=%2F%E5%B0%9A%E7%A1%85%E8%B0%B7Java%E5%AD%A6%E7%A7%91%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%EF%BC%88%E6%80%BB207.77GB%EF%BC%89">尚硅谷Java学科全套教程（8op3）</a></li>
<li><a href="https://pan.baidu.com/share/init?surl=LxIxcHDO7SYB96SE-GZfuQ#list/path=%2Fsharelink3232509500-994016065012907%2Fjava%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B2021&amp;parentPath=%2Fsharelink3232509500-994016065012907">Java视频教程2021_黑马（dor4）</a></li>
<li><a href="https://pan.baidu.com/share/init?surl=oPdzQ7vO2bivTYtttD1jfw#list/path=%2F&amp;parentPath=%2Fsharelink3232509500-1002206530988551">Java精品视频教程_黑马（1234）</a></li>
<li><a href="https://pan.baidu.com/share/init?surl=5yVOafBdEz3VU6hvYCOsYA#list/path=%2Fsharelink3232509500-464559482111384%2F2022%E6%9C%80%E6%96%B0%E7%89%88%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E5%9B%BE&amp;parentPath=%2Fsharelink3232509500-464559482111384">2022最新版黑马程序员前端（1234）</a></li>
<li><a href="https://www.bilibili.com/read/cv5216534?spm_id_from=333.999.0.0">2022年度全网最全Java学习路线（尚硅谷）</a></li>
<li><a href="https://www.bilibili.com/read/cv9965357?from=articleDetail">2022黑马程序员Java学习路线图（黑马）</a></li>
<li><a href="https://www.bilibili.com/read/cv10431130">2022年web前端开发学习路线图（黑马）</a></li>
</ol>
<h3 id="进阶资料收集"><a class="markdownIt-Anchor" href="#进阶资料收集"></a> 进阶资料收集</h3>
<p>用于扩展眼界，获得更好的技术视野</p>
<ol>
<li><a href="https://okmij.org/ftp/">okmij’s Index</a></li>
<li><a href="https://www.smsunarto.com/web3">Working in Web3: The Handbook</a></li>
<li><a href="https://cloud.189.cn/web/share?code=yIbuMnUFjmYz">极客实践课程（c8hx）</a></li>
<li><a href="https://zh-google-styleguide.readthedocs.io/en/latest/">Google开源项目风格指南</a></li>
</ol>
<h3 id="代码风格规范style-guide"><a class="markdownIt-Anchor" href="#代码风格规范style-guide"></a> 代码风格规范(Style Guide)</h3>
<ol>
<li><a href="https://github.com/google/styleguide">styleguide</a></li>
<li><a href="http://styleguides.io/">Website Style Guide Resources</a></li>
</ol>
<h3 id="编辑器"><a class="markdownIt-Anchor" href="#编辑器"></a> 编辑器</h3>
<ol>
<li><a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org">一年成为Emacs高手 (像神一样使用编辑器)</a></li>
</ol>
<h3 id="八股文"><a class="markdownIt-Anchor" href="#八股文"></a> 八股文</h3>
<ol>
<li><a href="https://interviewguide.cn/">阿秀的学习笔记</a></li>
</ol>
<h3 id="前端"><a class="markdownIt-Anchor" href="#前端"></a> 前端</h3>
<ol>
<li><a href="https://q.shanyue.tech/engineering/">前言 | 大厂面试题每日一题</a>：程序员山月整理的资料</li>
</ol>
<h3 id="web3"><a class="markdownIt-Anchor" href="#web3"></a> Web3</h3>
<ol>
<li><a href="https://ethereum.org/en/developers/docs/design-and-ux/">Design and UX in web3 | ethereum.org</a>：以太坊整理的Web3领域设计资源</li>
</ol>
<h3 id="找工作网站"><a class="markdownIt-Anchor" href="#找工作网站"></a> 找工作网站</h3>
<ol>
<li><a href="https://www.indeed.com/q-Java-jobs.html?vjk=dd38219803504422">Flexible Java Jobs | Indeed.com</a></li>
<li><a href="https://web3.career/rust-jobs">Rust Jobs in Web3 - Dec 2022</a></li>
<li><a href="https://rustjobs.dev/">Rust Jobs | RustJobs.dev</a></li>
<li><a href="https://www.rubyjobboard.com/newest-ruby-on-rails-jobs">Newest Ruby On Rails Jobs | Ruby Job Board</a></li>
<li><a href="https://functional.works-hub.com/">Functional Works</a></li>
</ol>
<h3 id="coursera课程整理"><a class="markdownIt-Anchor" href="#coursera课程整理"></a> Coursera课程整理：</h3>
<h4 id="meta-back-end-developer-专业证书"><a class="markdownIt-Anchor" href="#meta-back-end-developer-专业证书"></a> <a href="https://www.coursera.org/professional-certificates/meta-back-end-developer?">Meta Back-End Developer 专业证书</a></h4>
<p>其包含以下课程：</p>
<ol>
<li><a href="https://www.coursera.org/learn/introduction-to-back-end-development?specialization=meta-back-end-developer">Introduction to Back-End Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/programming-in-python?specialization=meta-back-end-developer">Programming in Python | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/introduction-to-version-control?specialization=meta-back-end-developer">Version Control | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/intro-to-databases-back-end-development?specialization=meta-back-end-developer">Introduction to Databases for Back-End Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/django-web-framework?specialization=meta-back-end-developer">Django Web Framework | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/apis?specialization=meta-back-end-developer">APIs | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/the-full-stack?specialization=meta-back-end-developer">The Full Stack | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/back-end-developer-capstone?specialization=meta-back-end-developer">Back-End Developer Capstone | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/coding-interview-preparation?specialization=meta-back-end-developer">Coding Interview Preparation | Coursera</a></li>
</ol>
<h4 id="ibm-back-end-development-专业证书"><a class="markdownIt-Anchor" href="#ibm-back-end-development-专业证书"></a> <a href="https://www.coursera.org/professional-certificates/ibm-backend-development">IBM Back-End Development 专业证书</a></h4>
<p>其包含以下课程：</p>
<ol>
<li><a href="https://www.coursera.org/learn/introduction-to-software-engineering?specialization=ibm-backend-development">Introduction to Software Engineering | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/hands-on-introduction-to-linux-commands-and-shell-scripting?specialization=ibm-backend-development">Hands-on Introduction to Linux Commands and Shell Scripting | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/getting-started-with-git-and-github?specialization=ibm-backend-development">Getting Started with Git and GitHub | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/python-for-applied-data-science-ai?specialization=ibm-backend-development">Python for Data Science, AI &amp; Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/python-project-for-ai-application-development?specialization=ibm-backend-development">Python Project for AI &amp; Application Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/developing-applications-with-sql-databases-and-django?specialization=ibm-backend-development">Developing Applications with SQL, Databases, and Django | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/ibm-containers-docker-kubernetes-openshift?specialization=ibm-backend-development">Introduction to Containers w/ Docker, Kubernetes &amp; OpenShift | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/applications-development-microservices-serverless-openshift?specialization=ibm-backend-development">Application Development using Microservices and Serverless | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/application-security-and-monitoring?specialization=ibm-backend-development">Application Security and Monitoring | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/backend-development-capstone-project?specialization=ibm-backend-development">Back-end Application Development Capstone Project | Coursera</a></li>
</ol>
<h4 id="meta-front-end-developer-专业证书"><a class="markdownIt-Anchor" href="#meta-front-end-developer-专业证书"></a> <a href="https://www.coursera.org/professional-certificates/meta-front-end-developer">Meta Front-End Developer 专业证书</a></h4>
<ol>
<li><a href="https://www.coursera.org/learn/introduction-to-front-end-development?specialization=meta-front-end-developer">Introduction to Front-End Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/programming-with-javascript?specialization=meta-front-end-developer">Programming with JavaScript | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/introduction-to-version-control?specialization=meta-front-end-developer">Version Control | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/html-and-css-in-depth?specialization=meta-front-end-developer">HTML and CSS in depth | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/react-basics?specialization=meta-front-end-developer">React Basics | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/advanced-react?specialization=meta-front-end-developer">Advanced React | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/principles-of-ux-ui-design?specialization=meta-front-end-developer">Principles of UX/UI Design | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/meta-front-end-developer-capstone?specialization=meta-front-end-developer">Front-End Developer Capstone | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/coding-interview-preparation?specialization=meta-front-end-developer">Coding Interview Preparation | Coursera</a></li>
</ol>
<h4 id="meta-android-developer-专业证书"><a class="markdownIt-Anchor" href="#meta-android-developer-专业证书"></a> <a href="https://www.coursera.org/professional-certificates/meta-android-developer">Meta Android Developer 专业证书</a></h4>
<ol>
<li><a href="https://www.coursera.org/learn/introduction-to-android-mobile-application-development?specialization=meta-android-developer">Introduction to Android Mobile Application Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/introduction-to-version-control?specialization=meta-android-developer">Version Control | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/meta-programming-fundamentals-kotlin?specialization=meta-android-developer">Programming Fundamentals in Kotlin | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/principles-of-ux-ui-design?specialization=meta-android-developer">Principles of UX/UI Design | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/create-the-user-interface-android-studio?specialization=meta-android-developer">Create the User Interface in Android Studio | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/advanced-programming-in-kotlin?specialization=meta-android-developer">Advanced Programming in Kotlin | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/working-with-data-in-android?specialization=meta-android-developer">Working with Data in Android | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/mobile-development-and-javascript?specialization=meta-android-developer">Mobile Development and JavaScript | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/react-basics?specialization=meta-android-developer">React Basics | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/react-native-course?specialization=meta-android-developer">React Native | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/android-app-capstone?specialization=meta-android-developer">Android App Capstone | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/coding-interview-preparation?specialization=meta-android-developer">Coding Interview Preparation | Coursera</a></li>
</ol>
<h4 id="meta-ios-developer-专业证书"><a class="markdownIt-Anchor" href="#meta-ios-developer-专业证书"></a> <a href="https://www.coursera.org/professional-certificates/meta-ios-developer?specialization=ibm-full-stack-cloud-developer">Meta iOS Developer 专业证书</a></h4>
<p>其包含以下课程：</p>
<ol>
<li><a href="https://www.coursera.org/learn/introduction-to-ios-mobile-application-development?specialization=meta-ios-developer">Introduction to iOS Mobile Application Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/introduction-to-version-control?specialization=meta-ios-developer">Version Control | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/programming-fundamentals-swift?specialization=meta-ios-developer">Programming Fundamentals in Swift | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/principles-of-ux-ui-design?specialization=meta-ios-developer">Principles of UX/UI Design | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/create-the-user-interface-with-swiftui?specialization=meta-ios-developer">Create the User Interface with SwiftUI | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/advanced-programming-in-swift?specialization=meta-ios-developer">Advanced Programming in Swift | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/working-with-data-in-ios?specialization=meta-ios-developer">Working with Data in iOS | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/mobile-development-and-javascript?specialization=meta-ios-developer">Mobile Development and JavaScript | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/react-basics?specialization=meta-ios-developer">React Basics | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/react-native-course?specialization=meta-ios-developer">React Native | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/ios-app-capstone?specialization=meta-ios-developer">iOS App Capstone | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/coding-interview-preparation?specialization=meta-ios-developer">Coding Interview Preparation | Coursera</a></li>
</ol>
<h4 id="ibm-full-stack-software-developer-专业证书"><a class="markdownIt-Anchor" href="#ibm-full-stack-software-developer-专业证书"></a> <a href="https://www.coursera.org/professional-certificates/ibm-full-stack-cloud-developer">IBM Full Stack Software Developer 专业证书</a></h4>
<p>其包含以下课程：</p>
<ol>
<li><a href="https://www.coursera.org/learn/introduction-to-cloud?specialization=ibm-full-stack-cloud-developer">Introduction to Cloud Computing | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/introduction-to-web-development-with-html-css-javacript?specialization=ibm-full-stack-cloud-developer">Introduction to Web Development with HTML, CSS, JavaScript | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/getting-started-with-git-and-github?specialization=ibm-full-stack-cloud-developer">Getting Started with Git and GitHub | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/developing-frontend-apps-with-react?specialization=ibm-full-stack-cloud-developer">Developing Front-End Apps with React | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/developing-backend-apps-with-nodejs-and-express?specialization=ibm-full-stack-cloud-developer">Developing Back-End Apps with Node.js and Express | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/python-for-applied-data-science-ai?specialization=ibm-full-stack-cloud-developer">Python for Data Science, AI &amp; Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/python-project-for-ai-application-development?specialization=ibm-full-stack-cloud-developer">Python Project for AI &amp; Application Development | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/developing-applications-with-sql-databases-and-django?specialization=ibm-full-stack-cloud-developer">Developing Applications with SQL, Databases, and Django | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/ibm-containers-docker-kubernetes-openshift?specialization=ibm-full-stack-cloud-developer">Introduction to Containers w/ Docker, Kubernetes &amp; OpenShift | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/applications-development-microservices-serverless-openshift?specialization=ibm-full-stack-cloud-developer">Application Development using Microservices and Serverless | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/ibm-cloud-native-full-stack-development-capstone?specialization=ibm-full-stack-cloud-developer">Full Stack Cloud Development Capstone Project | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/full-stack-software-developer-assessment?specialization=ibm-full-stack-cloud-developer">Full Stack Software Developer Assessment | Coursera</a></li>
</ol>
<h3 id="rice大学-fundamentals-of-computing-coursera"><a class="markdownIt-Anchor" href="#rice大学-fundamentals-of-computing-coursera"></a> Rice大学 <a href="https://www.coursera.org/specializations/computer-fundamentals">Fundamentals of Computing | Coursera</a></h3>
<p>其包含：</p>
<ol>
<li><a href="https://www.coursera.org/learn/interactive-python-1?specialization=computer-fundamentals">An Introduction to Interactive Programming in Python (Part 1) | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/interactive-python-2?specialization=computer-fundamentals">An Introduction to Interactive Programming in Python (Part 2) | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/principles-of-computing-1?specialization=computer-fundamentals">Principles of Computing (Part 1) | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/principles-of-computing-2?specialization=computer-fundamentals">Principles of Computing (Part 2) | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/algorithmic-thinking-1?specialization=computer-fundamentals">Algorithmic Thinking (Part 1) | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/algorithmic-thinking-2?specialization=computer-fundamentals">Algorithmic Thinking (Part 2) | Coursera</a></li>
<li><a href="https://www.coursera.org/learn/fundamentals-of-computing-capstone?specialization=computer-fundamentals">The Fundamentals of Computing Capstone Exam | Coursera</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>指南</tag>
      </tags>
  </entry>
  <entry>
    <title>CV系列文章和工具</title>
    <url>/2022/09/09/CV%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E5%92%8C%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>本文整理一下CV系列的文章，其包括本人博客中的文章和在互联网上收集的他人的文章：</p>
<span id="more"></span>
<h3 id="知识点"><a class="markdownIt-Anchor" href="#知识点"></a> 知识点</h3>
<ol>
<li><a href="https://tom89757.github.io/2022/05/16/Pytorch%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/">Pytorch中知识点01</a></li>
<li><a href="https://tom89757.github.io/2022/06/03/Pytorch%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B902/">Pytorch中知识点02</a></li>
<li><a href="https://tom89757.github.io/2022/06/02/OpenCV%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/">OpenCV中知识点01</a></li>
<li><a href="https://tom89757.github.io/2022/06/03/matplotlib%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/">matplotlib中知识点01</a></li>
<li><a href="https://tom89757.github.io/2022/07/05/python%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/">python中知识点01</a></li>
</ol>
<h3 id="文档"><a class="markdownIt-Anchor" href="#文档"></a> 文档</h3>
<ol>
<li><a href="https://tom89757.github.io/2022/07/04/Pytorch%E6%96%87%E6%A1%A301/">Pytorch文档01</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch-nn-Module/">PyTorch nn.Module</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch-saving-and-loading-models/">PyTorch saving and loading models</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch-torch-utils-data/">PyTorch torch.utils.data</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch-%E4%BC%98%E5%8C%96%E5%99%A8/">PyTorch 优化器</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch-%E6%8D%9F%E5%A4%B1/">PyTorch 损失</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch-Module-subclasses/">PyTorch Module subclasses</a></li>
<li><a href="https://tom89757.github.io/2022/07/20/PyTorch%E6%95%B0%E6%8D%AE%E9%87%87%E6%A0%B7/">PyTorch数据采样</a>、</li>
<li><a href="https://tom89757.github.io/2022/08/06/PyTorch-TensorBoard/">PyTorch TensorBoard</a></li>
</ol>
<h3 id="工具和实践"><a class="markdownIt-Anchor" href="#工具和实践"></a> 工具和实践</h3>
<ol>
<li><a href="https://tom89757.github.io/2022/08/07/PyTorch%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%9E%E8%B7%B5/">PyTorch可视化实践</a></li>
<li><a href="https://github.com/HarisIqbal88/PlotNeuralNet">PlotNeuralNet</a>：神经网络画图</li>
<li><a href="https://github.com/median-research-group/LibMTL">LibMTL</a>：多任务学习工具，可以用来平衡多个损失，A Pytorch Library for Multi-task Learning</li>
<li><a href="https://github.com/jacobgil/pytorch-grad-cam">pytorch-grad-cam</a>：在PyTorch中对特征图进行CAM可视化的工具</li>
<li>[Tutorial: Class Activation Maps for Semantic Segmentation]：对语义分割网络进行CAM可视化教程。</li>
<li><a href="https://zhuanlan.zhihu.com/p/269702192">万字长文：特征可视化技术(CAM)</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzkyMDE2OTA3Mw==&amp;mid=2247485006&amp;idx=1&amp;sn=5991ec380dd97a0f0fb3337b9df4abc5&amp;chksm=c197b950f6e0304641c2cacdcc45925e526f6a1187943fb1eca26dfaaf516ca71c4988097eb9&amp;scene=21#wechat_redirect">CNN可视化技术总结（三）——类可视化</a></li>
</ol>
<h3 id="graph-neural-networks"><a class="markdownIt-Anchor" href="#graph-neural-networks"></a> Graph Neural Networks</h3>
<blockquote>
<ol>
<li><a href="https://towardsdatascience.com/a-beginners-guide-to-graph-neural-networks-using-pytorch-geometric-part-1-d98dc93e7742">A Beginner’s Guide to Graph Neural Networks Using PyTorch Geometric — Part 1</a></li>
<li><a href="https://towardsdatascience.com/a-beginners-guide-to-graph-neural-networks-using-pytorch-geometric-part-2-cd82c01330ab">A Beginner’s Guide to Graph Neural Networks Using PyTorch Geometric — Part 2</a></li>
<li><a href="https://www.cnblogs.com/SivilTaram/p/graph_neural_network_1.html">从图(Graph)到图卷积(Graph Convolution)：漫谈图神经网络模型 (一)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/89503068">一文读懂图卷积GCN</a></li>
</ol>
</blockquote>
<h3 id="推荐文章"><a class="markdownIt-Anchor" href="#推荐文章"></a> 推荐文章</h3>
<h4 id="不确定性"><a class="markdownIt-Anchor" href="#不确定性"></a> 不确定性</h4>
<ol>
<li><a href="https://jasonguojz.github.io/blog/2020/07/28/What%20Uncertainties%20Do%20We%20Need%20in%20Bayesian%20DeepLearning%20for%20Computer%20Vision/">What Uncertainties Do We Need in Bayesian DeepLearning for Computer Vision? | Guo Jiazhen’s Blog</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/130220572">IJCV | 利用Uncertainty修正Domain Adaptation中的伪标签 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/430849602">读 What Uncertainties Do We Need in Bayesian Deep Learning for Computer Vision? - 知乎</a></li>
</ol>
<h4 id="半监督学习"><a class="markdownIt-Anchor" href="#半监督学习"></a> 半监督学习</h4>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/161449559">计算机视觉中的半监督学习 - 知乎</a></li>
</ol>
<h4 id="扩散模型"><a class="markdownIt-Anchor" href="#扩散模型"></a> 扩散模型</h4>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/563543020">如何通俗理解扩散模型？ - 知乎</a></li>
</ol>
<h3 id="注意力机制"><a class="markdownIt-Anchor" href="#注意力机制"></a> 注意力机制</h3>
<ol>
<li><a href="https://www.zhihu.com/question/519290359/answer/2666328351">注意力机制到底是什么？ - 知乎</a></li>
</ol>
<h3 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h3>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/35709485">损失函数｜交叉熵损失函数 - 知乎</a>：交叉熵损失函数</li>
</ol>
<h3 id="conditional-random-fields-crfs"><a class="markdownIt-Anchor" href="#conditional-random-fields-crfs"></a> Conditional Random Fields (CRFs)</h3>
<ol>
<li>[Conditional Random Fields: A 2021 Overview | Jigsaw Academy](<a href="https://www.jigsawacademy.com/blogs/data-science/conditional-random-fields#:~:text=A%20conditional%20random%20field%20(CRF,data%20for%20adding%20the%20information.)">https://www.jigsawacademy.com/blogs/data-science/conditional-random-fields#:~:text=A conditional random field (CRF,data for adding the information.)</a></li>
<li><a href="http://guoxs.github.io/Blog/2018/03/10/CRF/">语义分割中 CRF 的运用 | Mooyu’s Blog</a></li>
</ol>
<h3 id="推荐博客"><a class="markdownIt-Anchor" href="#推荐博客"></a> 推荐博客</h3>
<ol>
<li><a href="https://jalammar.github.io/">The Illustrated Series</a>：：作者通过自制动画解释各种模型架构。（英文）</li>
<li><a href="https://spaces.ac.cn/category/Big-Data">科学空间</a>：偏数学推导，较为硬核。（中文）</li>
<li><a href="https://jasonguojz.github.io/blog/">Guo Jiazhen’s Blog</a>：主要是对一些深度学习理论文章的翻译</li>
<li><a href="https://zhuanlan.zhihu.com/p/22464594">无痛的机器学习第一季目录 - 知乎</a></li>
</ol>
<h3 id="动手学"><a class="markdownIt-Anchor" href="#动手学"></a> 动手学</h3>
<h4 id="实现深度学习框架"><a class="markdownIt-Anchor" href="#实现深度学习框架"></a> 实现深度学习框架</h4>
<ol>
<li><a href="https://www.zhihu.com/question/329235391/answer/1197486431">想学着自己实现一个深度学习框架该如何入手？ - 知乎</a></li>
</ol>
<h3 id="开源书籍"><a class="markdownIt-Anchor" href="#开源书籍"></a> 开源书籍</h3>
<ol>
<li><a href="https://esl.hohoweiya.xyz/">ESL CN</a>：(<a href="https://book.douban.com/subject/3294335/">The Elements of Statistical Learning) (豆瓣)</a>的中文开源版</li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Charles配置</title>
    <url>/2022/07/27/Charles%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录以下Charles配置中的一些tips：</p>
<span id="more"></span>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/36128215/charles-ssl-certificate-download-failed-due-to-network-failures">Charles ssl certificate download failed “due to network failures”</a></li>
<li><a href="https://stackoverflow.com/questions/17823434/ssl-proxy-charles-and-android-trouble">SSL Proxy/Charles and Android trouble [closed]</a></li>
<li><a href="https://community.tealiumiq.com/t5/Tealium-for-Android/Setting-up-Charles-to-Proxy-your-Android-Device/ta-p/5121">Setting up Charles to Proxy your Android Device</a></li>
<li><a href="https://blog.csdn.net/u014540814/article/details/80518208">Android手机安装.pem证书文件</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Charles</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Develop a Compiler</title>
    <url>/2021/07/15/How-To-Develop-a-Compiler/</url>
    <content><![CDATA[<p>本文主要记录一下在阅读《自制编译器》并实现一个简化版的C语言编译器过程中所踩过的坑。</p>
<span id="more"></span>
<h2 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h2>
<h3 id="运行系统"><a class="markdownIt-Anchor" href="#运行系统"></a> 运行系统</h3>
<p>由于本人只有一台配置落后的笔记本，书中要求的运行系统又是Linux，故采取了windows安装WSL的方案，具体见 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">在windows上安装WSL</a> 。</p>
<ul>
<li>windows版本：windows10 19043.1110</li>
<li>WSL版本：Ubuntu 20.04.2 LTS</li>
</ul>
<h3 id="安装软件和依赖"><a class="markdownIt-Anchor" href="#安装软件和依赖"></a> 安装软件和依赖</h3>
<p>书中并未要求安装gcc，由于后续可能需要进行所实现的编译器Cb和gcc的比对，决定安装gcc。安装流程为（见 <a href="https://stackoverflow.com/questions/62215963/how-to-install-gcc-and-gdb-for-wslwindows-subsytem-for-linux">安装gcc</a>）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</span><br><span class="line">sudo apt autoremove -y</span><br><span class="line">sudo apt-get install gcc -y</span><br></pre></td></tr></table></figure>
<ul>
<li>gcc版本：gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0</li>
</ul>
<p>书中要求安装JRE 1.5以上版本和Java编程器。安装流程为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-11-jdk</span><br></pre></td></tr></table></figure>
<ul>
<li>Java版本：openjdk 11.0.11</li>
</ul>
<h3 id="安装书中实现的编译器cb"><a class="markdownIt-Anchor" href="#安装书中实现的编译器cb"></a> 安装书中实现的编译器Cb</h3>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>编译器</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker常用操作</title>
    <url>/2022/07/27/Docker%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>本文记录一下使用Docker容器时的常见操作：</p>
<span id="more"></span>
<p>1.查看docker中安装部署的所有容器：<code>docker ps -a</code>。</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727111314196.png" alt="image-20220727111314196" /></p>
</br>
<p>2.Docker配置镜像加速：</p>
<ul>
<li>
<p>从 <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">阿里云</a> 获取镜像加速地址，会得到如下个人镜像加速地址</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727111855809.png" alt="image-20220727111855809" /></p>
</li>
<li>
<p>在Windows 10上安装的Docker Desktop中，进入<code>settings-&gt;Docker Engine</code>。编辑右侧json格式的configuration文件如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727112129610.png" alt="image-20220727112129610" /></p>
</li>
<li>
<p>点击<code>Apply &amp; Restart</code>。此时系统会要求注销当前账号，然后重新登录，同意即可，此时镜像即配置成功。</p>
</li>
<li>
<p>验证：在任意地方打开<code>git bash</code>或者<code>cmd</code>窗口，输入<code>docker info</code>命令回车，可以看到如下信息：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727112341200.png" alt="image-20220727112341200" /></p>
<p>表示配置成功。</p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/docker/docker-mirror-acceleration.html">Docker 镜像加速</a></li>
</ol>
</blockquote>
</br>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Java知识点01</title>
    <url>/2022/08/15/Java%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下与Java相关的一些知识点：</p>
<span id="more"></span>
<h3 id="属性和方法签名"><a class="markdownIt-Anchor" href="#属性和方法签名"></a> 属性和方法签名</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://morrisware01.gitbooks.io/android-learning-note/content/ndkkai-fa-zhi-lv/jniji-chu/shu-xing-yu-fang-fa-qian-ming.html?q=">关于属性与方法的签名</a></li>
</ol>
</blockquote>
<h3 id="idea将-java-项目打包成-jar-包"><a class="markdownIt-Anchor" href="#idea将-java-项目打包成-jar-包"></a> IDEA将 Java 项目打包成 Jar 包</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://juejin.cn/post/7031717860003020814">IDEA 将普通 Java 项目打包成 Jar 包并运行</a></li>
</ol>
</blockquote>
<h3 id="exe4j将jar包转换为可执行文件"><a class="markdownIt-Anchor" href="#exe4j将jar包转换为可执行文件"></a> exe4j将jar包转换为可执行文件</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/jepson6669/p/9211208.html">exe4j安装及注册</a></li>
<li><a href="https://blog.csdn.net/weixin_45149355/article/details/106839486">idea打包java项目成exe可执行文件</a></li>
</ol>
</blockquote>
<h3 id="从pomxml导入项目"><a class="markdownIt-Anchor" href="#从pomxml导入项目"></a> 从pom.xml导入项目</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://sp21.datastructur.es/materials/lab/lab2setup/lab2setup">Lab 2 Setup: Library Setup</a></li>
</ol>
</blockquote>
<h3 id="junit-debugging"><a class="markdownIt-Anchor" href="#junit-debugging"></a> JUnit debugging</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://sp19.datastructur.es/materials/lab/lab3/lab3">Lab3: Unit Testing with JUnit, Debugging</a></li>
</ol>
</blockquote>
<h3 id="intellij-idea使用java-visualizer可视化"><a class="markdownIt-Anchor" href="#intellij-idea使用java-visualizer可视化"></a> IntelliJ IDEA使用Java visualizer可视化</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://examples.javacodegeeks.com/java-visualizer-tutorial/">Java Visualizer Tutorial</a></li>
</ol>
</blockquote>
<h3 id="java-错误不支持发行版本5"><a class="markdownIt-Anchor" href="#java-错误不支持发行版本5"></a> java 错误，不支持发行版本5</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_51263533/article/details/120209830">Error java 错误 不支持发行版本5 ( 完美解决版）</a></li>
</ol>
</blockquote>
<h3 id="java内存使用评估"><a class="markdownIt-Anchor" href="#java内存使用评估"></a> Java内存使用评估</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.javamex.com/tutorials/memory/object_memory_usage.shtml">How to calculate the memory usage of Java objects</a></li>
<li><a href="http://blog.kiyanpro.com/2016/10/07/system_design/memory-usage-estimation-in-java/" title="Memory Usage Estimation in Java">Memory Usage Estimation in Java</a></li>
</ol>
</blockquote>
<h3 id="多个模块之间的依赖"><a class="markdownIt-Anchor" href="#多个模块之间的依赖"></a> 多个模块之间的依赖</h3>
<p>有时一个项目可能包含多个模块，在想要在一个模块中引用另一个模块的类或方法时，会发现IDEA并没有弹出提示，其原因为另一个模块中的类或方法没有声明为<code>public</code>。</p>
<h3 id="error-running-remote-debugger"><a class="markdownIt-Anchor" href="#error-running-remote-debugger"></a> Error running ‘Remote Debugger’</h3>
<p>使用Remote JVM Debug时，运行debug出现：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220924174528.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/53327701/error-running-remote-debugger-unable-to-open-debugger-port-localhost5005">Error running ‘Remote Debugger’: Unable to open debugger port (localhost:5005): java.net.ConnectException “Connection refused (Connection refused)”</a></li>
</ol>
</blockquote>
<h3 id="javac编译详解"><a class="markdownIt-Anchor" href="#javac编译详解"></a> javac编译详解</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://imshuai.com/using-javac#">第1期：抛开IDE，了解一下javac如何编译</a></li>
</ol>
</blockquote>
<h3 id="java外部包配置"><a class="markdownIt-Anchor" href="#java外部包配置"></a> Java外部包配置</h3>
<p>有两种方式：</p>
<ul>
<li>在IDEA Project Structure里配置<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220925001124.png" alt="" /></li>
<li>在环境变量里配置<code>CLASSPATH</code>，可能需要重启后生效（无效，似乎IDEA不会自动导入<code>CLASSPATH</code>变量）。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/25551032">Algorithms, 4th Edition（算法-第四版）源码使用系统配置</a></li>
<li><a href="https://algs4.cs.princeton.edu/code/">Java Algorithms and Clients</a></li>
</ol>
</blockquote>
<h3 id="出现classnotfoundexception"><a class="markdownIt-Anchor" href="#出现classnotfoundexception"></a> 出现ClassNotFoundException</h3>
<p>原因：未将所依赖的jar包配置到<code>CLASSPATH</code>环境变量<br />
解决方案：</p>
<ul>
<li>临时生效：<code>java -cp .;D:\\Develop\\Java\\jdk11.0.11\\lib\\algs4.jar BinarySearch largeW.txt &lt; largeT.txt</code></li>
<li>永久生效：在<code>CLASSPATH</code>中添加<code>.;D:\\Develop\\Java\\jdk11.0.11\\lib\\algs4.jar</code>。<code>.</code>表示将当前目录加入class path的检索路径。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/52386085/java-lang-classnotfoundexception-helloworld-class">Java.lang.classnotfoundexception - HelloWorld.class [duplicate]</a></li>
<li><a href="https://stackoverflow.com/questions/18093928/what-does-could-not-find-or-load-main-class-mean">What does “Could not find or load main class” mean?</a></li>
<li><a href="https://docs.oracle.com/javase/tutorial/essential/environment/paths.html">PATH and CLASSPATH</a></li>
<li><a href="https://algs4.cs.princeton.edu/code/">Java Algorithms and Clients</a></li>
</ol>
</blockquote>
<h3 id="出现乱码"><a class="markdownIt-Anchor" href="#出现乱码"></a> 出现乱码</h3>
<p>当直接使用<code>javac Evaluate.java</code>编译文件时出现以下乱码：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221002095435.png" alt="" /><br />
此时可以通过指定编码格式解决该问题：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">javac -encoding utf8 p3/Evaluate.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/jayson-jamaica/p/12695427.html">Javac和JVM的字符编码问题</a></li>
</ol>
</blockquote>
<h3 id="linux下编译和运行java引用多个外部包"><a class="markdownIt-Anchor" href="#linux下编译和运行java引用多个外部包"></a> Linux下编译和运行Java引用多个外部包</h3>
<p>以算法第四版第三章的3.1.3的用例举例为例进行说明。在windows中已经根据上述的<strong>出现ClassNotFoundException</strong>进行外部库的依赖配置。<br />
此时在windows中只需在cmd窗口按照以下步骤运行用例类：</p>
<ul>
<li><code>javac p1/TestST.java</code>：编译生成<code>TestST.class</code>文件</li>
<li><code>java p1/TestST &lt;tinyTale.txt</code>：将<code>tinyTale.txt</code>文件作为标准输入运行<br />
PS：</li>
</ul>
<ol>
<li>由于cmd极弱的自动补全，每次运行都需要手敲完整文件名，很难受</li>
<li>powershell虽然有适当的自动补全，但在命令行窗口中<code>&lt;</code>符号不能作为标准输入的重定向符。<br />
因此，对在WSL的Linux系统中编译和运行java文件的需求应运而生。<br />
其步骤如下：首先确保在WSL系统中已经安装好java环境，<code>javac</code>和<code>java</code>可正常运行。</li>
</ol>
<ul>
<li><code>javac -cp &quot;/mnt/d/Develop/Java/jdk11.0.11/lib/*&quot; p1/TestST.java</code>：<code>/mnt/d/Develop/Java/jdk11.0.11/lib/*</code>为外部库所在路径，其中包含<code>algs.jar</code>这个外部依赖库。</li>
<li><code>java -cp $CLASSPATH:&quot;/mnt/d/Develop/Java/jdk11.0.11/lib/*&quot; p1.TestST &lt;p1/tinyTale.txt</code>：运行<code>.class</code>文件。<br />
为了避免上述命令中繁琐的输入，可以设置<code>alias</code>别名：</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">javac</span><span class="token operator">=</span><span class="token string">"javac -cp '/mnt/d/Develop/Java/jdk11.0.11/lib/*'"</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">java</span><span class="token operator">=</span><span class="token string">"java -cp <span class="token variable">$CLASSPATH</span>:/mnt/d/Develop/Java/jdk11.0.11/lib/*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/onebigday/article/details/123266336">linux 下编译和运行 java 引用多个外部包</a></li>
<li><a href="https://www.cnblogs.com/mingerlcm/p/10791074.html">linux alias 命令 查看系统设置的命令别名</a></li>
</ol>
</blockquote>
<h3 id="ubuntu上安装java"><a class="markdownIt-Anchor" href="#ubuntu上安装java"></a> Ubuntu上安装Java</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.jianshu.com/p/5a25b9535016">如何在Ubuntu 18.04上安装Java(JDK11)</a></li>
</ol>
</blockquote>
<h3 id="java中的hashmap-treemap和hashset-treeset"><a class="markdownIt-Anchor" href="#java中的hashmap-treemap和hashset-treeset"></a> Java中的HashMap、TreeMap和HashSet、TreeSet</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://juejin.cn/post/6978052334911766558">哈希表和有序表的简单介绍 - 掘金</a></li>
<li><a href="https://www.cnblogs.com/chen-lhx/p/8432422.html">Map的有序和无序实现类，与Map的排序 - 龙昊雪 - 博客园</a></li>
<li><a href="https://www.runoob.com/java/java-hashset.html">Java HashSet | 菜鸟教程</a></li>
<li><a href="https://www.cainiaojc.com/java/java-treeset.html">Java TreeSet - Java教程 - 菜鸟教程</a></li>
<li><a href="https://www.runoob.com/java/java-hashmap.html">Java HashMap | 菜鸟教程</a></li>
<li><a href="https://www.cainiaojc.com/java/java-treemap.html">Java TreeMap - Java教程 - 菜鸟教程</a></li>
</ol>
</blockquote>
<h3 id="java中溢出处理"><a class="markdownIt-Anchor" href="#java中溢出处理"></a> Java中溢出处理</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://njucz.github.io/2017/08/16/java-int%E6%BA%A2%E5%87%BA%E6%80%BB%E7%BB%93/">java int溢出总结 | njuCZ’s blog</a></li>
</ol>
</blockquote>
<h3 id="java中arraylist"><a class="markdownIt-Anchor" href="#java中arraylist"></a> Java中ArrayList</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/java/java-arraylist.html">Java ArrayList | 菜鸟教程</a></li>
</ol>
</blockquote>
<h3 id="java中位操作"><a class="markdownIt-Anchor" href="#java中位操作"></a> Java中位操作</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.51cto.com/zhjh256/3137340">java中的位操作、移位操作_51CTO博客_java移位操作</a></li>
</ol>
</blockquote>
<h3 id="java数据类型"><a class="markdownIt-Anchor" href="#java数据类型"></a> Java数据类型</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/java/java-basic-datatypes.html">Java 基本数据类型 | 菜鸟教程</a></li>
</ol>
</blockquote>
<h3 id="使用gradle时卡在80-building-bootrun"><a class="markdownIt-Anchor" href="#使用gradle时卡在80-building-bootrun"></a> 使用gradle时卡在<code>80% building :bootRun</code></h3>
<p>正常情况</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li>[Gets stuck at &gt; Building 80% &gt; :bootRun · Issue #3 · hamvocke/spring-testing · GitHub](<a href="https://github.com/hamvocke/spring-testing/issues/3">https://github.com/hamvocke/spring-testing/issues/3</a></li>
<li><a href="https://stackoverflow.com/questions/34724299/why-does-my-spring-boot-web-app-not-run-completely-in-gradle">java - Why does my Spring Boot web app not run completely in Gradle? - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA配置</title>
    <url>/2022/08/15/IDEA%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在IDEA中一些好用的配置：</p>
<span id="more"></span>
<h3 id="将快捷键更改为vscode-keymap"><a class="markdownIt-Anchor" href="#将快捷键更改为vscode-keymap"></a> 将快捷键更改为VSCode keymap</h3>
<ol>
<li>安装VSCode keymap插件：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220815102337.png" alt="" /><br />
2.打开<code>File-&gt;Settings-&gt;Keymap</code>，设置Keymap为VSCode：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220815102443.png" alt="" /></li>
</ol>
<h3 id="idea返回上一次光标所在位置"><a class="markdownIt-Anchor" href="#idea返回上一次光标所在位置"></a> IDEA返回上一次光标所在位置</h3>
<p>同 <a href="https://tom89757.github.io/2022/07/27/Android-Studio%E9%85%8D%E7%BD%AE">Android Studio返回上一次光标所在位置</a></p>
<h3 id="解决idea打开某个项目卡住白屏"><a class="markdownIt-Anchor" href="#解决idea打开某个项目卡住白屏"></a> 解决IDEA打开某个项目卡住（白屏）</h3>
<p>其解决思路为删除IDEA在本地保存的该项目的状态文件；<br />
其代价为需要重新导入该项目的各个模块。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="http://digtime.cn/articles/534/jie-jue-idea-da-kai-mou-ge-xiang-mu-ka-zhu-bai-ping">解决 idea 打开某个项目卡住 (白屏)</a></li>
</ol>
</blockquote>
<h3 id="解决idea无法指定compile-output-path的问题"><a class="markdownIt-Anchor" href="#解决idea无法指定compile-output-path的问题"></a> 解决IDEA无法指定compile output path的问题</h3>
<p>如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220916000324.png" alt="" /><br />
有时上图中的Compile output路径无法通过浏览目录指定，此时可以直接复制目录完整路径到该选项，如上图中的<code>D:\Desktop\CS61B\out</code>，应用后重启项目即可。</p>
<h3 id="对ideavim中的键进行重新映射"><a class="markdownIt-Anchor" href="#对ideavim中的键进行重新映射"></a> 对ideaVim中的键进行重新映射</h3>
<ol>
<li>在<code>C:\Users\user\</code>目录下创建<code>.ideavimrc</code>文件。</li>
<li>在其中添加如下内容：</li>
</ol>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">" basic settings
<span class="token builtin">set</span> ignorecase
<span class="token builtin">set</span> scrolloff<span class="token operator">=</span><span class="token number">30</span>
<span class="token builtin">set</span> history<span class="token operator">=</span><span class="token number">200</span>

<span class="token builtin">set</span> number
<span class="token builtin">set</span> relativenumber

<span class="token builtin">set</span> incsearch
<span class="token builtin">set</span> hlsearch
<span class="token builtin">set</span> keep<span class="token operator">-</span>english<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>normal

" Plug
Plug <span class="token string">'preservim/nerdtree'</span> 
<span class="token builtin">set</span> easymotion
<span class="token builtin">set</span> sneak
<span class="token string">" nmap j j to Esc"</span>
" imap jj <span class="token operator">&lt;</span>Esc<span class="token operator">></span>

" I like using H <span class="token keyword">and</span> L <span class="token keyword">for</span> beginning<span class="token operator">/</span>end of line
" Have j <span class="token keyword">and</span> k navigate visual lines rather than logical ones
nmap H <span class="token operator">^</span>
nmap L $
nmap j gj
nmap k gk

<span class="token string">" Yank to system clipboard"</span>
<span class="token builtin">set</span> clipboard<span class="token operator">+=</span>unnamed

" No Leader Keymaps
nmap gd <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>GotoDeclaration<span class="token punctuation">)</span>
nmap ge <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>GotoNextError<span class="token punctuation">)</span>
nmap gE <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>GotoPreviousError<span class="token punctuation">)</span>
nmap gm <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>MethodDown<span class="token punctuation">)</span>
nmap gM <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>MethodUp<span class="token punctuation">)</span>

" Use <span class="token operator">&lt;</span>leader<span class="token operator">></span><span class="token operator">&lt;</span>Right<span class="token operator">></span> <span class="token keyword">and</span> <span class="token operator">&lt;</span>leader<span class="token operator">></span><span class="token operator">&lt;</span>Left<span class="token operator">></span> to locate Next<span class="token operator">/</span>Previous Occurence
" nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span><span class="token operator">&lt;</span>Right<span class="token operator">></span> <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>PreviousOccurrenceoftheWordatCaret<span class="token punctuation">)</span>
" nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span><span class="token operator">&lt;</span>Left<span class="token operator">></span> <span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">(</span>NextOccurrenceoftheWordatCaret<span class="token punctuation">)</span>
nmap <span class="token operator">&lt;</span>C<span class="token operator">-</span>Right<span class="token operator">></span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>F3<span class="token operator">></span>
nmap <span class="token operator">&lt;</span>C<span class="token operator">-</span>Left<span class="token operator">></span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>S<span class="token operator">-</span>F3<span class="token operator">></span>

<span class="token comment"># set leader to space </span>
let mapleader<span class="token operator">=</span><span class="token string">" "</span> 

" Use <span class="token operator">&lt;</span>leader<span class="token operator">></span>l <span class="token keyword">and</span> <span class="token operator">&lt;</span>leader<span class="token operator">></span>h to switch tabs
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span>l gt
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span>h gT

" Use <span class="token operator">&lt;</span>leader<span class="token operator">></span>b to locate bracket
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span>b <span class="token operator">%</span>

" Use <span class="token operator">&lt;</span>leader<span class="token operator">></span>q to close the current tab
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span>q <span class="token punctuation">:</span>tabclose<span class="token operator">&lt;</span>CR<span class="token operator">></span>


" Use <span class="token operator">&lt;</span>leader<span class="token operator">></span>n to focus explorer 
nmap <span class="token operator">&lt;</span>leader<span class="token operator">></span>n <span class="token punctuation">:</span>NERDTreeToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>PS：其中<code>&lt;Action&gt;</code>只能用于IDEA自带的actions。Plugins actions需要使用<code>:</code>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/10149187/intellij-ideavim-change-keys">vim - Intellij IdeaVim change keys - Stack Overflow</a></li>
<li><a href="https://github.com/fdietze/dotfiles/blob/master/.ideavimrc">dotfiles/.ideavimrc at master · fdietze/dotfiles · GitHub</a></li>
<li><a href="https://github.com/AlexPl292/IdeaVim-EasyMotion">GitHub - AlexPl292/IdeaVim-EasyMotion: EasyMotion emulation plugin for IdeaVim</a></li>
<li><a href="https://www.reddit.com/r/vim/comments/2dpihg/let_mapleader_space_not_working/">let mapleader = “&lt;Space&gt;” not working! : vim</a></li>
<li><a href="https://www.andreasoverland.no/vim">Vim &amp; IdeaVim shortcuts, keystroke combos and commands</a></li>
<li><a href="https://youtrack.jetbrains.com/issue/VIM-1042/Vim-keyboard-shortcuts-for-project-navigator-structure-tool-window">Vim keyboard shortcuts for project navigator / structure / tool window</a></li>
</ol>
</blockquote>
<h3 id="idea插件推荐"><a class="markdownIt-Anchor" href="#idea插件推荐"></a> IDEA插件推荐</h3>
<ol>
<li>IdeaVimExtension：在切换到normal模式时，自动切换为英文输入（切换为美式键盘，不好用）</li>
<li>IdeaVim-EasyMotion：用于配合<code>&lt;leader&gt; &lt;leader&gt; w</code>快速跳转</li>
<li>IdeaVim-Sneak：行内快速跳转</li>
<li>NERDTree：定位explorer并进行文件选择/重命名/新建等操作。<a href="https://github.com/JetBrains/ideavim/wiki/NERDTree-support">NERDTree support · JetBrains/ideavim Wiki · GitHub</a></li>
<li>Material Theme UI：IDEA界面主题美化<br />
其中NERDTree快捷键如下：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407195931.png" alt="" /></li>
</ol>
<blockquote>
<p>参考资料：<a href="https://github.com/JetBrains/ideavim/wiki/NERDTree-support">NERDTree support · JetBrains/ideavim Wiki · GitHub</a></p>
</blockquote>
<h3 id="idea文件颜色配置"><a class="markdownIt-Anchor" href="#idea文件颜色配置"></a> IDEA文件颜色配置</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.jetbrains.com/help/idea/file-status-highlights.html">File status highlights | IntelliJ IDEA Documentation</a></li>
</ol>
</blockquote>
<h3 id="maven依赖项"><a class="markdownIt-Anchor" href="#maven依赖项"></a> Maven依赖项</h3>
<p>报错<code>Dependency 'org.springframework.boot:spring-boot-starter-web:' not found</code>。<br />
解决方案：<code>Settings-&gt;Maven-&gt;Maven home directory-&gt;D:/Develop/Java/Maven/apache-maven-3.8.3</code>，详细见参考资料</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/LJH_laura_li/article/details/104850229">解决报错project ‘org.springframework.boot:spring-boot-starter-parent:1.5.9.RELEASE’ not found问题_叫我天真的博客-CSDN博客</a></li>
</ol>
</blockquote>
<h3 id="创建文件时自动生成作者信息"><a class="markdownIt-Anchor" href="#创建文件时自动生成作者信息"></a> 创建文件时自动生成作者信息</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230717111930.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/18736986/autocompletion-of-author-in-intellij">javadoc - Autocompletion of @author in Intellij - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="idea-focus-in-sidebar"><a class="markdownIt-Anchor" href="#idea-focus-in-sidebar"></a> IDEA focus in sidebar</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/206887115-Shortcut-to-toggle-focus-between-project-sidebar-and-editor-">Shortcut to toggle focus between project sidebar and editor? – IDEs Support (IntelliJ Platform) | JetBrains</a></li>
</ol>
</blockquote>
<h3 id="idea将dotfilesideaideavimrc映射到cusersaideavimrc"><a class="markdownIt-Anchor" href="#idea将dotfilesideaideavimrc映射到cusersaideavimrc"></a> IDEA将<code>dotfiles/idea/.ideavimrc</code>映射到<code>C:\Users\A\.ideavimrc</code></h3>
<p>打开<code>cmd</code>运行如下指令：</p>
<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">mklink C:\Users\A\.ideavimrc D:\Desktop\dotfiles\idea\.ideavimrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="idea将action映射到vim-shortcuts"><a class="markdownIt-Anchor" href="#idea将action映射到vim-shortcuts"></a> IDEA将action映射到vim shortcuts</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.google.com/spreadsheets/d/17GvVbsLc48iM-vpKgBTwz5ByvsMmmw0dqIenzemDcXM/edit#gid=0">IntelliJ IDEA Action List - Google Sheets</a></li>
<li><a href="https://gist.github.com/zchee/9c78f91cc5ad771c1f5d">IdeaVim actionlist · GitHub</a></li>
</ol>
</blockquote>
<h3 id="idea在new-window新窗口-中打开项目"><a class="markdownIt-Anchor" href="#idea在new-window新窗口-中打开项目"></a> IDEA在New window(新窗口) 中打开项目</h3>
<p><code>Settings-&gt;Appearance &amp; Behavior-&gt;System Settings</code><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230823170740.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.jetbrains.com/help/idea/open-close-and-move-projects.html#open-reopen-projects">Open, close, and move projects | IntelliJ IDEA Documentation</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTex使用</title>
    <url>/2023/04/04/LaTex%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>本文记录一下使用LaTex过程中的经验和教训：</p>
<span id="more"></span>
<p>1.编译时出现<code>Fatal Package fontspec Error: The fontspec package requires either XeTeX or lualatex</code>报错。<br />
原因：使用的编译器不匹配<br />
解决方案：在Overleaf中的menu中将编译器设置为XeTex或LuaLatex。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://tex.stackexchange.com/questions/400825/fontspec-cannot-use-pdftex-on-overleaf">Fontspec {cannot-use-pdftex} on overleaf - TeX - LaTeX Stack Exchange</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Latex</tag>
      </tags>
  </entry>
  <entry>
    <title>Large Projects</title>
    <url>/2022/10/03/Large-Projects/</url>
    <content><![CDATA[<hr />
<p>本文记录一下一些网上出现的较大型项目，其会提供从零开始的实现让你把握完整的项目。</p>
<span id="more"></span>
<ol>
<li><a href="https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours">Write Yourself a Scheme in 48 Hours</a>：会教你使用Haskell语言实现一个Scheme。</li>
<li><a href="https://bellard.org/tcc/">Tiny C Compiler</a>：bellard提供的小型C编译器的实现，其在github上维护的仓库为<a href="https://github.com/TinyCC/tinycc">tinycc</a>。并未提供教程，但提供了 <a href="https://bellard.org/tcc/tcc-doc.html">Tiny C Compiler Reference Documentation</a>，且仍在更新。</li>
<li><a href="https://lotabout.me/2015/write-a-C-interpreter-0/">手把手教你构建 C 语言编译器</a>：本项目将分为9个部分手把手教你实现一个C语言编译器。</li>
<li><a href="https://pandolia.net/tinyc/">自己动手写编译器</a>：介绍了一个简单的C编译器的实现。</li>
<li><a href="https://os.phil-opp.com/">Writing an OS in Rust</a>：使用Rust语言编写一个小型的操作系统。</li>
<li>[rCore-Tutorial-Book]：本教程旨在一步一步展示如何从零开始用Rust语言写一个基于RISC-V架构的类Unix内核。</li>
<li>aria2：<a href="https://www.cnblogs.com/endingly/p/15832027.html">aria2 源码解析专题—— (一)基础架构</a></li>
<li><a href="https://github.com/lilongweidev/GoodWeather">GoodWeather</a>：从零开发Android天气APP。</li>
<li><a href="https://norvig.com/lispy.html">(How to Write a (Lisp) Interpreter (in Python))</a>：如何使用Python写一个Lisp解释器。</li>
<li><a href="https://build-your-own.org/redis/">Build Your Own Redis with C/C++ | Build Your Own Redis with C/C++</a>：教你使用C/C++来构建一个类似redis的server。</li>
<li><a href="https://minitorch.github.io/">MiniTorch</a>：教你从头实现一个minitorch深度学习框架。</li>
<li><a href="https://github.com/chvin/react-tetris">GitHub - chvin/react-tetris: Use React, Redux, Immutable to code Tetris. 🎮</a>：使用React + Redux + Immutable复刻经典的俄罗斯方块</li>
<li><a href="https://github.com/lichess-org/lila">GitHub - lichess-org/lila: ♞ lichess.org: the forever free, adless and open source chess server ♞</a>：使用Scala + TypeScript实现国际象棋游戏</li>
<li><a href="http://redisbook.com/index.html">Redis 设计与实现 — Redis 设计与实现</a>：Redis设计与实现</li>
<li><a href="https://build-your-own.org/database/">Build Your Own Database From Scratch | Build Your Own Database From Scratch</a>：</li>
<li><a href="https://decode.sh/building-a-code-pen-type-editor-from-scratch">Building a CodePen Type Editor from Scratch</a></li>
<li><a href="https://build-your-own.org/database/">Build Your Own Database From Scratch | Build Your Own Database From Scratch</a></li>
<li><a href="https://github.com/oceanbase/miniob">GitHub - oceanbase/miniob: MiniOB is one mini database, helping developers to learn how database works.</a>：MiniOB 整体代码简洁，容易上手，设计了一系列由浅入深的题目，帮助同学们从零基础入门，迅速了解数据库并深入学习数据库内核。</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>Little Projects</title>
    <url>/2022/10/03/Little-Projects/</url>
    <content><![CDATA[<hr />
<p>本文记录一下那些在互联网上的一些可以让你快速上手或者学习到相关领域只是的小型项目：</p>
<span id="more"></span>
<ol>
<li><a href="https://introcs.cs.princeton.edu/java/assignments/">Creative Programming Assignments</a>：普林斯顿大学给学生布置的的富有创造性的作业。</li>
<li><a href="https://github.com/bradtraversy/50projects50days">50projects50days</a>：使用HTML/CSS和JavaScript完成的前端小项目。50天50个，每天一个。</li>
<li><a href="https://github.com/aosabook/500lines">500lines</a>：<a href="http://aosabook.org/en/index.html">The Architecture of Open Source Applications</a>系列第四版中《500 Lines or less》中各个小型项目的官方实现，其使用不到500行的代码实现一个小型功能或组件。</li>
<li><a href="https://github.com/jamiebuilds/the-super-tiny-compiler">the-super-tiny-compiler</a>：使用JavaScript实现的一个小型的编译器，其包含一个现代编译器的所有主要组件。有对应的解析文章：<a href="https://segmentfault.com/a/1190000016402699">有史以来最小的编译器源码解析</a></li>
<li><a href="https://github.com/521xueweihan/OneFile">OneFile</a>：该项目整理了可以使用单个文件实现的小型项目或者功能。</li>
<li><a href="https://hellogithub.com/onefile">HelloGitHub｜一个文件的开源项目</a>：同样为OneFile项目。</li>
<li><a href="https://mathspp.com/blog/textual-tutorial-build-a-todo-app-in-python">Textual tutorial - build a TODO app in Python</a>：使用Python构建一个TODO app。</li>
<li><a href="https://github.com/gaogaotiantian/biliscope">GitHub - gaogaotiantian/biliscope: Bilibili chrome extension</a>：一个简单的查看b站up主信息的谷歌插件。</li>
<li><a href="https://github.com/antirez/adventofcode2022">GitHub - antirez/adventofcode2022: A few Advent of Code puzzles (2022 edition) in C</a>：redis作者antirez仓库，使用C解决18道谜题。</li>
<li><a href="https://www.kawabangga.com/posts/5166">用油猴制作一个 Jenkins 日志窗口 | 卡瓦邦噶！</a>：油猴脚本</li>
<li><a href="https://github.com/hugoattal/milky-warp">GitHub - hugoattal/milky-warp: Simple magnifier for presentations (so that people can read the tiny texts)</a>：使用Vuew/Rust/TypeScript完成的一个Windows桌面放大镜应用</li>
<li><a href="https://nytimes.github.io/oak-byo-react-prosemirror-redux/">Build Your Own: React, ProseMirror, and Redux</a>：指导新人实现React, ProseMirror和Redux等库</li>
<li><a href="https://github.com/VOYAGERX013/ShadowScript">GitHub - VOYAGERX013/ShadowScript: A programming language made for fun</a>：学会编写小型语言</li>
<li><a href="https://blog.miguelgrinberg.com/post/building-a-toy-programming-language-in-python">Building a Toy Programming Language in Python - miguelgrinberg.com</a>：使用Python编写小型语言</li>
<li><a href="https://dailystuff.nl/projects/writing-a-6502-emulator-in-python">Writing a 6502 emulator in Python — Dailystuff on the Internet</a>：使用Python编写一个microprocessor <a href="https://en.wikipedia.org/wiki/MOS_Technology_6502">MOS Technology 6502 - Wikipedia</a>。</li>
<li><a href="https://journal.stuffwithstuff.com/2023/08/04/representing-heterogeneous-data/">Representing Heterogeneous Data – journal.stuffwithstuff.com</a>：一种小型的，过程式的语言，用于表示用户输入的多种多样的数据</li>
<li><a href="https://benhoyt.com/writings/gogit/">Scripting with Go: a 400-line Git client that can create a repo and push itself to GitHub</a>：使用go编写自动化git操作的脚本，6年前作者写了python版本。</li>
<li><a href="https://github.com/henrypp/memreduct">GitHub - henrypp/memreduct: Lightweight real-time memory management application to monitor and clean system memory on your computer.</a>：使用C语言编写的内存监控工具</li>
<li><a href="https://rainingcomputers.blog/dist/the_path_to_implementing_a_programming_language.md">The path to implementing a programming language</a></li>
<li><a href="https://github.com/spandanb/learndb-py">GitHub - spandanb/learndb-py: Learn database internals by implementing it from scratch.</a>：实现一个小型数据库</li>
<li><a href="https://andreabergia.com/series/writing-a-jvm-in-rust/">Series: Writing a JVM in Rust · Andrea Bergia’s Website</a>：使用Rust写一个JVM</li>
<li><a href="https://github.com/codecrafters-io/build-your-own-x">GitHub - codecrafters-io/build-your-own-x: Master programming by recreating your favorite technologies from scratch.</a>：Build your own X。实现你想要的任何工具。</li>
<li><a href="https://chromium.googlesource.com/chromium/src/+/main/docs/windows_build_instructions.md">Chromium Docs - Checking out and Building Chromium for Windows</a>：尝试自己编译一个Chromium<br />
…持续更新中</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法记录</title>
    <url>/2022/10/08/Markdown%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录一下Markdown写作中的常用语法：</p>
<span id="more"></span>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span>：<code>\Omega</code><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">┌</mo></mrow><annotation encoding="application/x-tex">\ulcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mopen amsrm">┌</span></span></span></span>：<code>\ulcorner</code><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">└</mo></mrow><annotation encoding="application/x-tex">\llcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.37788em;vertical-align:0em;"></span><span class="mopen amsrm">└</span></span></span></span>：<code>\dlcorner</code><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span>：<code>\Theta</code><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>：<code>\in</code></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">帮助:数学公式</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL使用指南</title>
    <url>/2022/05/15/Mysql%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下使用 MySQL 时的常见配置和操作。</p>
<span id="more"></span>
<p>1.启动 MySQL 服务。启动 MySQL 有两种方式：</p>
<ul>
<li>
<p>以管理员 (administrator) 方式运行 <code>cmd</code>，在<code>cmd</code>终端中运行<code>net start mysql</code>。显示如下界面表示启动成功：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515220235630.png" alt="image-20220515220235630" /></p>
<p>PS：关闭该终端 MySQL 仍然保持运行</p>
<p>此时可能出现以下界面：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515215652080.png" alt="image-20220515215652080" /></p>
<p>原因：Windows 系统中 MySQL 服务被禁用</p>
<p>解决方案：<code>Win + R</code>打开<code>run</code>窗口，输入<code>services.msc</code>打开<code>Services</code>窗口，查看其中的 MySQL服务并将其 status 由 <code>Disabled</code> 改为<code>Manual</code>。如下图所示：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515215940920.png" alt="image-20220515215940920" /></p>
</li>
<li>
<p>定位到 MySQL 安装目录的 <code>bin</code>文件夹，如<code>D:\Develop\MySQL\bin</code>。在此处打开 <code>cmd</code> 终端，并运行 <code>mysqld --console</code>，显示如下界面表示启动成功：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515220421568.png" alt="image-20220515220421568" /></p>
<p>PS：关闭该终端或者<code>Ctrl + C</code>都会使得 MySQL 服务关闭</p>
</li>
</ul>
</br>
<p>2.关闭 MySQL 服务。与启动对应，同样有两种方式：</p>
<ul>
<li>
<p>以管理员 (administrator) 方式运行 <code>cmd</code>，在<code>cmd</code>终端中运行<code>net stop mysql</code>。显示如下界面表示关闭成功：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515220939116.png" alt="image-20220515220939116" /></p>
</li>
<li>
<p>定位到 MySQL 安装目录的 <code>bin</code>文件夹，如<code>D:\Develop\MySQL\bin</code>。在此处打开 <code>cmd</code> 终端（在上面的启动终端之外另开一个终端），并运行<code>mysqladmin -uroot -p shutdown</code>并输入对应密码：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515221417975.png" alt="image-20220515221417975" /></p>
<p>在启动终端中显示如下界面表示关闭成功（也可在启动终端中通过<code>Ctrl+C</code>快捷键关闭，不推荐）：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515221316977.png" alt="image-20220515221316977" /></p>
</li>
</ul>
<p>PS：MySQL 服务的启动方式和关闭方式相对应</p>
</br>
<p>3.登录MySQL 用户：在启动 MySQL 后，在终端运行 <code>mysql -u root -p</code>后输入对应密码登录 root 用户（可更改用户名登录其他用户）。出现如下界面表示登录成功：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515221935109.png" alt="image-20220515221935109" /></p>
</br>
<p>4.退出 MySQL 用户：在登录成功后，可通过<code>quit</code>或者<code>Ctrl + C</code>退出当前用户登录。出现如下界面表示退出成功：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220515222217664.png" alt="image-20220515222217664" /></p>
<blockquote>
<p>以上操作参考资料为：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/12972434/restart-mysql-server-on-windows-7">restart mysql server on windows7</a></li>
<li><a href="https://www.runoob.com/mysql/mysql-tutorial.html">MySQL 教程 - 菜鸟教程</a></li>
</ol>
</blockquote>
</br>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Numpy中知识点01</title>
    <url>/2023/02/11/Numpy%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下Numpy相关知识点：</p>
<span id="more"></span>
<p>1.numpy创建数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.zeros(shape, dtype = np.uint8)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/numpy/numpy-array-creation.html">NumPy 创建数组 | 菜鸟教程</a></li>
</ol>
</blockquote>
</br>
2.numpy数组转换为dataframe：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">my_array = np.array([[<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>],[<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>]])</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(my_array, columns = [<span class="string">&#x27;Column_A&#x27;</span>,<span class="string">&#x27;Column_B&#x27;</span>,<span class="string">&#x27;Column_C&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(df))</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [How to Convert NumPy Array to Pandas DataFrame – Data to Fish](https://datatofish.com/numpy-array-to-pandas-dataframe/)
</br>
3.numpy矩阵乘法：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.array([[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">1</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">1</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.multiply(a,b)</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.dot(a,b)</span><br><span class="line">array([[<span class="number">4</span>, <span class="number">6</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure>
>参考资料：
>1. [NumPy矩阵乘法](http://c.biancheng.net/numpy/matrix-multiplication.html)
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Numpy</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch Module subclasses</title>
    <url>/2022/07/20/PyTorch-Module-subclasses/</url>
    <content><![CDATA[<p>本文记录一下PyTorch <code>nn.Module</code>基类的常用subclasses。</p>
<span id="more"></span>
<h3 id="torchnnconv2d"><a class="markdownIt-Anchor" href="#torchnnconv2d"></a> torch.nn.Conv2d</h3>
<p>对由多个input planes组成的input signal进行二维卷积。其完整声明形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CLASS torch.nn.Conv2d(in_channels, out_channels, kernel_size, stride=<span class="number">1</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, groups=<span class="number">1</span>, bias=<span class="literal">True</span>, padding_mode=<span class="string">&#x27;zeros&#x27;</span>, device=<span class="literal">None</span>, dtype=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p><code>torch.nn.Conv2d</code>有如下的继承关系：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Conv2d</span>(<span class="title class_ inherited__">_ConvNd</span>):</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_ConvND</span>(<span class="title class_ inherited__">Module</span>):</span><br></pre></td></tr></table></figure>
<p>在最简单的样例中，input size为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>C</mi><mi>i</mi><mi>n</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N, Cin, H, W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>的层的输出值和输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>C</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo separator="true">,</mo><mi>H</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo separator="true">,</mo><mi>W</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N, Cout, Hout, Wout)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>可以精确地描述为：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220718203916534.png" alt="image20220718203916534" /></p>
<p>其中*表示有效的2D cross-correlation 操作，N表示batch size，C表示通道数，H和W分别表示像素高宽。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html">CONV2D</a></li>
</ol>
</blockquote>
<h3 id="torchnnbatchnorm2d"><a class="markdownIt-Anchor" href="#torchnnbatchnorm2d"></a> torch.nn.BatchNorm2d</h3>
<h3 id="torchnngroupnorm"><a class="markdownIt-Anchor" href="#torchnngroupnorm"></a> torch.nn.GroupNorm</h3>
<h3 id="torchnnsequential"><a class="markdownIt-Anchor" href="#torchnnsequential"></a> torch.nn.Sequential</h3>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsidian配置</title>
    <url>/2022/08/14/Obsidian%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在Obsidian中一些常用的配置和使用技巧</p>
<span id="more"></span>
<h3 id="1-使用教程"><a class="markdownIt-Anchor" href="#1-使用教程"></a> 1 使用教程</h3>
<h3 id="2-主题"><a class="markdownIt-Anchor" href="#2-主题"></a> 2 主题</h3>
<ul>
<li>Minimal：不太好用，短代码不会高亮</li>
<li>Obsidian-Typora-Vue：<a href="https://github.com/ZekunC/Obsidian-Typora-Vue-Theme">Obsidian-Typora-Vue-Theme</a>，正在使用</li>
</ul>
<h3 id="3-插件"><a class="markdownIt-Anchor" href="#3-插件"></a> 3 插件</h3>
<ul>
<li>Image auto upload Plugin：和PicGO协同上传图片到github图床</li>
<li>Editor Syntax Highlight：代码语法高亮</li>
<li>cMenu：用于支持word的富文本编辑，可自行配置</li>
<li>Title Serial Number Plugin：用于自动给标题编号</li>
<li>Auto Title Link：用于自动根据复制的链接拉取网页标题</li>
</ul>
<h4 id="31-vim配置"><a class="markdownIt-Anchor" href="#31-vim配置"></a> 3.1 Vim配置</h4>
<p>在笔记库根目录添加<code>.obsidian.vimrc</code>文件，并在里面添加如下按键映射：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">" I like using H and L for beginning/end of line
nmap H ^
nmap L $
<span class="token string">"map j j to Esc"</span>
imap jj Esc
" Have j and k navigate visual lines rather than logical ones
nmap j gj
nmap k gk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://einverne.github.io/post/2022/07/obsidian-vim-and-vimrc.html">Obsidian 中使用 Vim 模式并配置 Vimrc | Verne in GitHub</a></li>
<li><a href="https://github.com/obsidianzh/forum/discussions/10">Obsidian中使用Vim的最佳实践？ · Discussion #10 · obsidianzh/forum · GitHub</a></li>
<li><a href="https://www.bilibili.com/video/BV1ZN4y1j73m">从零配置Obsidian-像Vim一样跳转_哔哩哔哩_bilibili</a></li>
<li><a href="https://github.com/esm7/obsidian-vimrc-support">obsidian-vimrc-support</a></li>
<li><a href="https://github.com/esm7/obsidian-vimrc-support/issues/4">jj imap to Esc not work ? · Issue #4 · esm7/obsidian-vimrc-support · GitHub</a></li>
</ol>
</blockquote>
<h3 id="4-问题"><a class="markdownIt-Anchor" href="#4-问题"></a> 4 问题</h3>
<h4 id="41-将vscode代码粘贴到代码块中时出现多于空行"><a class="markdownIt-Anchor" href="#41-将vscode代码粘贴到代码块中时出现多于空行"></a> 4.1 将VSCode代码粘贴到代码块中时出现多于空行</h4>
<p>解决方案：右键以纯文本形式粘贴<br />
参考资料：</p>
<ol>
<li><a href="https://forum-zh.obsidian.md/t/topic/7496">【已解决】在阅读模式下，代码块中的代码不高亮</a></li>
<li><a href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BD%A0%E7%9A%84%E7%AC%94%E8%AE%B0">格式化你的笔记</a></li>
<li><a href="https://forum-zh.obsidian.md/t/topic/7432">求助：关于在Obsidian上粘贴代码每行会出现多余空行如何解决？</a></li>
</ol>
<h4 id="42-有时会出现打开某个仓库安装插件全部消失的情况"><a class="markdownIt-Anchor" href="#42-有时会出现打开某个仓库安装插件全部消失的情况"></a> 4.2 有时会出现打开某个仓库安装插件全部消失的情况</h4>
<p>这是因为Obsidian的每个仓库的配置独立，即每个仓库文件夹下都有独立的<code>.obsidian</code>文件夹，对应不同的配置。为了解决该问题，可以将某仓库下的<code>.obsidian</code>复制到另一仓库下以实现配置迁移的目的。</p>
<h4 id="43-使用vim模式编辑时代码缩进快捷键失效"><a class="markdownIt-Anchor" href="#43-使用vim模式编辑时代码缩进快捷键失效"></a> 4.3 使用Vim模式编辑时代码缩进快捷键失效</h4>
<p>一般模式缩进快捷键为<code>Ctrl+[</code>和<code>Ctrl+]</code>。使用Vim编辑时可以使用<code>Tab</code>和<code>Shift+Tab</code>替代。</p>
<h3 id="定制配置"><a class="markdownIt-Anchor" href="#定制配置"></a> 定制配置</h3>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch TensorBoard</title>
    <url>/2022/08/06/PyTorch-TensorBoard/</url>
    <content><![CDATA[<p>本文记录一下PyTorch中工具类<code>torch.utils.tensorboard</code>的使用教程。</p>
<span id="more"></span>
<p>在进一步学习之前，更多关于TensorBoard的细节见 <a href="https://www.tensorflow.org/tensorboard/%E3%80%82">https://www.tensorflow.org/tensorboard/。</a></p>
<p>一旦安装了TensorBoard，这些utilities让我们能够将models和metrics记录到目录中，用于在TensorBoard UI中的可视化。对PyTorch models和tensors（以及Caffe2 nets和blobs）支持对Scalars、images、histograms、graphs和embedding的可视化。</p>
<p>SummaryWriter类是通过TensorBoard进行log data的利用和可视化的主要入口。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets, transforms</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writer will output to ./runs/ directory by default, change to ./mnist/</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;mnist&quot;</span>)</span><br><span class="line"></span><br><span class="line">transform = transforms.Compose([transforms.ToTensor(), transforms.Normalize((<span class="number">0.5</span>,), (<span class="number">0.5</span>,))])</span><br><span class="line">trainset = datasets.MNIST(<span class="string">&#x27;mnist_train&#x27;</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>, transform=transform)</span><br><span class="line">trainloader = torch.utils.data.DataLoader(trainset, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line">model = torchvision.models.resnet50(<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># Have ResNet model take in grayscale rather than RGB</span></span><br><span class="line">model.conv1 = torch.nn.Conv2d(<span class="number">1</span>, <span class="number">64</span>, kernel_size=<span class="number">7</span>, stride=<span class="number">2</span>, padding=<span class="number">3</span>, bias=<span class="literal">False</span>)</span><br><span class="line">images, labels = <span class="built_in">next</span>(<span class="built_in">iter</span>(trainloader))</span><br><span class="line"></span><br><span class="line">grid = torchvision.utils.make_grid(images)</span><br><span class="line">writer.add_image(<span class="string">&#x27;images&#x27;</span>, grid, <span class="number">0</span>)</span><br><span class="line">writer.add_graph(model, images)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>运行<code>tensorboard --logdir=mnist</code>：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806154817790.png" alt="image-20220806154817790" /></p>
</li>
<li>
<p>打开<code>http://localhost:6006/</code>，可以看到如下结果：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806154841644.png" alt="image-20220806154841644" /></p>
</li>
</ul>
<p>对一次实验可以记录很多信息。为了避免UI混乱和得到更好的结果聚类，我们eyi通过分层地命名来对plots进行分组。例如，&quot;Loss/train&quot;和&quot;Loss/test&quot;可以放在同一组，&quot;Accuracy/train&quot;和&quot;Accuracy/test&quot;可以放在TensorBoard界面的另一组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writer outputs to ./loss/ directory</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;loss&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n_iter <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Loss/train&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Loss/test&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Accuracy/train&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Accuracy/test&#x27;</span>, np.random.random(), n_iter)</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>运行<code>tensorboard --logdir=mnist</code></p>
</li>
<li>
<p>打开<code>http://localhost:6006/</code>，可以看到如下结果：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806155433060.png" alt="image-20220806155433060" /></p>
</li>
</ul>
<p>下面是Summary类的完整声明：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CLASS torch.utils.tensorboard.writer.SummaryWriter(log_dir=<span class="literal">None</span>, comment=<span class="string">&#x27;&#x27;</span>, purge_step=<span class="literal">None</span>, max_queue=<span class="number">10</span>, flush_secs=<span class="number">120</span>, filename_suffix=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>将entry直接写入log_dir中的event文件，该文件可以直接被TensorBoard读取。</p>
<p>SummaryWriter提供高级API来在给定目录中创建一个event文件，并且向其中添加summaries和events。该类异步地更新文件内容。这允许一个训练程序调用方法直接从训练loop中向这个文件添加数据，而不会拖慢训练速度。</p>
<h3 id="其初始化代码为"><a class="markdownIt-Anchor" href="#其初始化代码为"></a> 其初始化代码为</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__init__(log_dir=<span class="literal">None</span>, comment=<span class="string">&#x27;&#x27;</span>, purge_step=<span class="literal">None</span>, max_queue=<span class="number">10</span>, flush_secs=<span class="number">120</span>, filename_suffix=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>log_dir(string)</code>：存储文件路径，默认为<code>runs/CURRENT_DATETIME_HOSTNAME</code>，会在每一次run之后更改。使用分层的文件夹结构可以很容易地在runs之间比较。例如，传入<code>runs/exp1</code>，<code>runs/exp2</code>等，对每个新的实验在它们之间进行比较。</li>
<li><code>comment(string)</code>：加载默认<code>log_dir</code>后面的后缀，如果<code>log_dir</code>被赋值，该参数不起作用。</li>
<li><code>purge_step(int)</code>：当logging在第T+X步崩溃，然后在第T步重启时，任何global_step大于或等于T的events将被清除。注意crashed和resumed的实验应该有相同的<code>log_dir</code></li>
<li><code>max_queue(int)</code>：在通过调用<code>add</code>刷新磁盘之前pending的events和summaries的队列尺寸。默认为10个。</li>
<li><code>flush_secs(int)</code>：刷新pending的events和summaries到磁盘的频率，默认为每两分钟。</li>
<li><code>filename_suffix(string)</code>：在log_dir目录中添加到所有event文件名后面的后缀。更多的关于文件名构建的细节见<code>tensorboard.summary.writer.event_file_writer.EventFileWriter</code>。</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a summary writer with automatically generated folder name.</span></span><br><span class="line">writer = SummaryWriter()</span><br><span class="line"><span class="comment"># folder location: runs/May04_22-14-54_s-MacBook-Pro.local/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create a summary writer using the specified folder name.</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;my_experiment&quot;</span>)</span><br><span class="line"><span class="comment"># folder location: my_experiment</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create a summary writer with comment appended.</span></span><br><span class="line">writer = SummaryWriter(comment=<span class="string">&quot;LR_0.1_BATCH_16&quot;</span>)</span><br><span class="line"><span class="comment"># folder location: runs/May04_22-14-54_s-MacBook-Pro.localLR_0.1_BATCH_16/</span></span><br></pre></td></tr></table></figure>
<h3 id="添加scalar数据到summary"><a class="markdownIt-Anchor" href="#添加scalar数据到summary"></a> 添加scalar数据到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_scalar(tag, scalar_value, global_step=<span class="literal">None</span>, walltime=<span class="literal">None</span>, new_style=<span class="literal">False</span>, double_precision=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>scalar_value(float or string/blobname)</code>：存储的值</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
<li><code>new_style(boolean)</code>：是否使用新风格（tensor field）或者旧风格（simple_value field）。新风格有更快的data loading。</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line">writer = SummaryWriter()</span><br><span class="line">x = <span class="built_in">range</span>(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;y=2x&#x27;</span>, i * <span class="number">2</span>, i)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_scalar</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806170609904.png" alt="image-20220806170609904" /></p>
<h3 id="添加许多标量数据到summary"><a class="markdownIt-Anchor" href="#添加许多标量数据到summary"></a> 添加许多标量数据到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_scalars(main_tag, tag_scalar_dict, global_step=<span class="literal">None</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>main_tag(string)</code>：tags的parent name</li>
<li><code>tag_scalar_dict(dict)</code>：存储tag和对应value的键值对</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line">writer = SummaryWriter()</span><br><span class="line">r = <span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalars(<span class="string">&#x27;run_14h&#x27;</span>, &#123;<span class="string">&#x27;xsinx&#x27;</span>:i*np.sin(i/r),</span><br><span class="line">                                    <span class="string">&#x27;xcosx&#x27;</span>:i*np.cos(i/r),</span><br><span class="line">                                    <span class="string">&#x27;tanx&#x27;</span>: np.tan(i/r)&#125;, i)</span><br><span class="line">writer.close()</span><br><span class="line"><span class="comment"># This call adds three values to the same scalar plot with the tag</span></span><br><span class="line"><span class="comment"># &#x27;run_14h&#x27; in TensorBoard&#x27;s scalar section.</span></span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_scalars</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806171201083.png" alt="image-20220806171201083" /></p>
<h3 id="添加histogram到summary"><a class="markdownIt-Anchor" href="#添加histogram到summary"></a> 添加histogram到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_histogram(tag, values, global_step=<span class="literal">None</span>, bins=<span class="string">&#x27;tensorflow&#x27;</span>, walltime=<span class="literal">None</span>, max_bins=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>values(torch.Tensor, numpy.array, or string/blobname)</code>：用于构建histogram的值</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>bins(string)</code>：{‘tensorflow’, ‘auto’, ‘fd’, …}中的一个，决定如何形成bins。可以找到更多选项：<a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html">https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html</a></li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">writer = SummaryWriter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    x = np.random.random(<span class="number">1000</span>)</span><br><span class="line">    writer.add_histogram(<span class="string">&#x27;distribution centers&#x27;</span>, x + i, i)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_histogram</code>运行结果如下（和官方结果不一致）：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806172307712.png" alt="image-20220806172307712" /></p>
<h3 id="添加image-data到summary"><a class="markdownIt-Anchor" href="#添加image-data到summary"></a> 添加image data到summary</h3>
<p>注意要求<code>pillow</code>包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_image(tag, img_tensor, global_step=<span class="literal">None</span>, walltime=<span class="literal">None</span>, dataformats=<span class="string">&#x27;CHW&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>img_tensor(torch.Tensor, numpy.array, or string/blobname)</code>：image data</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
<li><code>datafromats(string)</code>：指定特定的image数据格式（CHW, HWC, HW, WH等）。</li>
</ul>
<p>Shape：</p>
<p><code>img_tensor</code>默认为(3, H, W)，可以使用<code>torchvision.utils.make_grid()</code>来转换a batch of tensor为3xHxW，或者调用<code>add_images</code>来做这件事。只要传递相应的<code>dataformats</code>(1, H, W)，(H, W)或者(H, W, 3)形状的Tensor也支持。</p>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">img = np.zeros((<span class="number">3</span>, <span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">img[<span class="number">0</span>] = np.arange(<span class="number">0</span>, <span class="number">10000</span>).reshape(<span class="number">100</span>, <span class="number">100</span>) / <span class="number">10000</span></span><br><span class="line">img[<span class="number">1</span>] = <span class="number">1</span> - np.arange(<span class="number">0</span>, <span class="number">10000</span>).reshape(<span class="number">100</span>, <span class="number">100</span>) / <span class="number">10000</span></span><br><span class="line"></span><br><span class="line">img_HWC = np.zeros((<span class="number">100</span>, <span class="number">100</span>, <span class="number">3</span>))</span><br><span class="line">img_HWC[:, :, <span class="number">0</span>] = np.arange(<span class="number">0</span>, <span class="number">10000</span>).reshape(<span class="number">100</span>, <span class="number">100</span>) / <span class="number">10000</span></span><br><span class="line">img_HWC[:, :, <span class="number">1</span>] = <span class="number">1</span> - np.arange(<span class="number">0</span>, <span class="number">10000</span>).reshape(<span class="number">100</span>, <span class="number">100</span>) / <span class="number">10000</span></span><br><span class="line"></span><br><span class="line">writer = SummaryWriter()</span><br><span class="line">writer.add_image(<span class="string">&#x27;my_image&#x27;</span>, img, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># If you have non-default dimension setting, set the dataformats argument.</span></span><br><span class="line">writer.add_image(<span class="string">&#x27;my_image_HWC&#x27;</span>, img_HWC, <span class="number">0</span>, dataformats=<span class="string">&#x27;HWC&#x27;</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_image</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806203930908.png" alt="image-20220806203930908" /></p>
<h3 id="添加batched-image-data到summary"><a class="markdownIt-Anchor" href="#添加batched-image-data到summary"></a> 添加batched image data到summary</h3>
<p>注意其要求<code>pillow</code>包</p>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>img_tensor(torch.Tensor, numpy.array, or string/blobname)</code>：image data</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
<li><code>dataformats(string)</code>：指定特定的image数据格式（CHW, HWC, HW, WH等）。</li>
</ul>
<p>Shape：</p>
<p><code>img_tensor</code>默认为(N, 3, H, W)，如果指定<code>dataformats</code>，其他shape也可以被接受，如NCHW或NHWC。</p>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img_batch = np.zeros((<span class="number">16</span>, <span class="number">3</span>, <span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    img_batch[i, <span class="number">0</span>] = np.arange(<span class="number">0</span>, <span class="number">10000</span>).reshape(<span class="number">100</span>, <span class="number">100</span>) / <span class="number">10000</span> / <span class="number">16</span> * i</span><br><span class="line">    img_batch[i, <span class="number">1</span>] = (<span class="number">1</span> - np.arange(<span class="number">0</span>, <span class="number">10000</span>).reshape(<span class="number">100</span>, <span class="number">100</span>) / <span class="number">10000</span>) / <span class="number">16</span> * i</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter()</span><br><span class="line">writer.add_images(<span class="string">&#x27;my_image_batch&#x27;</span>, img_batch, <span class="number">0</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_images</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220806205216711.png" alt="image-20220806205216711" /></p>
<h3 id="渲染matplotlib-figure为一张image并加入summary"><a class="markdownIt-Anchor" href="#渲染matplotlib-figure为一张image并加入summary"></a> 渲染matplotlib figure为一张image并加入summary</h3>
<p>注意要求<code>matplotlib</code>包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_figure(tag, figure, global_step=<span class="literal">None</span>, close=<span class="literal">True</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>figure(matplotlib.pyplot.figure)</code>：Figure或者figures列表</li>
<li><code>close(bool)</code>：自动关闭figure的flag</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<h3 id="添加video数据到summary"><a class="markdownIt-Anchor" href="#添加video数据到summary"></a> 添加video数据到summary</h3>
<p>主要要求<code>moviepy</code>包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_video(tag, vid_tensor, global_step=<span class="literal">None</span>, fps=<span class="number">4</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>vid_tensor(torch.Tensor)</code>：Video数据</li>
<li><code>global_step(int)</code>：记录的Global step值</li>
<li><code>fps(float or int)</code>：每秒帧数</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<p>Shape：</p>
<p><code>vid_tensor</code>为(N, T, C, H, W)。值应该位于[0, 255]为uint8类型，或者[0, 1]的float类型</p>
<h3 id="添加audio数据到summary"><a class="markdownIt-Anchor" href="#添加audio数据到summary"></a> 添加audio数据到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_audio(tag, snd_tensor, global_step=<span class="literal">None</span>, sample_rate=<span class="number">44100</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>snd_tensor(torch.Tensor)</code>：Sound数据</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>sample_rate(int)</code>：sample rate，单位为Hz</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<p>Shape：</p>
<p><code>snd_tensor</code>为(1, L)，值位于[-1, 1]</p>
<h3 id="添加text数据到summary"><a class="markdownIt-Anchor" href="#添加text数据到summary"></a> 添加text数据到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_text(tag, text_string, global_step=<span class="literal">None</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>text_string(string)</code>：存储的String。</li>
<li><code>global_step(int)</code>：记录的Global step value</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">writer.add_text(<span class="string">&#x27;lstm&#x27;</span>, <span class="string">&#x27;This is an lstm&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">writer.add_text(<span class="string">&#x27;rnn&#x27;</span>, <span class="string">&#x27;This is an rnn&#x27;</span>, <span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<h3 id="添加graph数据到summary"><a class="markdownIt-Anchor" href="#添加graph数据到summary"></a> 添加graph数据到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_graph(model, input_to_model=<span class="literal">None</span>, verbose=<span class="literal">False</span>, use_strict_trace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>model(torch.nn.Module)</code>：要画的模型</li>
<li><code>input_to_model(torch.Tensor or list of torch.Tensor)</code>：一个变量或者要输入的一个变量元组。</li>
<li><code>verbose(bool)</code>：是否在console中打印出graph结构。</li>
<li><code>use_strict_trace(bool)</code>：是否传递keyword 参数 strict到<code>torch.jit.trace</code>。当你想tracer记录mutable container类型（如list, dict）时传递False</li>
</ul>
<h3 id="添加embedding-projector数据到summary"><a class="markdownIt-Anchor" href="#添加embedding-projector数据到summary"></a> 添加embedding projector数据到summary</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_embedding(mat, metadata=<span class="literal">None</span>, label_img=<span class="literal">None</span>, global_step=<span class="literal">None</span>, tag=<span class="string">&#x27;default&#x27;</span>, metadata_header=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>mat(torch.Tensor or numpy.array)</code>：一个矩阵，每一行为data point的feature vector</li>
<li><code>metadata(list)</code>：labels列表，每个元素将转换为string</li>
<li><code>label_img(torch.Tensor)</code>：对应每个data point的image</li>
<li><code>global_step(int)</code>：记录的Global step值</li>
<li><code>tag(string)</code>：embedding名</li>
</ul>
<p>Shape：</p>
<p><code>mat</code>为(N, D)，N为data数量，D为特征维数；<code>label_img</code>为(N, C, H, W)</p>
<p>例如：输出有误</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">meta = []</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(meta)&lt;<span class="number">100</span>:</span><br><span class="line">    meta = meta+keyword.kwlist <span class="comment"># get some strings</span></span><br><span class="line">meta = meta[:<span class="number">100</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(meta):</span><br><span class="line">    meta[i] = v+<span class="built_in">str</span>(i)</span><br><span class="line"></span><br><span class="line">label_img = torch.rand(<span class="number">100</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    label_img[i]*=i/<span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">writer.add_embedding(torch.randn(<span class="number">100</span>, <span class="number">5</span>), metadata=meta, label_img=label_img)</span><br><span class="line">writer.add_embedding(torch.randn(<span class="number">100</span>, <span class="number">5</span>), label_img=label_img)</span><br><span class="line">writer.add_embedding(torch.randn(<span class="number">100</span>, <span class="number">5</span>), metadata=meta)</span><br></pre></td></tr></table></figure>
<h3 id="添加precision-recall曲线"><a class="markdownIt-Anchor" href="#添加precision-recall曲线"></a> 添加precision recall曲线</h3>
<p>画precision-recall曲线让你理解在不同阈值设置下你的模型性能。使用这个函数，你提供真值labeling(T/F)和对每个target的预测置信度（通常为模型输出）。TensorBoard UI将会让你交互式地选择阈值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_pr_curve(tag, labels, predictions, global_step=<span class="literal">None</span>, num_thresholds=<span class="number">127</span>, weights=<span class="literal">None</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>
<p><code>tag(string)</code>：数据标识器（identifier）</p>
</li>
<li>
<p><code>labels(torch.Tensor, numpy.array, or string/blobname)</code>：真值数据，每个元素的二值label。</p>
</li>
<li>
<p><code>predictions(torch.Tensor, numpy.array, or string/blobname)</code>：每个元素正确分类的概率，值应该在[0, 1]</p>
</li>
<li>
<p><code>global_step(int)</code>：记录的Global step值</p>
</li>
<li>
<p><code>num_thresholds(int)</code>：用来画曲线的阈值数量</p>
</li>
<li>
<p><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</p>
</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">labels = np.random.randint(<span class="number">2</span>, size=<span class="number">100</span>)  <span class="comment"># binary label</span></span><br><span class="line">predictions = np.random.rand(<span class="number">100</span>)</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;add_pr_curve&quot;</span>)</span><br><span class="line">writer.add_pr_curve(<span class="string">&#x27;pr_curve&#x27;</span>, labels, predictions, <span class="number">0</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_pr_curve</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220807000205981.png" alt="image-20220807000205981" /></p>
<h3 id="通过在scalars中收集charts-tags创建专门的chart"><a class="markdownIt-Anchor" href="#通过在scalars中收集charts-tags创建专门的chart"></a> 通过在scalars中收集charts tags创建专门的chart</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_custom_scalars(layout)</span><br></pre></td></tr></table></figure>
<p>注意该函数对每个SummaryWriter()对象只能调用一次。因为它只对tensorboard提供元数据，该函数可以在training loop之前或之后调用。</p>
<p>参数：</p>
<ul>
<li><code>layout(dict)</code>：{categoryName: charts}，charts也是一个字典{chartName: ListOfProperties}。ListOfProperties的第一个元素是chart的类型（多行或者Margin之一），第二个元素应该是一个列表，包含在add_scalar函数中使用的tags，它们会被收集到new chart。</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;add_custom_scalars&quot;</span>)</span><br><span class="line"></span><br><span class="line">layout = &#123;<span class="string">&#x27;Taiwan&#x27;</span>:&#123;<span class="string">&#x27;twse&#x27;</span>:[<span class="string">&#x27;Multiline&#x27;</span>,[<span class="string">&#x27;twse/0050&#x27;</span>, <span class="string">&#x27;twse/2330&#x27;</span>]]&#125;,</span><br><span class="line">             <span class="string">&#x27;USA&#x27;</span>:&#123; <span class="string">&#x27;dow&#x27;</span>:[<span class="string">&#x27;Margin&#x27;</span>,   [<span class="string">&#x27;dow/aaa&#x27;</span>, <span class="string">&#x27;dow/bbb&#x27;</span>, <span class="string">&#x27;dow/ccc&#x27;</span>]],</span><br><span class="line">                  <span class="string">&#x27;nasdaq&#x27;</span>:[<span class="string">&#x27;Margin&#x27;</span>,   [<span class="string">&#x27;nasdaq/aaa&#x27;</span>, <span class="string">&#x27;nasdaq/bbb&#x27;</span>, <span class="string">&#x27;nasdaq/ccc&#x27;</span>]]&#125;&#125;</span><br><span class="line"></span><br><span class="line">writer.add_custom_scalars(layout)</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_custom_scalars</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220807102302198.png" alt="image-20220807102302198" /></p>
<h3 id="添加meshes或3d-point-clouds到tensorboard"><a class="markdownIt-Anchor" href="#添加meshes或3d-point-clouds到tensorboard"></a> 添加meshes或3D point clouds到TensorBoard</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_mesh(tag, vertices, colors=<span class="literal">None</span>, faces=<span class="literal">None</span>, config_dict=<span class="literal">None</span>, global_step=<span class="literal">None</span>, walltime=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>此可视化基于Three.js，所以它允许用户和被渲染的对象交互。除了基础的定义如vertices/faces外，用户可以提供camera parameters/lighting condition等。在 <a href="https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene">https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene</a> 进一步学习</p>
<p>参数：</p>
<ul>
<li><code>tag(string)</code>：数据标识器（identifier）</li>
<li><code>vertices(torch.Tensor)</code>：3D 顶点坐标列表</li>
<li><code>colors(torch.Tensor)</code>：每个顶点颜色</li>
<li><code>faces(torch.Tensor)</code>：每个矩形中顶点索引（可选）</li>
<li><code>config_dict</code>：ThreeJS类名和配置的字典</li>
<li><code>global_step(int)</code>：记录Global step value</li>
<li><code>walltime(float)</code>：可选择，用于覆盖默认的walltime(<code>time.time()</code>)，表示在epoch of event后的几秒</li>
</ul>
<p>Shape：</p>
<ul>
<li><code>vertices</code>：(B, N, 3)，顶点数目，通道数</li>
<li><code>colors</code>：(B, N, 3)，值应该为[0, 255]的uint8，或者[0, 1]的float</li>
<li><code>faces</code>：(B, N, 3)，值应该为[0, 顶点数]的uint8</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line">vertices_tensor = torch.as_tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [-<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>],</span><br><span class="line">    [-<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>],</span><br><span class="line">], dtype=torch.<span class="built_in">float</span>).unsqueeze(<span class="number">0</span>)</span><br><span class="line">colors_tensor = torch.as_tensor([</span><br><span class="line">    [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>],</span><br><span class="line">    [<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>],</span><br><span class="line">], dtype=torch.<span class="built_in">int</span>).unsqueeze(<span class="number">0</span>)</span><br><span class="line">faces_tensor = torch.as_tensor([</span><br><span class="line">    [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>],</span><br><span class="line">], dtype=torch.<span class="built_in">int</span>).unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter()</span><br><span class="line">writer.add_mesh(<span class="string">&#x27;my_mesh&#x27;</span>, vertices=vertices_tensor, colors=colors_tensor, faces=faces_tensor)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_mesh</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220807103349415.png" alt="image-20220807103349415" /></p>
<h3 id="添加一系列hyperparameters到tensorboard中比较"><a class="markdownIt-Anchor" href="#添加一系列hyperparameters到tensorboard中比较"></a> 添加一系列hyperparameters到TensorBoard中比较</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_hparams(hparam_dict, metric_dict, hparam_domain_discrete=<span class="literal">None</span>, run_name=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li><code>hparam_dict(dict)</code>：每个字典中的键值对为超参数名和其对应值。值类型为bool/string/float/int/None。</li>
<li><code>metric_dict(dict)</code>：每个键值对为metric名和对应值。注意用在这的key应该是unique，否则通过<code>add_scalar</code>添加的值将显示在hparam部分。大多数场景下这不是我们想要的。</li>
<li><code>hparam_domain_discrete</code>：可选，包含超参数名和其离散值的字典</li>
<li><code>run_time(str)</code>：run的名，包含在logdir部分。如果不指定，将使用当前时间戳。</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">with</span> SummaryWriter() <span class="keyword">as</span> w:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        w.add_hparams(&#123;<span class="string">&#x27;lr&#x27;</span>: <span class="number">0.1</span>*i, <span class="string">&#x27;bsize&#x27;</span>: i&#125;,</span><br><span class="line">                      &#123;<span class="string">&#x27;hparam/accuracy&#x27;</span>: <span class="number">10</span>*i, <span class="string">&#x27;hparam/loss&#x27;</span>: <span class="number">10</span>*i&#125;)</span><br></pre></td></tr></table></figure>
<p><code>tensorboard --logdir=add_hparams</code>运行结果如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220807104044985.png" alt="image-20220807104044985" /></p>
<p><code>flush()</code>：刷新写入disk的event文件，调用该方法确保所有pending events写入disk</p>
<p><code>close()</code>：关闭SummaryWriter对象，停止写入</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/tensorboard.html">TORCH.UTILS.TENSORBOARD</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch nn.Module</title>
    <url>/2022/07/20/PyTorch-nn-Module/</url>
    <content><![CDATA[<p>本文记录一下PyTorch中最核心的类之一——<code>torch.nn.Module</code>。</p>
<span id="more"></span>
<h3 id="torchnnmodule"><a class="markdownIt-Anchor" href="#torchnnmodule"></a> torch.nn.Module</h3>
<p>所有神经网络modules的基本类，所有的模型（包括自定义模型）都应该是该类的子类。Modules也可以包含其它的Module，即允许以树的结构嵌套。能够将子模块赋值给模块属性：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Model</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">20</span>, <span class="number">5</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">20</span>, <span class="number">20</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.relu(self.conv1(x))</span><br><span class="line">        <span class="keyword">return</span> F.relu(self.conv2(x))</span><br></pre></td></tr></table></figure>
<p>通过上述方式赋值的子模块将被注册，调用<code>to(device)</code>时，子模块的参数也会转换为<code>cuda Tensor</code>。</p>
<p>PS：在赋值给子模块之前必须调用父类的<code>__init__()</code>。</p>
<p><code>training</code>：bool类型，表示模块处于training还是evaluation模式</p>
<p><code>add_module(name, module)</code>：给当前模块添加一个子模块，该子模块可以通过给出的<code>name</code>作为属性被获取。</p>
<p><code>apply(fn)</code>：递归地将<code>fn</code>应用到每个子模块（通过<code>.children()</code>返回）以及自身。典型的使用方式包括初始化模型的参数（see also <a href="https://pytorch.org/docs/stable/nn.init.html#nn-init-doc">torch.nn.init</a>）</p>
<ul>
<li>
<p>参数：<code>fn(Module-&gt;None)</code>，应用到每个子模块的函数</p>
</li>
<li>
<p>返回：self</p>
</li>
<li>
<p>返回类型：Module</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@torch.no_grad()</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_weights</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(m) == nn.Linear:</span><br><span class="line">        m.weight.fill_(<span class="number">1.0</span>)</span><br><span class="line">        <span class="built_in">print</span>(m.weight)</span><br><span class="line">net = nn.Sequential(nn.Linear(<span class="number">2</span>, <span class="number">2</span>), nn.Linear(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">net.apply(init_weights)</span><br><span class="line">Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">1.</span>,  <span class="number">1.</span>],</span><br><span class="line">        [ <span class="number">1.</span>,  <span class="number">1.</span>]])</span><br><span class="line">Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">1.</span>,  <span class="number">1.</span>],</span><br><span class="line">        [ <span class="number">1.</span>,  <span class="number">1.</span>]])</span><br><span class="line">Sequential(</span><br><span class="line">  (<span class="number">0</span>): Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">  (<span class="number">1</span>): Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">)</span><br><span class="line">Sequential(</span><br><span class="line">  (<span class="number">0</span>): Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">  (<span class="number">1</span>): Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>buffers(recurse=True)</code>：返回module buffers的迭代器。</p>
<ul>
<li>
<p>参数：<code>recurse(bool)</code>，如果为True，返回该模块和所有子模块的buffers迭代器；如果为False，只返回该模块直接成员的buffers迭代器</p>
</li>
<li>
<p>Yields：torch.Tensor，一个模型的buffer</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> buf <span class="keyword">in</span> model.buffers():</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    <span class="built_in">print</span>(<span class="built_in">type</span>(buf), buf.size())</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;torch.Tensor&#x27;</span>&gt; (<span class="number">20L</span>,)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;torch.Tensor&#x27;</span>&gt; (<span class="number">20L</span>, <span class="number">1L</span>, <span class="number">5L</span>, <span class="number">5L</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>children()</code>：返回直接的子模块的迭代器。</p>
<ul>
<li>Yields：Module类型，一个子模块</li>
</ul>
<p><code>cpu()</code>：将所有的模型参数和buffers转移到CPU。该方法modify the module in-place。</p>
<ul>
<li>Returns：self</li>
<li>Return type：Module</li>
</ul>
<p><code>cuda(device=None)</code>：将所有的模型参数和buffers转移到GPU。这也使得相关联的参数和buffers为不同的对象。所以如果模块在优化期间保留在GPU上时，该函数应在在构造优化器之前被调用。该方法modify the module in-place。</p>
<ul>
<li>参数：<code>device(int, optional)</code>，如果指定的话，所有的参数将被复制到该device。</li>
<li>Returns：self</li>
<li>Return type：Module</li>
</ul>
<p><code>eval()</code>：设置module到evaluation模式。它和<code>self.train(False)</code>等价，可以在 <a href="https://pytorch.org/docs/stable/notes/autograd.html#locally-disable-grad-doc">Localling disabling gradient computation</a> 看到其和一些相似机制的比较</p>
<ul>
<li>Returns：self</li>
<li>Return type：Module</li>
</ul>
<p><code>forward(*input)</code>：定义在每次调用它时进行的计算，应该被所有的子类覆盖。</p>
<ul>
<li>PS：不太懂，尽管forward操作定义在该函数内部，但是应该调用Module instance而不是该函数，因为前者会考虑registered hooks而后者不会</li>
</ul>
<p><code>get_parameter(target)</code>：返回由target给出的参数，如果存在的话，否则抛出error。</p>
<ul>
<li>参数：<code>target</code>，fully-qualified的对应参数的字符串名</li>
<li>Returns：target引用的参数</li>
<li>Return type：torch.nn.Parameter</li>
<li>Raises：AttributeError</li>
</ul>
<p><code>load_state_dict(state_dict, strict=True)</code>：将来自<code>state_dict</code>的参数和buffers复制到该模块和它的子模块。如果<code>strict=True</code>，那么<code>state_dict</code>的keys必须和该模块<code>state_dict()</code>函数返回的keys完全匹配。</p>
<ul>
<li>
<p>参数：</p>
<ul>
<li><code>state_dict(dict)</code>：一个包含参数和永久buffers的dict</li>
<li><code>strict(bool, optional)</code>：使用严格限制keys的匹配，默认为True。</li>
</ul>
</li>
<li>
<p>Returns：missing_keys，一个包含missing keys的字符串列表；unexpected_keys，一个包含unexpected_keys的字符串列表</p>
</li>
<li>
<p>Return type：具有<code>missing_keys</code>和<code>unexpected_keys</code>名的元组</p>
</li>
<li>
<p>PS：如果一个参数或buffer registered as None并且它对应的key存在在<code>state_dict</code>中，调用<code>load_state_dict()</code>会raise <code>RuntimeError</code>。</p>
</li>
</ul>
<p><code>modules()</code>：返回在网络中的所有模块的迭代器</p>
<ul>
<li>
<p>Yields：Module，网络中的模块</p>
</li>
<li>
<p>PS：重复的模块只返回一次。在下面的例子中，<code>l</code>只返回一次</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>l = nn.Linear(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>net = nn.Sequential(l, l)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> idx, m <span class="keyword">in</span> <span class="built_in">enumerate</span>(net.modules()):</span><br><span class="line">        <span class="built_in">print</span>(idx, <span class="string">&#x27;-&gt;&#x27;</span>, m)</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> -&gt; Sequential(</span><br><span class="line">  (<span class="number">0</span>): Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">  (<span class="number">1</span>): Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">)</span><br><span class="line"><span class="number">1</span> -&gt; Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>named_children()</code>：返回之间子模块的迭代器，生成模块名和模块自身。</p>
<ul>
<li>
<p>Yields：(string, Module)，包含一个模块名和子模块的元组</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name, module <span class="keyword">in</span> model.named_children():</span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">in</span> [<span class="string">&#x27;conv4&#x27;</span>, <span class="string">&#x27;conv5&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(module)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>named_parameters(prefix='', recurse=True)</code>：返回模块参数的迭代器，生成参数名和参数。</p>
<ul>
<li>参数：
<ul>
<li><code>prefix(str)</code>：添加到所有参数名之前的前缀</li>
<li><code>recurse(bool)</code>：如果为True，生成该模块和所有此模块的参数。</li>
</ul>
</li>
</ul>
<p>可以通过以下方式获取<code>named_parameters</code>的参数名和参数值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">base_name, base_value = [], []</span><br><span class="line"><span class="keyword">for</span> name, param <span class="keyword">in</span> net.named_parameters():</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;bkbone&#x27;</span> <span class="keyword">in</span> name:</span><br><span class="line">        	base_name.append(name)</span><br><span class="line">            base_value.append(param)</span><br></pre></td></tr></table></figure>
<p>得到的部分参数名示例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bkbone.conv1.weight</span><br><span class="line">bkbone.bn1.weight</span><br><span class="line">bkbone.bn1.bias</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.conv1.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.bn1.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.bn1.bias</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.conv2.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.bn2.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.bn2.bias</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.conv3.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.bn3.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.bn3.bias</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.downsample<span class="number">.0</span>.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.downsample<span class="number">.1</span>.weight</span><br><span class="line">bkbone.layer1<span class="number">.0</span>.downsample<span class="number">.1</span>.bias</span><br></pre></td></tr></table></figure>
<p><code>parameters(recurse=True)</code>：返回模块参数的迭代器，通常传给一个优化器。</p>
<ul>
<li>
<p>参数：<code>recurse(bool)</code>，如果为True，迭代所有的模块和子模块。否则，只迭代该模块的直接成员参数。</p>
</li>
<li>
<p>Yields：Parameter，模块参数</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> param <span class="keyword">in</span> model.parameters():</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    <span class="built_in">print</span>(<span class="built_in">type</span>(param), param.size())</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;torch.Tensor&#x27;</span>&gt; (<span class="number">20L</span>,)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;torch.Tensor&#x27;</span>&gt; (<span class="number">20L</span>, <span class="number">1L</span>, <span class="number">5L</span>, <span class="number">5L</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>state_dict(**args*, *destination=None*, *prefix=''*, *keep_vars=False*)</code>：返回包含模块整个状态的字典。参数和永久性buffers(例如running averages)被包含，Keys是相应的参数和buffer名。如果不包含参数和buffers设置为None。</p>
<ul>
<li>
<p>Warning：目前<code>state_dict()</code>也按顺序接受位置参数<code>destination</code>，<code>prefix</code>和<code>keep_vars</code>，它们是deprecated；此外，避免参数<code>destination</code>的使用，它不是为用户设计的。</p>
</li>
<li>
<p>参数：</p>
<ul>
<li><code>destination(dict, optional)</code>：略。</li>
<li><code>prefix(str, optional)</code>：略</li>
<li><code>key_vars(bool, optional)</code>：略</li>
</ul>
</li>
<li>
<p>Returns：一个包含模块整个状态的字典</p>
</li>
<li>
<p>Return type：dict</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>module.state_dict().keys()</span><br><span class="line">[<span class="string">&#x27;bias&#x27;</span>, <span class="string">&#x27;weight&#x27;</span>]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>to(*args, **kwargs)</code>：移动参数和buffers或者cast它们到指定类型。能够以以下的形式调用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">to(device=<span class="literal">None</span>, dtype=<span class="literal">None</span>, non_blocking=<span class="literal">False</span>)</span><br><span class="line">to(dtype, non_blocking=<span class="literal">False</span>)</span><br><span class="line">to(tensor, non_blocking=<span class="literal">False</span>)</span><br><span class="line">to(memory_format=torch.channels_last)</span><br></pre></td></tr></table></figure>
<p>其特性和<code>torch.Tensor.to()</code>类似，但是只接受浮点或符合类型的<code>dtype</code>。</p>
<ul>
<li>
<p>PS：该方法 modify the modules in-place</p>
</li>
<li>
<p>参数：</p>
<ul>
<li><code>device（torch.device)</code>：在模块中参数和buffers所需的device</li>
<li><code>dtype(torch.dtype)</code>：在模块中参数和buffers所需的浮点或复合 dtype</li>
<li><code>tensor(torch.Tensor)</code>：对在模块中的所有参数和buffers来说该tensor的dtype和device是它们所需的。</li>
<li><code>memory_format(torch.memory_format)</code>：略</li>
</ul>
</li>
<li>
<p>Returns：self</p>
</li>
<li>
<p>Return type：Module</p>
</li>
<li>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear = nn.Linear(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.weight</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">0.1913</span>, -<span class="number">0.3420</span>],</span><br><span class="line">        [-<span class="number">0.5113</span>, -<span class="number">0.2325</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.to(torch.double)</span><br><span class="line">Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.weight</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">0.1913</span>, -<span class="number">0.3420</span>],</span><br><span class="line">        [-<span class="number">0.5113</span>, -<span class="number">0.2325</span>]], dtype=torch.float64)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>gpu1 = torch.device(<span class="string">&quot;cuda:1&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.to(gpu1, dtype=torch.half, non_blocking=<span class="literal">True</span>)</span><br><span class="line">Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.weight</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">0.1914</span>, -<span class="number">0.3420</span>],</span><br><span class="line">        [-<span class="number">0.5112</span>, -<span class="number">0.2324</span>]], dtype=torch.float16, device=<span class="string">&#x27;cuda:1&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cpu = torch.device(<span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.to(cpu)</span><br><span class="line">Linear(in_features=<span class="number">2</span>, out_features=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.weight</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">0.1914</span>, -<span class="number">0.3420</span>],</span><br><span class="line">        [-<span class="number">0.5112</span>, -<span class="number">0.2324</span>]], dtype=torch.float16)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear = nn.Linear(<span class="number">2</span>, <span class="number">2</span>, bias=<span class="literal">None</span>).to(torch.cdouble)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear.weight</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([[ <span class="number">0.3741</span>+<span class="number">0.j</span>,  <span class="number">0.2382</span>+<span class="number">0.j</span>],</span><br><span class="line">        [ <span class="number">0.5593</span>+<span class="number">0.j</span>, -<span class="number">0.4443</span>+<span class="number">0.j</span>]], dtype=torch.complex128)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>linear(torch.ones(<span class="number">3</span>, <span class="number">2</span>, dtype=torch.cdouble))</span><br><span class="line">tensor([[<span class="number">0.6122</span>+<span class="number">0.j</span>, <span class="number">0.1150</span>+<span class="number">0.j</span>],</span><br><span class="line">        [<span class="number">0.6122</span>+<span class="number">0.j</span>, <span class="number">0.1150</span>+<span class="number">0.j</span>],</span><br><span class="line">        [<span class="number">0.6122</span>+<span class="number">0.j</span>, <span class="number">0.1150</span>+<span class="number">0.j</span>]], dtype=torch.complex128)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>train(mode=True)</code>：设置模块为training mode。</p>
<ul>
<li>参数：<code>mode(bool)</code>，是否设置training mode还是evaluation mode，默认为True</li>
<li>Returns：self</li>
<li>Return type：Module</li>
</ul>
<p><code>type(dst_type)</code>：将所有参数和buffers转换为<code>dst_type</code>。该方法modify the module in-place。</p>
<ul>
<li>参数：<code>dst_type(type or string)</code>，目标类型</li>
<li>Returns：self</li>
<li>Return type：Module</li>
</ul>
<p><code>zero_grad(set_to_none=False)</code>：设置所有模型参数的梯度为0。可以看 <a href="https://pytorch.org/docs/stable/optim.html#torch.optim.Optimizer">torch.optim.Optimizer</a> 下相似的函数获得更多信息。</p>
<ul>
<li>参数：<code>set_to_none(bool)</code>：设置为None而不是0，可以看 <a href="https://pytorch.org/docs/stable/generated/torch.optim.Optimizer.zero_grad.html#torch.optim.Optimizer.zero_grad">torch.optim.Optimizer.zero_grad</a> 了解更多细节</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Module.html">MODULE</a></li>
<li><a href="https://pytorch-cn.readthedocs.io/zh/latest/package_references/torch-nn/#containers">class torch.nn.Module</a></li>
</ol>
</blockquote>
<h4 id="nnmoduleforward"><a class="markdownIt-Anchor" href="#nnmoduleforward"></a> nn.Module.forward</h4>
<p>为什么在下述代码中通过<code>model(input)</code>获取<code>output</code>，而不是<code>model.forward(input)</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyModel, self).__init__()</span><br><span class="line">        conv = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">        self.weight = conv.weight</span><br><span class="line">        self.bias = conv.bias</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.conv2d(x, self.weight, self.bias)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    model = MyModel()</span><br><span class="line">    <span class="built_in">print</span>(model)</span><br><span class="line">    <span class="built_in">input</span>=torch.randn(<span class="number">1</span>, <span class="number">1</span>, <span class="number">32</span>, <span class="number">32</span>)</span><br><span class="line">    output = model(<span class="built_in">input</span>)</span><br></pre></td></tr></table></figure>
<p>当直接调用model时，会调用内置的<code>__call__</code>函数。在代码 <a href="https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/module.py#L471">the code</a> 中可以看到，该函数会管理所有的registered hooks并且在之后调用<code>forward</code>。这也是应该直接调用model的原因，因为可能hooks可能不会work。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/about-the-nn-module-forward/20858">About the ‘nn.Module.forward’</a></li>
<li><a href="https://pytorch.org/tutorials/beginner/blitz/neural_networks_tutorial.html#define-the-network">NEURAL NETWORKS</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch saving and loading models</title>
    <url>/2022/07/20/PyTorch-saving-and-loading-models/</url>
    <content><![CDATA[<p>本文记录PyTorch中的核心操作之一——saving and loading models。</p>
<span id="more"></span>
<h3 id="saving-and-loading-models"><a class="markdownIt-Anchor" href="#saving-and-loading-models"></a> saving and loading models</h3>
<p>本文档提供了对Pytorch models进行存储和加载的不同使用场景的解决方案。当谈到存储和加载模型，有三个核心函数很相似：</p>
<ul>
<li><code>torch.save</code>：存储一个serialized object到磁盘，该函数使用Python的<code>pickle</code> utility来序列化（serialization）。Models/tensors和各种类型对象的字典都可以使用该函数存储</li>
<li><code>torch.load</code>：使用<code>pickle</code>的unpickling能力来反序列化pickled对象文件到内存中。该函数也可以设置用来加载数据的设备（如gpu），见 <a href="https://pytorch.org/tutorials/beginner/saving_loading_models.html#saving-loading-model-across-devices">Saving &amp; Loading Model Across Devices</a>。</li>
<li><code>torch.nn.Module.load_state_dict</code>：使用反序列化的state_dict加载模型的参数字典，详细信息见 <a href="https://pytorch.org/tutorials/beginner/saving_loading_models.html#what-is-a-state-dict">What is a state_dict?</a>。</li>
</ul>
<p><strong>什么是<code>state_dict</code>?</strong></p>
<p>在Pytorch中， 一个<code>torch.nn.Module</code>模型的可学习的参数（如权重和偏差）被包含在模型的参数中（可以通过<code>model.parameters()</code>获取。一个state_dict就是一个简单的Python字典对象，其将每个layer映射到它的参数tensor。注意只有具有可学习参数的layers（如卷积层，线性层等）和具有registered buffers（batchnorm’s running_mean）的layers在模型的state_dict中有入口。Optimizer对象（<code>torch.optim</code>）也有一个state_dict，它包含关于优化器的状态信息和使用的超参数。</p>
<p>因为state_dict是Python字典，所以它们可以很容易地存储、更新、更变和恢复，这使得Pytorch的模型和优化器得以模块化。</p>
<p><strong>Example</strong></p>
<p>下面看一下 <a href="https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py">Training a classifier</a> 教程中一个简单的分类器的state_dict：</p>
<pre><code># Define model
class TheModelClass(nn.Module):
    def __init__(self):
        super(TheModelClass, self).__init__()
        self.conv1 = nn.Conv2d(3, 6, 5)
        self.pool = nn.MaxPool2d(2, 2)
        self.conv2 = nn.Conv2d(6, 16, 5)
        self.fc1 = nn.Linear(16 * 5 * 5, 120)
        self.fc2 = nn.Linear(120, 84)
        self.fc3 = nn.Linear(84, 10)

    def forward(self, x):
        x = self.pool(F.relu(self.conv1(x)))
        x = self.pool(F.relu(self.conv2(x)))
        x = x.view(-1, 16 * 5 * 5)
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        x = self.fc3(x)
        return x

# Initialize model
model = TheModelClass()

# Initialize optimizer
optimizer = optim.SGD(model.parameters(), lr=0.001, momentum=0.9)

# Print model's state_dict
print(&quot;Model's state_dict:&quot;)
for param_tensor in model.state_dict():
    print(param_tensor, &quot;\t&quot;, model.state_dict()[param_tensor].size())

# Print optimizer's state_dict
print(&quot;Optimizer's state_dict:&quot;)
for var_name in optimizer.state_dict():
    print(var_name, &quot;\t&quot;, optimizer.state_dict()[var_name])
</code></pre>
<p>其输出为：</p>
<pre><code>Model's state_dict:
conv1.weight     torch.Size([6, 3, 5, 5])
conv1.bias   torch.Size([6])
conv2.weight     torch.Size([16, 6, 5, 5])
conv2.bias   torch.Size([16])
fc1.weight   torch.Size([120, 400])
fc1.bias     torch.Size([120])
fc2.weight   torch.Size([84, 120])
fc2.bias     torch.Size([84])
fc3.weight   torch.Size([10, 84])
fc3.bias     torch.Size([10])

Optimizer's state_dict:
state    &#123;&#125;
param_groups     [&#123;'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [4675713712, 4675713784, 4675714000, 4675714072, 4675714216, 4675714288, 4675714432, 4675714504, 4675714648, 4675714720]&#125;]
</code></pre>
<p><strong>存储和加载模型用于推断</strong></p>
<p>存储/加载<code>state_dict</code>（建议）</p>
<p>Save：<code>torch.save(model.state_dict(), PATH)</code></p>
<p>Load：</p>
<pre><code>model = TheModelClass(*args, **kwargs)
model.load_state_dict(torch.load(PATH))
model.eval()
</code></pre>
<p>PS：PyTorch1.6版本将<code>torch.save</code>的存储格式转换为了一个新的基于zipfile的文件格式。<code>torch.load</code>仍然保持加载老的pth/pt格式文件的能力。如果想要使用<code>torch.save</code>存储老的文件格式pth/pt，可以使用参数 <code>_use_new_zipfile_serialization=False</code>。</p>
<p>当加载一个模型用于推断时，只有必要存储训练模型的可学习的参数。使用<code>torch.save()</code>存储模型的state_dict将对以后恢复模型给出最大的灵活性，这也是推荐它存储模型的原因。</p>
<p>一个PyTorch的惯例是使用pt/pth扩展名来存储模型。</p>
<p>记住在进行推断之前你必须调用<code>model.eval()</code>来设置dropout和batch normalization层来评估模型，不做这一步将导致生成不一致的推断结果。</p>
<p>PS：注意<code>load_state_dict()</code>函数将一个字典对象而不是一个存储对象的路径作为参数，这意味着在将state_dict传给该函数之前必须对其反序列化，例如，不能加载模型通过<code>model.load_state_dict(PATH)</code>。</p>
<p>PS：如果逆想要保存性能最好的模型（根据获得的验证损失），不要忘记<code>best_model_state=model.state_dict()</code>返回的是对state的引用而不是它的copy。你必须序列化<code>best_model_state</code>或者使用 <code>best_model_state = deepcopy(model.state_dict())</code> 否则你的<code>best_model_state</code>将会随着后续的训练迭代继续更新。结果，最终的模型state可能是一个过拟合模型的state。</p>
<p><strong>存储和加载模型</strong></p>
<p>Save：<code>torch.save(model, PATH)</code></p>
<p>Load：</p>
<pre><code># Model class must be defined somewhere
model = torch.load(PATH)
model.eval()
</code></pre>
<p>上述的存储/加载过程使用最直观的语法，涉及最少的代码。以这种方式存储模型将使用Python的pickle模块存储整个模型。该方法的缺点在于序列化的数据和特定的类以及当模型存储时的目录结构绑定。其原因在于pickle不存储模型类本身，而是存储一个包含该类的文件的路径，这个类会在加载时用到。因为这个原因，你的代码在其他的项目或者在重构后中使用可能会以多种形式中断。</p>
<p>一个PyTorch的惯例是使用pt/pth扩展名来存储模型。</p>
<p>记住在进行推断之前你必须调用<code>model.eval()</code>来设置dropout和batch normalization层来评估模型，不做这一步将导致生成不一致的推断结果。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/tutorials/beginner/saving_loading_models.html">saving and loading models</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch torch.utils.data</title>
    <url>/2022/07/20/PyTorch-torch-utils-data/</url>
    <content><![CDATA[<p>本文记录一下PyTorch中最核心的组成部分之一——<code>torch.utils.data</code>。</p>
<span id="more"></span>
<h3 id="torchutilsdata"><a class="markdownIt-Anchor" href="#torchutilsdata"></a> torch.utils.data</h3>
<p>该 package 的核心类为 <code>torch.utils.data.DataLoader</code>，表示在一个数据集上的迭代，其支持：</p>
<ul>
<li>map-style 和 iterable-style 的数据集</li>
<li>定制化数据加载顺序</li>
<li>自动 batching</li>
<li>单线程和多线程的数据加载</li>
<li>自动内存 pinning (固定)</li>
</ul>
<p>这些选项通过以下的 <code>DataLoader</code> 对象的构造器配置，其有signature：</p>
<pre><code>DataLoader(dataset, batch_size=1, shuffle=False, sampler=None,
           batch_sampler=None, num_workers=0, collate_fn=None,
           pin_memory=False, drop_last=False, timeout=0,
           worker_init_fn=None, *, prefetch_factor=2,
           persistent_workers=False)
</code></pre>
<h4 id="dataset-types"><a class="markdownIt-Anchor" href="#dataset-types"></a> Dataset Types</h4>
<p><code>DataLoader</code>构造器最重要的参数为<code>dataset</code>，它指定了从中加载数据的数据集对象。PyTorch支持两种不同类型的数据集：</p>
<ul>
<li>map-style datasets</li>
<li>iterable-style datasets</li>
</ul>
<h4 id="map-style-datasets"><a class="markdownIt-Anchor" href="#map-style-datasets"></a> Map-Style datasets</h4>
<p>一个map-style的数据集需要实现<code>__getitem__()</code>和<code>__len__()</code>这两个protocols，表示从indices/keys (可能非整型) 到 data samples的映射。</p>
<blockquote>
<p>protocols: 管理数据传输和接收的形式和步骤，如HTTP protocol。</p>
</blockquote>
<p>例如，一个数据集，当能够通过<code>dataset[idx]</code>访问时，可以从磁盘上的文件夹中读取第<code>idx</code>张image和它对应的label。详见 <a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.Dataset"><code>Dataset</code></a></p>
<h4 id="iterable-style-datasets"><a class="markdownIt-Anchor" href="#iterable-style-datasets"></a> Iterable-style datasets</h4>
<p>一个iterable-style的数据集是<code>IterableDataset</code>子类的一个实例，该子类需要实现<code>__iter__()</code> protocol，并且表示在data samples上的一个迭代。这种类型的数据集尤其适合这种情况，当随机读取代价很大甚至不可能，或者batch size依赖于所获取的数据。</p>
<p>例如，一个数据集，当调用<code>iter(dataset)</code>时，可以返回来自数据库、远程服务器甚至实时生成的logs的数据读取流。详见 <a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset"><code>IterableDataset</code></a></p>
<p>PS：当使用<code>IterableDataset</code>进行multi-process data loading时，相同的数据对象在每个worker process上重复，因此必须对副本进行不同的配置以避免重复数据，可以看 <a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset"><code>IterableDataset</code></a>文档了解如何实现。</p>
<h4 id="data-loading-order-and-sampler"><a class="markdownIt-Anchor" href="#data-loading-order-and-sampler"></a> Data Loading Order and <code>Sampler</code></h4>
<p>对于 iterable-style 数据集，数据加载顺序完全由用户定义的迭代器控制。这允许更容易的chunk-reading和动态的batch size的实现（如，通过每次生成一个 batched sample）</p>
<p>本节的剩余部分关心map-style数据集的情况。<code>torch.utils.data.Sampler</code>类被用来指定在数据加载中使用的indices/keys的序列。它们代表在数据集indices上的迭代器对象，例如，在SGD (stochastic gradient decent) 的公共实例中，一个Sampler可以任意排列indices的列表并且每次生成一个indice，或者对于mini-batch SGD生成少量indices。</p>
<p>一个sequential或者shuffled的sampler将会自动根据传递给<code>Dataloader</code>的<code>shuffle</code>参数构造。可选地，用户可能使用<code>sampler</code>参数来指定一个custom Sampler object，每次生成要取的下一个index/key。</p>
<p>一个可以一次生成一个batch indices列表的custom Sampler可以作为<code>batch_sampler</code>参数传递。automatic batching可以通过<code>batch_size</code>和<code>drop_last</code>参数来开启。详见下节获取细节。</p>
<p>PS：<code>sampler</code>和<code>batch_sampler</code>都不兼容iterable-style数据集，因为它们没有key/index的概念。</p>
<h4 id="loading-batched-and-non-batched-data"><a class="markdownIt-Anchor" href="#loading-batched-and-non-batched-data"></a> Loading Batched and Non-Batched Data</h4>
<p><code>DataLoader</code>支持自动地将通过<code>batch_size</code>、<code>drop_last</code>、<code>batch_sampler</code>和<code>collate_fn</code>(有默认函数)参数的每个取到的data samples整理到batches中。</p>
<p><strong>Automatic batching(default)</strong></p>
<p>最通用的情况，对应取得 a minibatch of data并将它们整理进batched samplers，例如整理一维Tensors为batch的维度。</p>
<p>当<code>batch_size</code>(默认为1)不为None时，data loader生成batched samples而不是individual samples，<code>batch_size</code>和<code>drop_last</code>被用来指定data loader如何获取batches of dataset keys。对于map-style数据集，用户可以选择指定<code>batch_sampler</code>，其将一次生成一个list of keys。</p>
<p>PS：<code>batch_size</code>和<code>drop_last</code>是用来从<code>sampler</code>中构建一个<code>batch_sampler</code>的关键。对于map-style数据集，<code>sampler</code>要么由用户提供，要么基于<code>shuffle</code>参数构建。对于iterable-style数据集，没有<code>sampler</code>或<code>batch_sampler</code>的概念</p>
<p>在通过sampler的indices取得 a list of samples后，作为<code>collate_fn</code>参数传递的函数被用来将list of samples整理为batches。在这种情况下，从map-style数据集中的加载数据可以大致等价于：</p>
<pre><code>for indices in batch_sampler:
    yield collate_fn([dataset[i] for i in indices])
</code></pre>
<p>从iterable-style数据集中加载数据可以大致等价于：</p>
<pre><code>dataset_iter = iter(dataset)
for indices in batch_sampler:
    yield collate_fn([next(dataset_iter) for _ in indices])
</code></pre>
<p>一个custom <code>collate_fn</code> 可以被用来 customize collation，例如，填充序列数据到batch的最大长度。</p>
<h4 id="disable-automatic-batching"><a class="markdownIt-Anchor" href="#disable-automatic-batching"></a> Disable automatic batching</h4>
<p>在某些情况下，用户可能想在数据集中手动管理batching，或者只是简单地加载individual samples。例如，可能直接加载batched data代价更小（例如从数据库中进行块访问，或者读取连续的内存块），或者batch size是数据依赖的，或者程序被设计在individual sample上运行。在这些情况下，不使用automatic batching（使用<code>collate_fn</code>整理samples）可能更好，此时可以让数据加载器直接返回dataset对象的每个成员。</p>
<p>当<code>batch_size</code>和<code>batch_sampler</code>都为None时（默认<code>batch_sampler</code>为None，就禁止了automatic batching。每个从dataset中获取的sampler被作为<code>collate_fn</code>参数传递的函数处理。</p>
<p>当禁止automatic batching，默认的<code>collate_fn</code>简单的转换Numpy arrays为Pytorch Tensors，并且保持everything else untouched。</p>
<p>在这种情况下，从一个map-style数据集中加载数据可以大致等价于：</p>
<pre><code>for index in sampler:
    yield collate_fn(dataset[index])
</code></pre>
<p>从一个iterable-style数据集中加载数据可以大致等价于：</p>
<pre><code>for data in iter(dataset):
    yield collate_fn(data)
</code></pre>
<h4 id="working-with-collate_fn"><a class="markdownIt-Anchor" href="#working-with-collate_fn"></a> Working with <code>collate_fn</code></h4>
<p>当启用或禁用automatic batching时，<code>collate_fn</code>的使用略有不同。</p>
<p>当禁用batching时，<code>collate_fn</code>被单个的data sample调用，输出从data loader iterator中生成。这种情况下，默认的<code>default_fn</code>简单地转换Numpy arrays为Pytorch tensors。</p>
<p>当启用batching时，<code>collate_fn</code>每次被a list of data samples调用，需要将生成的input samples整理为a batch。本节的剩余部分描述默认的<code>collate_fn</code> (<a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.default_collate"><code>default_collate()</code></a>) 的行为。</p>
<p>例如，如果每个sample包含一个3-channel的数据和一个整型的class label，也就是说，dataset的每个元素返回一个tuple (<code>image, class_index</code>)，默认的<code>collate_fn</code>会整理这样的list of tuples到a single tuple of a batched image tensor和a batched class label Tensor。尤其是，默认的<code>collate_fn</code>有如下的属性：</p>
<ul>
<li>
<p>总是将batch dimension作为新的dimension</p>
</li>
<li>
<p>自动地转换NumPy arrays和Python numerical values为PyTorch Tensors</p>
</li>
<li>
<p>保留数据结构，例如如果每个sample为一个dictionary，它输出一个有相同set of keys的dict，但是将batched Tensors作为值（或者lists，如果值不能转换为Tensors）。对list、tuple、namedtuple都是如此。</p>
<p>用户可能使用定制化的<code>collate_fn</code>来实现custom batching，例如，沿着一个维度整理而不是第一个，填充变长的序列，或者对custom data types添加support。</p>
</li>
</ul>
<p>如果你遇到DataLoader的输出的维度或类型和期望的不同，你应该检查你的<code>collate_fn</code>。</p>
<h4 id="single-and-multi-process-data-loading"><a class="markdownIt-Anchor" href="#single-and-multi-process-data-loading"></a> Single- and Multi-process Data Loading</h4>
<p>DataLoader默认使用single-process数据加载。</p>
<p>在一个Python process内部，<a href="https://wiki.python.org/moin/GlobalInterpreterLock">Global Interpreter Lock (GIL)</a> 避免在threads的完全并行的Python代码。为了避免block数据加载时的computation code，Pytorch通过将<code>num_workers</code>设置为正值来进行multi-process的数据处理。</p>
<p><strong>Single-process data loading (default)</strong></p>
<p>在这个模式，data fetching和DataLoader初始化在相同的process中进行。因此，数据加载可能会block computing。但是，这个模式可能在资源在processes (如，shared memory, file descriptors) 之间共享数据被限制时使用会更好，或者整个数据集很小可以完全在内存中整个加载。此外，single-process加载通过在进行error trace时更具有可读性，因此对调试很有用。</p>
<p><strong>Multi-process data loading</strong></p>
<p>设置参数<code>num_workers</code>为正数可以用指定数量的loader worker processes来multi-process地加载数据。</p>
<blockquote>
<p>Warning：在数次迭代之后，loader worker processes将消耗和parent process相同量的CPU memory。略</p>
</blockquote>
<p>在这个模式，每次DataLoader的一个迭代器被创建时（如当你调用enumerate(dataloader)），<code>num_workers</code>数量的worker processes也被创建。此时，<code>dataset</code>、<code>collate_fn</code>和<code>worker_init_fn</code>被传递给每个worker，worker利用这些参数进行初始化并且获取数据。这意味着数据集的访问连同它的内部IO，transforms (包括<code>collate_fn</code>) 在worker process中运行。</p>
<p><a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.get_worker_info" title="torch.utils.data.get_worker_info"><code>torch.utils.data.get_worker_info()</code></a> 返回在一个worker process中的多种有用的信息（包括worker id，dataset副本，初始化seed等），并且在main process中返回None。用户可能在dataset中使用这个函数和<code>worker_init_fn</code>来单独配置每个dataset副本，并且判断代码是否运行在一个worker process中。例如，这可能在sharding the dataset时尤其有用</p>
<blockquote>
<p>sharding: 将数据集存储在不同的服务器上</p>
</blockquote>
<p>对map-style的数据集，main process使用<code>sampler</code>生成indices然后将indices发送给workers。所以任何shuffle随机化在main process中进行，然后再通过indices进行引导数据加载。</p>
<p>对于iterable-style数据集，因为每个worker process得到一个数据集对象的副本，直接进行multi-process加载经常会导致数据重复。使用<code>torch.utils.data.get_worker_info()</code>和<code>worker_init_fn</code>，用户可以独立配置每个副本。</p>
<p>一旦迭代终止或者迭代器被进行垃圾回收，workers就会终止。</p>
<p>PS：通常不建议在multi-process加载中返回CUDA tensors，因为许多微妙的原因，详见<a href="https://pytorch.org/docs/stable/notes/multiprocessing.html#multiprocessing-cuda-note">CUDA in multiprocessing</a>。作为替代，建议使用 <a href="https://pytorch.org/docs/stable/data.html#memory-pinning">automatic memory pinning</a>(也就是设置<code>pin_memory=True</code>)，这可以在CUDA-enabled GPUs上进行很快的数据传输。</p>
<p><strong>Platform-specific behaviors</strong></p>
<p>因为workers依赖于Python <a href="https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing" title="(in Python v3.10)"><code>multiprocessing</code></a>，worker的启动行为在Windows和Unix平台上有所不同。略</p>
<p>PS：建议将主要的script代码放在<code>if __name__=='__main__'</code>中；建议确保<code>collate_fn</code>、<code>worker_init_fn</code>和<code>dataset</code>代码在最外层被定义，也就是<code>__main__</code>的外面。</p>
<p><strong>Randomness in multi-process data loading</strong></p>
<p>默认，每个worker将它的PyTorch seed设置为<code>base_seed</code>+<code>worker_id</code>，<code>base_seed</code>是main process通过它的RNG或者一个指定的<code>generator</code>生成。但是，来自其他libraries的seeds可能在初始化workers时重复，导致每个worker返回相同的随机数字。</p>
<p>在<code>worker_init_fn</code>中，你可以通过<a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.get_worker_info" title="torch.utils.data.get_worker_info"><code>torch.utils.data.get_worker_info().seed</code></a> 和 <a href="https://pytorch.org/docs/stable/generated/torch.initial_seed.html#torch.initial_seed" title="torch.initial_seed"><code>torch.initial_seed()</code></a>访问每个worker的PyTorch seed set，并且使用它来在数据加载之前seed其他的libraries。</p>
<h4 id="memory-pinning"><a class="markdownIt-Anchor" href="#memory-pinning"></a> Memory Pinning</h4>
<p>从主机到GPU的数据的copies会快得多，当它们从 pinned (page-locked) memory 中创建时。详见 <a href="https://pytorch.org/docs/stable/notes/cuda.html#cuda-memory-pinning">Use pinned memory buffers</a> 如何更通用地使用 pinned memory。</p>
<p>对于数据加载来说，传递<code>pin_memory=True</code>给<code>Dataloader</code>将自动的把获取到的数据放在pinned memory，因此会使得对CUDA-enabled GPUs有更快的数据传输。</p>
<p>默认的memory pinning logic 只会识别Tensors和包含Tensors的maps/iterables。默认，如何pinning logic看到一个custom type (如果你有一个<code>collate_fn</code>返回一个custom batch type)，或者你的batch的每个元素为一个custom type，pinning logic不会认出它们，并将返回batch（或元素）而不pin the memory。为了对custom batch或者custom data type进行memory pinning，需要在custom type中定义一个<code>pin_memory()</code>方法。如下所示：</p>
<pre><code>class SimpleCustomBatch:
    def __init__(self, data):
        transposed_data = list(zip(*data))
        self.inp = torch.stack(transposed_data[0], 0)
        self.tgt = torch.stack(transposed_data[1], 0)

    # custom memory pinning method on custom type
    def pin_memory(self):
        self.inp = self.inp.pin_memory()
        self.tgt = self.tgt.pin_memory()
        return self

def collate_wrapper(batch):
    return SimpleCustomBatch(batch)

inps = torch.arange(10 * 5, dtype=torch.float32).view(10, 5)
tgts = torch.arange(10 * 5, dtype=torch.float32).view(10, 5)
dataset = TensorDataset(inps, tgts)

loader = DataLoader(dataset, batch_size=2, collate_fn=collate_wrapper,
                    pin_memory=True)

for batch_ndx, sample in enumerate(loader):
    print(sample.inp.is_pinned())
    print(sample.tgt.is_pinned())
</code></pre>
<p>完整声明形式为：</p>
<pre><code>CLASS torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=None, sampler=None, batch_sampler=None, num_workers=0, collate_fn=None, pin_memory=False, drop_last=False, timeout=0, worker_init_fn=None, multiprocessing_context=None, generator=None, *, prefetch_factor=2, persistent_workers=False, pin_memory_device='')
</code></pre>
<p>DataLoader，联合一个dataset和一个sampler，提供在给定数据集上的一个迭代。</p>
<p>DataLoader支持map-style和iterable-style的数据集的sing-或multi-process加载，定制化的加载顺序和可选的automatci batching (collation) 和memory pinning。</p>
<p>参数：</p>
<ul>
<li>
<p><code>dataset(Dataset)</code>：数据集，从中加载数据</p>
</li>
<li>
<p><code>batch_size(int, optional)</code>：对每个batch有多少个样本被加载（默认为1）</p>
</li>
<li>
<p><code>shuffle(bool, optional)</code>：设置为<code>True</code>时在每个epoch数据都会reshuffle（默认为False）</p>
</li>
<li>
<p><code>sampler(Sampler or Iterable, optional)</code>：定义从dataset中获取samples的策略。可以是任何有<code>__len__</code>实现的Iterable。如果指定sampler，<code>shuffle</code> must not be specified。</p>
</li>
<li>
<p><code>batch_sampler(Sampler or Iterable, optional)</code>：类似sampler，但是一次返回a batch of indices。和<code>batch_size</code>、<code>shuffle</code>、<code>sampler</code>和<code>drop_last</code>相互排斥。？</p>
</li>
<li>
<p><code>num_worker(int, optional)</code>：用于data loading的subprocesses的数量。0表示数据将会在main process中加载（默认为0）</p>
</li>
<li>
<p><code>collate_fn(callable, optional)</code>：合并a list of samples以形成 a mini-batch of Tensor(s)。当从一个map-style数据集中进行batched loading时会用到。</p>
</li>
<li>
<p><code>pin_memory(bool, optional)</code>：如果为<code>True</code>，data loader在返回Tensor之前会复制Tensors到device/CUDA的pinned memory。如果你的数据元素为custom type，或者你的<code>collate_fn</code>返回的batch为custom type，看下面的示例。</p>
</li>
<li>
<p><code>drop_last(bool, optional)</code>：设置为<code>True</code>时会drop最后的不完整的batch，如果dataset size不能被batch size整除的话。如果为<code>False</code>，数据集的尺寸不能被batch size整除，那么最后的batch将会更小（默认为False）</p>
</li>
<li>
<p><code>timeout(numeric, optional)</code>：如果为正，表示从workers收集a batch的timeout值。应该总是非负（默认为0）</p>
</li>
<li>
<p><code>worker_init_fn(callable, optional)</code>：如果不为<code>None</code>，将使用worker id ([0, num_workers-1]范围内的整数) 作为输入在每个worker subprocess中被调用，在seeding之后，data loading之前（默认为None）</p>
</li>
<li>
<p><code>generator(torch.Generator, optional)</code>：如果不为<code>None</code>，RandomSampler将使用RNG生成随机indexes，并且为workers生成<code>base_seed</code>（默认为None）</p>
</li>
<li>
<p><code>prefetch_factor(int, optional, keyword-only arg)</code>：被每个worker提前加载的batches的数量。<code>2</code>表示在所有wrokers上将有总共2*num_workers的batches被提前获得（默认为2）</p>
</li>
<li>
<p><code>persistent_workers(bool, optional)</code>：如果为<code>True</code>，data loader在一个dataset被处理完一次后不会关闭worker processes，这允许保持workers Dataset instances存活（默认为False）</p>
</li>
<li>
<p><code>pin_memory_device(str, optional)</code>：如果pin_memory设置为True，data loader在返回Tensors之前会将他们复制到device pinned memory。</p>
</li>
</ul>
<h4 id="torchutilsdatadataset"><a class="markdownIt-Anchor" href="#torchutilsdatadataset"></a> torch.utils.data.Dataset</h4>
<p>一个表示Dataset的抽象类。</p>
<p>所有表示从keys到data samples的映射的数据集都应该是它的子类。所有的子类应该重写<code>__getitme__()</code>，该方法支持对一个给定的key获取对应的data sample。子类也能选择性地重写<code>__len__()</code>，该方法返回数据集的尺寸，该尺寸与Sampler的实现和DataLoader的默认选项有关。</p>
<p>PS：DataLoader默认构建一个生成integral indices的index sampler。为了使它可以作用于具有non-integral indices/keys的map-style数据集，必须提供一个custom sampler。</p>
<h4 id="torchutilsdatadefault_collatebatch"><a class="markdownIt-Anchor" href="#torchutilsdatadefault_collatebatch"></a> torch.utils.data.default_collate(batch)</h4>
<p>一个函数，将a batch of data作为输入，将batch内的元素放入一个具有outer dimenstion (batch size)的tensor。其输出类型可能是一个<code>torch.Tensor</code>，一个<code>torch.Tensor</code>的Sequence，一个<code>torch.Tensor</code>的Collection，或者不变，其依赖于输入类型。当在DataLoader中定义batch_size或者batch_sampler时该函数可以作为collation的默认函数。下面是通常的input type (基于batch内部的元素类型) 和它映射为的output type：</p>
<p>参数：</p>
<ul>
<li><code>batch</code>：等待整理的single batch</li>
</ul>
<p>调用实例：</p>
<pre><code># Example with a batch of `int`s:
default_collate([0, 1, 2, 3])
# Example with a batch of `str`s:
default_collate(['a', 'b', 'c'])
# Example with `Map` inside the batch:
default_collate([&#123;'A': 0, 'B': 1&#125;, &#123;'A': 100, 'B': 100&#125;])
# Example with `NamedTuple` inside the batch:
Point = namedtuple('Point', ['x', 'y'])
default_collate([Point(0, 0), Point(1, 1)])
# Example with `Tuple` inside the batch:
default_collate([(0, 1), (2, 3)])
# Example with `List` inside the batch:
default_collate([[0, 1], [2, 3]])
</code></pre>
<h4 id="torchutilsdatasamplerdata_source"><a class="markdownIt-Anchor" href="#torchutilsdatasamplerdata_source"></a> torch.utils.data.Sampler(data_source)</h4>
<p>所有Samplers的基类。</p>
<p>每个Sampler子类必须提供<code>__iter__()</code>方法，以此提供在dataset元素的indices上的迭代，和一个<code>__len__()</code>返回迭代器的长度。</p>
<p>PS：<code>__len__()</code>并不是DataLoader严格要求的，但是在有任何涉及到DataLoader的长度计算时最好提供。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/data.html">TORCH.UTILS.DATA</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch 损失</title>
    <url>/2022/07/20/PyTorch-%E6%8D%9F%E5%A4%B1/</url>
    <content><![CDATA[<p>本文记录一下PyTorch中的常用损失。</p>
<span id="more"></span>
<h3 id="torchnncrossentropyloss"><a class="markdownIt-Anchor" href="#torchnncrossentropyloss"></a> torch.nn.CrossEntropyLoss</h3>
<p>用来计算input和target之间交叉熵损失的criterion。其完整调用形式为：</p>
<pre><code>torch.nn.CrossEntropyLoss(weight=None, size_average=None, ignore_index=- 100, reduce=None, reduction='mean', label_smoothing=0.0)
</code></pre>
<p>当计算C类元素的分类问题时很有用。如果提供<code>weights</code>参数，该参数应该是一个1D Tensor，用来为每类元素分配权重，当训练集unbalance时尤其有用。</p>
<p>input应当包含原始的，未归一化的每一类的分数，input应当是一个Tensor，尺寸为unbatched input的尺寸，例如<code>(minibatch, C)</code>或者<code>(minibatch, C, d1, d2, ...., dk)</code>，k表示k维数据。后者对高维input很有用，例如计算2D图像的每个pixel的交叉熵损失。</p>
<p>该criterion期望的target应该包含以下两种中的一种：</p>
<ul>
<li>
<p>范围为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[0, C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>的类索引，C表示类数目；如果指定<code>ignore_index</code>参数，该损失也接受不在前述范围内的类索引。<code>reduction='none'</code>时，unreduced loss可以被描述为：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220704094749082.png" alt="image20220704094749082" /></p>
<p>x，y表示input和target。如果reduction is not ‘none’（默认为’mean’），则有</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220704095008493.png" alt="image20220704095008493" /></p>
</li>
<li>
<p>每一类的概率；当labels超出每个minibatch项要求的单类之外时有用，例如blended labels，label smoothing。unreduced loss（<code>reduction='none'</code>）可以描述为：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220704095317040.png" alt="image20220704095317040" /></p>
<p>如果reduction is not ‘none’（默认为’mean’），则有：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220704095420471.png" alt="image20220704095420471" /></p>
</li>
</ul>
<p>PS：该criterion的性能在target包含类索引时通常更好，因为此时可以进行优化计算。只在对minibatch想来说单类label太受限的情况下，才考虑将target作为类的概率。</p>
<p>参数：</p>
<ul>
<li><code>weights</code>：Tensor类型，可选择。作用于每个类的manual rescaling weight。如果给出，应该是一个具有尺寸C的Tensor</li>
<li><code>size_average</code>：bool类型，可选择。不建议使用（deprecated），见reduction。</li>
<li><code>ignore_index</code>：int类型，可选。指定一个被忽略的target value，该值不对input gradident起作用。当<code>size_average=True</code>，损失在non-ignored targets上取平均。注意只有当target包含类索引时<code>ignore_index</code>才有用。</li>
<li><code>reduce</code>：bool类型，可选。deprecated，见reduction。</li>
<li><code>reduction</code>：string类型，可选。指定应用到output上的reduction：<code>none</code>|<code>mean</code>|<code>sum</code>。</li>
<li><code>label_smoothing</code>：floate类型，可选。范围为[0.0, 1.0]的float值，指定计算损失时的平滑程度，0.0表示不进行平滑，默认为0.0。通过平滑targets变成了一个原始真值和高斯分布的混合物，见 <a href="https://arxiv.org/abs/1512.00567">Rethinking the Inception Architecture for Computer Vision</a></li>
</ul>
<p>Shape：C表示类数目，N表示batchsize</p>
<ul>
<li>Input：©，(N,C)，或者(N, C, d1, d2, …, dk)</li>
<li>Target：如果包含类索引，形状为()，(N)或者(N, d1, d2, …, dk)，每个值的范围为[0, C)。如果包含类概率，形状和Input相同，每个值的范围为[0, 1]</li>
<li>Output：如果reduction=‘none’，形状和target相同，否则为标量。</li>
</ul>
<p>调用实例：</p>
<pre><code># Example of target with class indices
loss = nn.CrossEntropyLoss()
input = torch.randn(3, 5, requires_grad=True)
target = torch.empty(3, dtype=torch.long).random_(5)
output = loss(input, target)
output.backward()
# Example of target with class probabilities
input = torch.randn(3, 5, requires_grad=True)
target = torch.randn(3, 5).softmax(dim=1)
output = loss(input, target)
output.backward()
</code></pre>
<p><code>torch.nn.CrossEntropyLoss()</code>有如下的继承关系：</p>
<pre><code>class CrossEntropyLoss(_WeightedLoss):
class _WeightedLoss(_Loss):
class _Loss(Module)
</code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html">CROSSENTROPYLOSS</a></li>
<li><a href="https://pytorch-cn.readthedocs.io/zh/latest/package_references/torch-nn/#loss-functions">Loss Functions</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch 优化器</title>
    <url>/2022/07/20/PyTorch-%E4%BC%98%E5%8C%96%E5%99%A8/</url>
    <content><![CDATA[<p>本文记录一下PyTorch中的常用优化器。</p>
<span id="more"></span>
<h3 id="trochoptimsgd"><a class="markdownIt-Anchor" href="#trochoptimsgd"></a> troch.optim.SGD</h3>
<p>其完整调用形式为：</p>
<pre><code>torch.optim.SGD(params, lr=&lt;required parameter&gt;, momentum=0, dampening=0, weight_decay=0, nesterov=False, *, maximize=False, foreach=None)
</code></pre>
<p><code>torch.optim.SGD</code>有如下的继承关系：</p>
<pre><code>class SGD(Optimizer):
class Optimizer(object):
class object:
</code></pre>
<p>该类是对随即梯队下降法的实现（momentum可选）。以下是对随机梯度下降法的简单说明：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220704161015625.png" alt="image20220704161015625" /></p>
<p>Nesterov momentum是基于来自<a href="http://www.cs.toronto.edu/~hinton/absps/momentum.pdf">On the importance of initialization and momentum in deep learning</a>的公式。</p>
<p>参数：</p>
<ul>
<li><code>params(iterable)</code>：用来优化参数的迭代器，或者定义参数组的dicts</li>
<li><code>lr(float)</code>：学习率</li>
<li><code>momentum(float, optional)</code>：momentum因子，默认为0</li>
<li><code>weight_decay(float, optional)</code>：权重衰减（L2惩罚），默认为0</li>
<li><code>dampening(float, optional)</code>：用来抑制momentum，默认为0</li>
<li><code>nesterov(bool, optional)</code>：启用Nesterov momentum，默认为False</li>
<li><code>maximize(bool, optional)</code>：最大化基于the objective的参数，而不是最小化，默认为False</li>
<li><code>foreach(bool, optional)</code>：whether foreach implementation of optimizer is used，默认为None</li>
</ul>
<p>调用实例：</p>
<pre><code>&gt;&gt;&gt; optimizer = torch.optim.SGD(model.parameters(), lr=0.1, momentum=0.9)
&gt;&gt;&gt; optimizer.zero_grad()
&gt;&gt;&gt; loss_fn(model(input), target).backward()
&gt;&gt;&gt; optimizer.step()
</code></pre>
<p>可以通过以下方式将从模型net中获得的参数传入优化器：</p>
<pre><code>base, head = [], []
    for name, param in net.named_parameters():
        if 'bkbone' in name:
            base.append(param)
        else:
            head.append(param)
    optimizer = torch.optim.SGD([&#123;'params':base&#125;, &#123;'params':head&#125;], lr=cfg.lr, momentum=cfg.momen, weight_decay=cfg.decay, nesterov=True)
</code></pre>
<p>并可通过下述代码访问优化器中的对象和值：</p>
<pre><code>&gt;&gt;&gt; for key in optimizer.param_groups[1]:
...     print(key)
... 
params
lr
momentum
dampening
weight_decay
nesterov
&gt;&gt;&gt; type(optimizer.param_groups[1]['params'])
&lt;class 'list'&gt;
&gt;&gt;&gt; len(optimizer.param_groups[0]['params'])
159
&gt;&gt;&gt; optimizer.param_groups[1]['lr']
0.001
&gt;&gt;&gt; type(optimizer.param_groups[0]['params'][0])
&lt;class 'torch.nn.parameter.Parameter'&gt;
</code></pre>
<p>PS：上述结果中的154正好与前面<code>base</code>数组中元素个数相等。</p>
<p>此外，可以通过以下代码直接给优化器添加新的属性（所有的类都可以通过该方式添加属性，也可以通过<code>setattr</code>设置属性）：</p>
<pre><code>optimizer.momentum = momentum # 此前optimizer没有momentum属性
optimzer.a = 1 # 此前optimizer没有a属性
</code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.optim.SGD.html">SGD</a></li>
<li><a href="https://medium.com/@nschairer/python-dynamic-class-attributes-24a89df8da7d">Python - Dynamic Class Attributes</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch数据采样</title>
    <url>/2022/07/20/PyTorch%E6%95%B0%E6%8D%AE%E9%87%87%E6%A0%B7/</url>
    <content><![CDATA[<p>本文记录一下PyTorch中的数据采样操作。</p>
<span id="more"></span>
<h3 id="torchnnfunctionalinterpolate"><a class="markdownIt-Anchor" href="#torchnnfunctionalinterpolate"></a> torch.nn.functional.interpolate</h3>
<p>其完整声明形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.nn.functional.interpolate(<span class="built_in">input</span>, size=<span class="literal">None</span>, scale_factor=<span class="literal">None</span>, mode=<span class="string">&#x27;nearest&#x27;</span>, align_corners=<span class="literal">None</span>, recompute_scale_factor=<span class="literal">None</span>, antialias=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<p>下/上采样输入到给定的尺寸或者缩放因子。</p>
<p>用于插值的算法由<code>mode</code>参数定义。</p>
<p>目前temporal、spatial和volumetric的采样是支持的，例如，期望的输入在shape上是3-D，4-D或者5-D。</p>
<p>输入维度以该方式呈现：mni-batch x channels x [optional depth] x [optional height] x width</p>
<p>可以用来resize的mode有：nearest, linear(3D-only), bilinear, bicubic(4D-only), trilinear(5D-only), area, nearest-exact。</p>
<p>参数：</p>
<ul>
<li><code>input(Tensor)</code>：输入tensor</li>
<li><code>size(int or Tuple[int] or Tuple[int, int] or Tuple[int, int, int])</code>：输入空间尺寸</li>
<li><code>scale_factor (float or Tuple[float])</code>：对空间尺寸的缩放操作，如果<code>scale_factor</code>为一个元组，其长度必须与<code>input.dim()</code>匹配</li>
<li><code>mode(str)</code>：用来上采样的算法：<code>'nearest'</code> | <code>'linear'</code> | <code>'bilinear'</code> | <code>'bicubic'</code> | <code>'trilinear'</code> | <code>'area'</code> | <code>'nearest-exact'</code>，默认为<code>'nearest'</code>。</li>
<li><code>align_corners(bool, optional)</code>：略</li>
<li><code>recompute_scale_factor(bool, optional)</code>：重新计算<code>scale_factor</code>以在插值计算中使用。</li>
<li><code>antialias(bool, optional)</code>：略</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.interpolate.html#torch.nn.functional.interpolate">TORCH.NN.FUNCTIONAL.INTERPOLATE</a></li>
</ol>
</blockquote>
<h3 id="torchnnupsample"><a class="markdownIt-Anchor" href="#torchnnupsample"></a> torch.nn.Upsample</h3>
<p>对一个给定的多通道 1D (temporal), 2D (spatial) 或 3D (volumetric) 数据进行上采样。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Upsample.html">UPSAMPLE</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch调试DataLoader实践</title>
    <url>/2022/09/30/PyTorch%E8%B0%83%E8%AF%95DataLoader%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>本文记录一下如何调试模型的数据加载类。</p>
<span id="more"></span>
<p>下述代码为模型构建数据加载器对象的一般方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_loader</span>(<span class="params">image_root, gt_root, edge_root, batchsize, trainsize, shuffle=<span class="literal">True</span>, num_workers=<span class="number">4</span>, pin_memory=<span class="literal">True</span></span>):</span><br><span class="line">    dataset = CamObjDataset(image_root, gt_root, edge_root, trainsize)</span><br><span class="line">    data_loader = data.DataLoader(dataset=dataset,</span><br><span class="line">                                  batch_size=batchsize,</span><br><span class="line">                                  shuffle=shuffle,</span><br><span class="line">                                  num_workers=num_workers,</span><br><span class="line">                                  pin_memory=pin_memory)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data_loader</span><br></pre></td></tr></table></figure>
<p>其中，<code>CamObjDataset</code>为定制化的数据集类，其继承<code>torch.utils.data.Dataset</code>，需要</p>
<ul>
<li>进行<code>__init__</code>，对数据集的一些属性进行初始化，其中最重要的是提供数据变换<code>transforms.Compose</code>。</li>
<li>覆写<code>__getitem__</code>，使得可以通过索引如<code>dataset[0]</code>访问数据集数据。一般会调用初始化后的<code>self.transform</code>对数据进行变换后再返回。</li>
<li>覆写<code>__len__</code>，可通过<code>len(dataset)</code>返回数据集长度。</li>
</ul>
<p>有时，我们会有访问加载的数据集中的单个数据以查看其形状、数据类型以及所含数据范围（如0~255还是0~1）的需求，此时就需要有简易的方法构建数据加载器对象并访问。其方法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train_path = <span class="string">&#x27;/storage/FT/data/TrainDataset&#x27;</span></span><br><span class="line">batchsize = <span class="number">16</span></span><br><span class="line">trainsize = <span class="number">416</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">image_root = <span class="string">&#x27;&#123;&#125;/Imgs/&#x27;</span>.<span class="built_in">format</span>(train_path)</span><br><span class="line">gt_root = <span class="string">&#x27;&#123;&#125;/GT/&#x27;</span>.<span class="built_in">format</span>(train_path)</span><br><span class="line">edge_root = <span class="string">&#x27;&#123;&#125;/Edge/&#x27;</span>.<span class="built_in">format</span>(train_path)</span><br><span class="line"></span><br><span class="line">train_loader = get_loader(image_root, gt_root, edge_root, batchsize=batchsize, trainsize=trainsize)</span><br></pre></td></tr></table></figure>
<p>通过上述代码，我们已经实例化了数据加载器对象<code>train_loader</code>，此时可以通过在Python解释器窗口中进行如下调试访问数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt; loader = <span class="built_in">iter</span>(train_loader) <span class="comment"># 将train_loader转换为迭代器</span></span><br><span class="line">&gt; image, gt, edge = <span class="built_in">next</span>(loader) <span class="comment"># 取迭代器loader的下一个元素，此处为第一个</span></span><br><span class="line">&gt; image.shape</span><br><span class="line">torch.Size([<span class="number">16</span>, <span class="number">3</span>, <span class="number">416</span>, <span class="number">416</span>])</span><br></pre></td></tr></table></figure>
<p>还可以通过以下定制化方法对image进行统计：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进行图像数据属性统计，输入为二维张量，其尺寸为torch.Size([h, w])</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">image_stat</span>(<span class="params">image</span>):</span><br><span class="line">    <span class="built_in">min</span> = <span class="number">256</span></span><br><span class="line">    <span class="built_in">max</span> = -<span class="number">1</span></span><br><span class="line">    delta = <span class="number">0.00001</span> <span class="comment"># 接近于零的值</span></span><br><span class="line">    count = <span class="number">0</span> <span class="comment"># 大于delta的像素数量</span></span><br><span class="line">    h, w = image.shape</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">            <span class="keyword">if</span> image[i][j]&lt;<span class="built_in">min</span>:</span><br><span class="line">                <span class="built_in">min</span> = image[i][j]</span><br><span class="line">            <span class="keyword">if</span> image[i][j]&gt;<span class="built_in">max</span>:</span><br><span class="line">                <span class="built_in">max</span> = image[i][j]</span><br><span class="line">            <span class="keyword">if</span> image[i][j]&gt;delta:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">    count_ratio = count / (h*w) <span class="comment"># 大于零的像素数量所占比例</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;min: &quot;</span>, <span class="built_in">min</span>, <span class="string">&quot; max: &quot;</span>, <span class="built_in">max</span>, <span class="string">&quot; count: &quot;</span>, count, <span class="string">&quot; count_ratio: &quot;</span>, count_ratio)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>, <span class="built_in">max</span>, count, count_ratio</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch可视化实践</title>
    <url>/2022/08/07/PyTorch%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>本文记录一下如何使用TensorBoard工具对深度学习模型及其数据进行可视化：</p>
<span id="more"></span>
<p>此处以调用<code>add_graph()</code>展示模型的computation graph为例，说明如何使用TensorBoard对模型计算图进行可视化，并在本地浏览器可以查看远程服务器的tensorboard可视化情况。</p>
<p>其主要步骤如下：</p>
<ol>
<li>
<p>在<code>trian.py</code>文件中导入tensorboard的<code>SummaryWriter</code>类并创建对象：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;add_graph&quot;</span>) <span class="comment"># 默认为runs文件夹，此处指定为add_graph文件夹</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在<code>epoch=0</code>且<code>idx=0</code>处调用<code>add_graph</code>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> epoch == <span class="number">0</span> <span class="keyword">and</span> i == <span class="number">0</span>:</span><br><span class="line">	<span class="comment"># add_graph</span></span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;epoch=&quot;</span>, epoch, <span class="string">&quot;, i=&quot;</span>, i)</span><br><span class="line">	writer.add_graph(model, input_to_model=images, verbose=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>运行<code>python train.py</code>，在训练成功开始后会发现add_graph文件夹中会出现如下所示类型的文件：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220808170232112.png" alt="image-20220808170232112" /></p>
</li>
<li>
<p>远程登录服务器并指定与后续tensorboard使用端口对应的本地端口，以便后续在本地浏览器对应端口显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -L 16008:127.0.0.1:6008  user@server</span><br></pre></td></tr></table></figure>
<p>上述命令表示后续在服务器的6008端口打开tensorboard可视化文件时，可以在本地浏览器的16008端口查看可视化结果。</p>
</li>
<li>
<p>在服务器上运行<code>tensorboard --logdir=add_graph --port=6008</code>，此时已经在服务器的6008端口打开tensorboard的可视化文件，并将其同步到本地的16008端口（报错不影响结果展示）：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220808170714479.png" alt="image-20220808170714479" /></p>
</li>
<li>
<p>此时，在本地浏览器打开 <a href="http://localhost:16008">http://localhost:16008</a> 即可看到如下结果：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220808170919983.png" alt="image-20220808170919983" /><br />
PS：当出现<code>you haven't written any data to your event files.</code>的情形时，不要急着调试错误。将<code>runs/add_graph</code>等events文件所在的文件夹换个位置，重新使用tensorboard加载。</p>
</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://neptune.ai/blog/the-best-tools-for-machine-learning-model-visualization">The Best Tools for Machine Learning Model Visualization</a></li>
<li><a href="https://liarsliarsliars.com/visualize-pytorch-model-graph-with-tensorboard/">Visualize PyTorch Model Graph with TensorBoard</a></li>
<li><a href="https://pytorch.org/tutorials/intermediate/tensorboard_tutorial.html">VISUALIZING MODELS, DATA, AND TRAINING WITH TENSORBOARD</a></li>
<li><a href="https://github.com/christianversloot/machine-learning-articles/blob/main/how-to-use-tensorboard-with-pytorch.md">how-to-use-tensorboard-with-pytorch</a></li>
<li><a href="https://neptune.ai/blog/tensorboard-tutorial">Deep Dive Into TensorBoard: Tutorial With Examples</a></li>
<li><a href="https://blog.csdn.net/u010626937/article/details/107747070">本地浏览器使用tensorboard查看远程服务器训练情况</a></li>
<li><a href="https://stackoverflow.com/questions/37987839/how-can-i-run-tensorboard-on-a-remote-server">How can I run Tensorboard on a remote server?</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch调试模块实践</title>
    <url>/2022/09/15/PyTorch%E8%B0%83%E8%AF%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>本文记录一下如何在PyTorch中调试单个模块在处理张量过程中张量的尺寸变化。</p>
<span id="more"></span>
<p>以一个边缘生成模块为例，以下为该边缘生成模块的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ConvBNR</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, inplanes, planes, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, dilation=<span class="number">1</span>, bias=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(ConvBNR, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.block = nn.Sequential(</span><br><span class="line">            nn.Conv2d(inplanes, planes, kernel_size, stride=stride,</span><br><span class="line">            padding=dilation, dilation=dilation, bias=bias),</span><br><span class="line">            nn.BatchNorm2d(planes),</span><br><span class="line">            nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.block(x)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Conv1x1</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, inplanes, planes</span>):</span><br><span class="line">        <span class="built_in">super</span>(Conv1x1, self).__init__()</span><br><span class="line">        self.conv = nn.Conv2d(inplanes, planes, <span class="number">1</span>)</span><br><span class="line">        self.bn = nn.BatchNorm2d(planes)</span><br><span class="line">        self.relu = nn.ReLU(inplace=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv(x)</span><br><span class="line">        x = self.bn(x)</span><br><span class="line">        x = self.relu(x)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EAM</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(EAM, self).__init__()</span><br><span class="line">        self.reduce1 = Conv1x1(<span class="number">256</span>, <span class="number">64</span>)</span><br><span class="line">        self.reduce4 = Conv1x1(<span class="number">2048</span>, <span class="number">256</span>)</span><br><span class="line">        self.block = nn.Sequential(</span><br><span class="line">            ConvBNR(<span class="number">256</span> + <span class="number">64</span>, <span class="number">256</span>, <span class="number">3</span>),</span><br><span class="line">            ConvBNR(<span class="number">256</span>, <span class="number">256</span>, <span class="number">3</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x4, x1</span>):</span><br><span class="line">        <span class="comment"># x1 256 * 104 * 104</span></span><br><span class="line">        <span class="comment"># x4 2048 * 13 * 13</span></span><br><span class="line">        size = x1.size()[<span class="number">2</span>:]</span><br><span class="line">        x1 = self.reduce1(x1)</span><br><span class="line">        x4 = self.reduce4(x4)</span><br><span class="line">        x4 = F.interpolate(x4, size, mode=<span class="string">&#x27;bilinear&#x27;</span>, </span><br><span class="line">        align_corners=<span class="literal">False</span>)</span><br><span class="line">        out = torch.cat((x4, x1), dim=<span class="number">1</span>)</span><br><span class="line">        out = self.block(out)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> out</span><br></pre></td></tr></table></figure>
<p>可以通过以下测试模块来测试该模块：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">test_EAM</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(test_EAM, self).__init__()</span><br><span class="line">        self.eam = EAM()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x4, x1</span>):</span><br><span class="line">        edge = self.eam(x4, x1)</span><br><span class="line">        edge_att = torch.sigmoid(edge)</span><br><span class="line"></span><br><span class="line">        oe = F.interpolate(edge_att, scale_factor=<span class="number">4</span>, mode=<span class="string">&#x27;bilinear&#x27;</span>, align_corners=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> edge, edge_att, oe</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    model = test_EAM()</span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    x1 = torch.rand((<span class="number">4</span>, <span class="number">256</span>, <span class="number">80</span>, <span class="number">80</span>))</span><br><span class="line">    <span class="comment"># x1 = torch.rand((4, 256, 104, 104))</span></span><br><span class="line">    x4 = torch.rand((<span class="number">4</span>, <span class="number">2048</span>, <span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">    <span class="comment"># x4 = torch.rand((4, 2048, 13, 13))</span></span><br><span class="line">    edge, edge_att, oe = model(x4, x1)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Python文章整理</title>
    <url>/2022/09/18/Python%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文汇总一下网上收集的较好的一些讲解Python相关知识点和特性的文章：</p>
<span id="more"></span>
<ol>
<li><a href="https://sadh.life/post/builtins/">Understanding all of Python, through its builtins</a>：Python有许多大多数不熟知的内置函数。本文通过Python的一些鲜为人知的内置函数介绍Python提供的功能和特性。(未读)</li>
<li><a href="https://realpython.com/python-traceback/">Understanding the Python Traceback – Real Python</a>：本文对Python中的报错信息traceback进行介绍。（未读完）</li>
<li><a href="https://trebaud.github.io/posts/typing-python/">Typing Python with typing :: Yet Another Random Memoir</a>：Python3.6开始支持类型声明，本文想初学者简单介绍如何使用Python类型</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch Distributed Data Parallel</title>
    <url>/2022/09/12/Pytorch-Distributed-Data-Parallel/</url>
    <content><![CDATA[<p>本文记录一下Pytorch中的核心操作之一——Distributed Data Parallel (分布式数据并行)</p>
<span id="more"></span>
<p>训练时：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&quot;CUDA_VISIBLE_DEVICES&quot;</span>] = <span class="string">&quot;3, 5&quot;</span></span><br><span class="line">multi_gpu = <span class="literal">True</span></span><br><span class="line">model = Model(args)</span><br><span class="line"><span class="keyword">if</span> multi_gpu:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;training on multi_gpu: &quot;</span>)</span><br><span class="line">	torch.cuda.empty_cache()</span><br><span class="line">	model = nn.DataParallel(model)</span><br><span class="line">model.train(<span class="literal">True</span>)</span><br><span class="line">model.cuda()</span><br></pre></td></tr></table></figure>
<p>测试时：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model = Model(args)</span><br><span class="line"><span class="keyword">if</span> multi_gpu:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;testing on multi_gpu...&quot;</span>)</span><br><span class="line">	model = nn.DataParallel(model)</span><br><span class="line">model.load_state_dict(torch.load(path))</span><br><span class="line">model.train(<span class="literal">False</span>)</span><br><span class="line">model.cuda()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/Karel911/TRACER/blob/main/trainer.py">TRACER/trainer.py at main · Karel911/TRACER · GitHub</a></li>
<li><a href="https://pytorch.org/tutorials/beginner/blitz/data_parallel_tutorial.html">Optional: Data Parallelism — PyTorch Tutorials 2.0.0+cu117 documentation</a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.DataParallel.html">DataParallel — PyTorch 2.0 documentation</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch中知识点01</title>
    <url>/2022/05/16/Pytorch%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下在调试 <a href="https://github.com/yuhuan-wu/MobileSal">MobileSal</a> 过程中的一些 Pytorch 框架和 python 相关知识点。</p>
<span id="more"></span>
<p>1.当出现<code>import cv2</code>，需要安装 <code>opencv</code>包：<code>pip install opencv-python</code>。</p>
</br>
<p>2.<code>import torch.utils.data</code> 。该 package 的核心类为 <code>torch.utils.data.DataLoader</code>，表示在一个数据集上的迭代，其支持：</p>
<ul>
<li>map-style 和 iterable-style 的数据集</li>
<li>定制化数据加载顺序</li>
<li>自动 batching</li>
<li>单线程和多线程的数据加载</li>
<li>自动内存 pinning (固定)</li>
</ul>
<p>其通过以下的 <code>DataLoader</code> 对象的构造器配置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DataLoader(dataset, batch_size=<span class="number">1</span>, shuffle=<span class="literal">False</span>, sampler=<span class="literal">None</span>,</span><br><span class="line">           batch_sampler=<span class="literal">None</span>, num_workers=<span class="number">0</span>, collate_fn=<span class="literal">None</span>,</span><br><span class="line">           pin_memory=<span class="literal">False</span>, drop_last=<span class="literal">False</span>, timeout=<span class="number">0</span>,</span><br><span class="line">           worker_init_fn=<span class="literal">None</span>, *, prefetch_factor=<span class="number">2</span>,</span><br><span class="line">           persistent_workers=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
</br>
<ol start="3">
<li></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, key</span>):</span><br><span class="line">    <span class="keyword">return</span> self.<span class="built_in">list</span>[key]</span><br></pre></td></tr></table></figure>
<p>当在对象中实现以上方法时，使得可以通过索引访问对象中的元素，如 <code>list[key]</code></p>
</br>
<p>4.<code>img = cv.imread(filename[, flags])</code>根据一个文件名中加载图像然后返回它。如果图像文件不能读取，返回一个空矩阵。可以通过 <code>img.shape[0]</code> 和 <code>img.shape[1]</code>访问图像的高和宽。</p>
</br>
<p>5.<code>import torch.nn.functional as F</code>。该代码导入 <code>torch.nn.functional</code>，其包含许多对神经网络层进行操作的函数</p>
</br>
<p>6.<code>utils</code>在编程语言中通常为 Utility Class 的缩写，也被称为 Helper class，是一个只包含静态方法的类，无状态且不能被实例化。</p>
</br>
<p>7.<code>img = cv2.resize(img, (self.weight, self.height))</code>调用 OpenCV 中的<code>resize()</code>方法将源文件 <code>img</code> 尺寸转换为所需尺寸 <code>(self.weight, self.height)</code>。其详细声明如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.resize(src, dsize[, dst[, fx[, fy[, interpolation]]]])</span><br></pre></td></tr></table></figure>
<p><code>image interpolation</code>  发生在对图像进行 resize 时，上述的<code>interpolation</code>用于指定不同的插值策略，从而在进行 resize 时按指定策略用已知像素点的值评估未知点的值。</p>
</br>
<ol start="8">
<li></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/env python</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,a</span>):</span><br><span class="line">        self.a = a</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self,b</span>):</span><br><span class="line">        c = self.a+b</span><br><span class="line">        <span class="built_in">print</span> c</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">display</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span> self.a</span><br><span class="line"></span><br><span class="line">test = Test(<span class="string">&quot;This is test!&quot;</span>)</span><br><span class="line">test.display()</span><br><span class="line">Test(<span class="string">&quot;##Append something&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><code>__call__</code> 用于将一个类重载，使得类也能像函数一样调用。</p>
</br>
<p>9.<code>isinstance()</code>函数用于判断一个对象是否是一个已知类型，类似 <code>type()</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span> (a,<span class="built_in">int</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span> (a,<span class="built_in">str</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span> (a,(<span class="built_in">str</span>,<span class="built_in">int</span>,<span class="built_in">list</span>))    <span class="comment"># 是元组中的一个返回 True</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p><code>type()</code> 和 <code>isinstance()</code>的区别：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">isinstance</span>(A(), A)    <span class="comment"># returns True</span></span><br><span class="line"><span class="built_in">type</span>(A()) == A        <span class="comment"># returns True</span></span><br><span class="line"><span class="built_in">isinstance</span>(B(), A)    <span class="comment"># returns True</span></span><br><span class="line"><span class="built_in">type</span>(B()) == A        <span class="comment"># returns False</span></span><br></pre></td></tr></table></figure>
</br>
<p>10.<code>img = cv2.flip(img, 0)</code> 表示将图像做水平翻转；<code>img = cv2.flip(img, 1)</code>表示将图像做垂直翻转。<code>img = cv2.flip(img, -1)</code> 表示将图像同时做水平和垂直翻转。</p>
</br>
<p>11.<code>random.randint()</code>方法返回随机生成的一个实数，范围为 [0,1)；<code>random.randint(a,b)</code>方法返回随机生成的一个整数，其值&gt;=a，&lt;=b。</p>
</br>
<ol start="12">
<li></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">label_tensor =  torch.LongTensor(np.array(label, dtype=np.<span class="built_in">int</span>)).unsqueeze(dim=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>Torch 定义了10种 tensor 类型，其中 <code>torch.LongTensor</code> 为64-bit integer (signed) 对应CPU的类型，在GPU中对应的类型为 <code>torch.cuda.LongTensor</code>。<code>torch.Tensor</code>是默认的张量类型 <code>torch.FloatTensor</code>。</p>
</br>
<p>13.<code>torch.unsqueeze(input, dim)</code>返回一个新张量，一个维度被插入指定的位置。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.unsqueeze(x, <span class="number">0</span>)</span><br><span class="line">tensor([[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.unsqueeze(x, <span class="number">1</span>)</span><br><span class="line">tensor([[ <span class="number">1</span>],</span><br><span class="line">        [ <span class="number">2</span>],</span><br><span class="line">        [ <span class="number">3</span>],</span><br><span class="line">        [ <span class="number">4</span>]])</span><br></pre></td></tr></table></figure>
</br>
<p>14.<code>torch.tensor</code> vs <code>torch.Tensor</code>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.Tensor([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]).dtype</span><br><span class="line">torch.float32</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]).dtype</span><br><span class="line">Out[<span class="number">32</span>]: torch.int64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.Tensor([<span class="literal">True</span>, <span class="literal">False</span>]).dtype</span><br><span class="line">torch.float32</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.tensor([<span class="literal">True</span>, <span class="literal">False</span>]).dtype</span><br><span class="line">torch.uint8</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.Tensor(<span class="number">10</span>)</span><br><span class="line">tensor([<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.tensor(<span class="number">10</span>)</span><br><span class="line">tensor(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
</br>
<p>15.补充关于 <code>torch.tensor</code> 的说明，以下为对其调用的语法，其返回一个张量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.tensor(data, *, dtype=<span class="literal">None</span>, device=<span class="literal">None</span>, requires_grad=<span class="literal">False</span>, pin_memory=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<p>以下为其使用的例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.tensor([[<span class="number">0.1</span>, <span class="number">1.2</span>], [<span class="number">2.2</span>, <span class="number">3.1</span>], [<span class="number">4.9</span>, <span class="number">5.2</span>]])</span><br><span class="line"></span><br><span class="line">torch.tensor([<span class="number">0</span>, <span class="number">1</span>])  <span class="comment"># Type inference on data</span></span><br><span class="line"></span><br><span class="line">torch.tensor([[<span class="number">0.11111</span>, <span class="number">0.222222</span>, <span class="number">0.3333333</span>]],</span><br><span class="line">             dtype=torch.float64,</span><br><span class="line">             device=torch.device(<span class="string">&#x27;cuda:0&#x27;</span>))  <span class="comment"># creates a double tensor on a CUDA device</span></span><br><span class="line"></span><br><span class="line">torch.tensor(<span class="number">3.14159</span>)  <span class="comment"># Create a zero-dimensional (scalar) tensor</span></span><br><span class="line"></span><br><span class="line">torch.tensor([])  <span class="comment"># Create an empty tensor (of size (0,))</span></span><br></pre></td></tr></table></figure>
<p>PS：当操作tensors推荐使用 <code>torch.Tensor.clone()</code>和<code>torch.Tensor.detach()</code>以及<code>torch.Tensor.requires_grad_()</code>。当t为一个tensor时，下述操作等价：</p>
<ul>
<li><code>t.clone().detach()</code> 和 <code>torch.tensor(t)</code></li>
<li><code>t.clone().detach().requires_grad_(True)</code>和<code>torch.tensor(t, requires_grad=True)</code></li>
</ul>
</br>
<p>16.<code>torch.rand</code>返回一个张量，用符合N(0,1)正态分布的随机数字填充，张量形状由<code>size</code>决定：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.rand(size, *, out=<span class="literal">None</span>, dtype=<span class="literal">None</span>, layout=torch.strided, device=<span class="literal">None</span>, requires_grad=<span class="literal">False</span>) → Tensor</span><br></pre></td></tr></table></figure>
</br>
<p>17.<code>torch.from_numpy(ndarray)</code>从<code>numpy.ndarray</code>创建一个张量。如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = numpy.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = torch.from_numpy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">tensor([ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">0</span>] = -<span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([-<span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>])</span><br></pre></td></tr></table></figure>
</br>
<ol start="18">
<li></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>, <span class="string">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>上述命令将当前目录添加到python运行时的查找路径的最开始，使得当python运行时首先在当前目录文件中查找函数或类。</p>
</br>
<p>19.Pytorch Hub 是一个预训练模型仓库，用来设计便于研究重现。Pytorch Hub支持发布预训练模型（模型定义和预训练权重）到一个github仓库，只需通过添加一个 <code>hubconf.py</code>文件。预训练权重可以被存储在github仓库，也可以通过 <code>torch.hub.load_state_dict_from_url()</code>加载。</p>
</br>
<ol start="20">
<li></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">InvertedResidual</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, inp, oup, stride, expand_ratio, dilation=<span class="number">1</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(InvertedResidual, self).__init__()</span><br></pre></td></tr></table></figure>
<p>其中 <code>super(InvertedResidual, self).__init__()</code> 等价于 <code>super().__init__()</code>。</p>
</br>
<p>21.<code>self.modules()</code>返回定义在模型类中对多层模块的迭代器：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># weight initialization</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> self.modules():</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(m, nn.Conv2d):</span><br><span class="line">                nn.init.kaiming_normal_(m.weight, mode=<span class="string">&#x27;fan_out&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> m.bias <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    nn.init.zeros_(m.bias)</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(m, nn.BatchNorm2d):</span><br><span class="line">                nn.init.ones_(m.weight)</span><br><span class="line">                nn.init.zeros_(m.bias)</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(m, nn.Linear):</span><br><span class="line">                nn.init.normal_(m.weight, <span class="number">0</span>, <span class="number">0.01</span>)</span><br><span class="line">                nn.init.zeros_(m.bias)</span><br></pre></td></tr></table></figure>
<p>上述代码对模型权重进行初始化。</p>
</br>
<p>22.<code>enumerate()</code>用于将一个可遍历的数据对象（如对象、元组或字符串）组合为一个索引序列，同时列出数据和数据下标，一般用在for循环中：<code>enumerate(sequence, [start=0])</code>，其返回一个enumerate(枚举)对象：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>seasons = [<span class="string">&#x27;Spring&#x27;</span>, <span class="string">&#x27;Summer&#x27;</span>, <span class="string">&#x27;Fall&#x27;</span>, <span class="string">&#x27;Winter&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">enumerate</span>(seasons))</span><br><span class="line">[(<span class="number">0</span>, <span class="string">&#x27;Spring&#x27;</span>), (<span class="number">1</span>, <span class="string">&#x27;Summer&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;Fall&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;Winter&#x27;</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">enumerate</span>(seasons, start=<span class="number">1</span>))       <span class="comment"># 下标从 1 开始</span></span><br><span class="line">[(<span class="number">1</span>, <span class="string">&#x27;Spring&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;Summer&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;Fall&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;Winter&#x27;</span>)]</span><br></pre></td></tr></table></figure>
</br>
<p>23.<code>*args</code>用于传入多个无名参数，这些参数以tuple的形式导入，一般放在参数列表的最后。若不放在最后，需要指明其他传入参数名称：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_func</span>(<span class="params">x, y, *args</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(x))</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    <span class="built_in">print</span>(y)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(args))</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line"></span><br><span class="line">print_func(<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;呵呵哒&#x27;</span>, [], x=<span class="string">&#x27;x&#x27;</span>, y=<span class="string">&#x27;y&#x27;</span>)</span><br></pre></td></tr></table></figure>
</br>
<p>24.<code>**kwargs</code>将参数以字典的形式导入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>(<span class="params">a, b=<span class="number">10</span>, *args, **kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span> (a)</span><br><span class="line">    <span class="built_in">print</span> (b)</span><br><span class="line">    <span class="built_in">print</span> (args)</span><br><span class="line">    <span class="built_in">print</span> (kwargs)</span><br><span class="line">foo(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, e=<span class="number">5</span>, f=<span class="number">6</span>, g=<span class="number">7</span>)</span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">&#123;<span class="string">&#x27;e&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;f&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;g&#x27;</span>: <span class="number">7</span>&#125;</span><br></pre></td></tr></table></figure>
</br>
<p>25.Pytorch中的<code>state_dict</code>简单来说是一个Python 字典对象，将模型每一层映射到模型参数张量。只有具有可学习参数（卷积层，线性层等）和 registered buffers (batchnorm’s running_mean) 在 <code>state_dict</code>中有入口。同理，可以使用<code>load_state_dict</code>加载这些参数。</p>
<p>PS：优化器对象<code>torch.optim</code>也有<code>state_dict</code>，包含关于优化器状态的信息以及所有的超参数。</p>
</br>
<p>26.<code>self.register_buffer</code> 和<code>self.register_parameter</code>。前者用于register模型参数为buffers，buffers不能调用<code>model.parameters()</code>返回参数，优化器也无法更新它们。</p>
</br>
<p>27.<code>__repr__</code>用于返回传入对象相关信息，可以重写。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        s = self.__class__.__name__ + <span class="string">&quot;(&quot;</span></span><br><span class="line">        s += <span class="string">&quot;&#123;&#125;)&quot;</span>.<span class="built_in">format</span>(self.weight.shape[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure>
</br>
<p>28.<code>torch.no_grad</code>用来关闭梯度计算，当你确定你不会调用 <code>Tensor.backward()</code>。这一操作可以减少用于计算的内存消耗，此时<code>requires_grad=True</code>。</p>
</br>
<p>29.装饰器（Decorators）是用于修改其他函数的功能的函数。python装饰器封装一个函数，并且用这样或那样的方式修改它的行为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">a_new_decorator</span>(<span class="params">a_func</span>):</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapTheFunction</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I am doing some boring work before executing a_func()&quot;</span>)</span><br><span class="line"> </span><br><span class="line">        a_func()</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I am doing some boring work after executing a_func()&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> wrapTheFunction</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a_function_requiring_decoration</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I am the function which needs some decoration to remove my foul smell&quot;</span>)</span><br><span class="line"> </span><br><span class="line">a_function_requiring_decoration()</span><br><span class="line"><span class="comment">#outputs: &quot;I am the function which needs some decoration to remove my foul smell&quot;</span></span><br><span class="line"> </span><br><span class="line">a_function_requiring_decoration = a_new_decorator(a_function_requiring_decoration)</span><br><span class="line"><span class="comment">#now a_function_requiring_decoration is wrapped by wrapTheFunction()</span></span><br><span class="line"> </span><br><span class="line">a_function_requiring_decoration()</span><br><span class="line"><span class="comment">#outputs:I am doing some boring work before executing a_func()</span></span><br><span class="line"><span class="comment">#        I am the function which needs some decoration to remove my foul smell</span></span><br><span class="line"><span class="comment">#        I am doing some boring work after executing a_func()</span></span><br></pre></td></tr></table></figure>
<p>上述代码中 <code>a_new_decorator</code> 即为一个装饰器，可以通过<code>@a_new_decorator</code>来精简上述代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@a_new_decorator</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a_function_requiring_decoration</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Hey you! Decorate me!&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I am the function which needs some decoration to &quot;</span></span><br><span class="line">          <span class="string">&quot;remove my foul smell&quot;</span>)</span><br><span class="line"> </span><br><span class="line">a_function_requiring_decoration()</span><br><span class="line"><span class="comment">#outputs: I am doing some boring work before executing a_func()</span></span><br><span class="line"><span class="comment">#         I am the function which needs some decoration to remove my foul smell</span></span><br><span class="line"><span class="comment">#         I am doing some boring work after executing a_func()</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#the @a_new_decorator is just a short way of saying:</span></span><br><span class="line">a_function_requiring_decoration = a_new_decorator(a_function_requiring_decoration)</span><br></pre></td></tr></table></figure>
<p>此时会有一个问题，对用装饰器修饰的函数调用<code>__name__</code>会有以下输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(a_function_requiring_decoration.__name__)</span><br><span class="line"><span class="comment"># Output: wrapTheFunction</span></span><br></pre></td></tr></table></figure>
<p>此时，可以通过Python提供的<code>functools.wraps</code>来解决上述问题：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a_new_decorator</span>(<span class="params">a_func</span>):</span><br><span class="line"><span class="meta">    @wraps(<span class="params">a_func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapTheFunction</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I am doing some boring work before executing a_func()&quot;</span>)</span><br><span class="line">        a_func()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I am doing some boring work after executing a_func()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapTheFunction</span><br><span class="line"> </span><br><span class="line"><span class="meta">@a_new_decorator</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a_function_requiring_decoration</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Hey yo! Decorate me!&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I am the function which needs some decoration to &quot;</span></span><br><span class="line">          <span class="string">&quot;remove my foul smell&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(a_function_requiring_decoration.__name__)</span><br><span class="line"><span class="comment"># Output: a_function_requiring_decoration</span></span><br></pre></td></tr></table></figure>
</br>
<p>30.当需要线上加载模型时，不同版本的Pytorch有不同的加载方法，具体如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> torchvision.models.utils <span class="keyword">import</span> load_state_dict_from_url <span class="comment"># torchvision 0.4+</span></span><br><span class="line"><span class="keyword">except</span> ModuleNotFoundError:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">from</span> torch.hub <span class="keyword">import</span> load_state_dict_from_url <span class="comment"># torch 1.x</span></span><br><span class="line">    <span class="keyword">except</span> ImportError:</span><br><span class="line">        <span class="keyword">from</span> torch.utils.model_zoo <span class="keyword">import</span> load_url <span class="keyword">as</span> load_state_dict_from_url <span class="comment"># torch 0.4.1</span></span><br></pre></td></tr></table></figure>
<p>PS：当版本不同时有不同的异常，如上述的<code>ModuleNotFoundError</code>和<code>ImportError</code>。</p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch文档01</title>
    <url>/2022/07/04/Pytorch%E6%96%87%E6%A1%A301/</url>
    <content><![CDATA[<p>本文记录Pytorch中一些常用类、函数和概念的文档（主要由<a href="https://pytorch.org/docs/stable/index.html">官方文档</a>翻译而来）和对它们的理解。</p>
<span id="more"></span>
<h3 id="torchnnparameterparameter"><a class="markdownIt-Anchor" href="#torchnnparameterparameter"></a> torch.nn.parameter.Parameter</h3>
<p>其完整声明形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CLASS torch.nn.parameter.Parameter(data=<span class="literal">None</span>, requires_grad=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p><code>torch.nn.parameter.Parameter</code>有如下的继承关系：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Parameter</span>(torch.Tensor):</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tensor</span>(torch._C._TensorBase):</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_TensorBase</span>(metaclass=_TensorMeta)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_TensorMeta</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">type</span>:</span><br></pre></td></tr></table></figure>
<p>一种Tensor，可以被认为是一个模型参数。</p>
<p><code>Parameter</code>是<code>Tensor</code>的子类，当和<code>Module</code>一起使用时有一种专门的特性——当被赋值作为模型属性时它们会自动地添加到模型的参数列表中，并且将会出现在<code>parameter()</code>迭代器中。给模型属性赋值一个张量时则没有这种作用。这是因为用户可能想存储一些临时状态，像在模型中RNN的最后的隐藏状态。如果没有类似<code>Parametr</code>这样的类，这些临时的值也会被注册。</p>
<p>参数：</p>
<ul>
<li><code>data(Tensor)</code>：参数张量。</li>
<li><code>requires_grad(bool, optional)</code>：如果参数要求梯度，看 <a href="https://pytorch.org/docs/stable/notes/autograd.html#locally-disable-grad-doc">Locally disabling gradient computation</a> 了解更多的细节，默认为True。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.parameter.Parameter.html">PARAMETER</a></li>
</ol>
</blockquote>
<h3 id="torchnnfunctional"><a class="markdownIt-Anchor" href="#torchnnfunctional"></a> torch.nn.functional</h3>
<p>静态函数库。其包含的函数可分为以下几种类型：</p>
<ul>
<li>Convolution function</li>
<li>Pooling function</li>
<li>Non-linear activation functions</li>
<li>Linear functions</li>
<li>Sparse functions</li>
<li>Distance functions</li>
<li>Loss functions</li>
<li>Vision functions</li>
<li>DataParallel functions (multi-GPU, distributed)：<code>torch.nn.parallel.data_parallel</code></li>
</ul>
<h3 id="torchnninit"><a class="markdownIt-Anchor" href="#torchnninit"></a> torch.nn.init</h3>
<p>静态函数库，用于权重等的初始化</p>
<h4 id="torchnninitkaiming_normal_"><a class="markdownIt-Anchor" href="#torchnninitkaiming_normal_"></a> torch.nn.init.kaiming_normal_</h4>
<p>其完整声明形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.nn.init.kaiming_normal_(tensor, a=<span class="number">0</span>, mode=<span class="string">&#x27;fan_in&#x27;</span>, nonlinearity=<span class="string">&#x27;leaky_relu&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>根据 <em>Delving deep into rectifiers: Surpassing human-level performance on ImageNet classification - He, K. et al. (2015)</em> 中描述的方法使用正态分布给输入Tensor填充值。结果Tensor的值取样于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>s</mi><mi>t</mi><msup><mi>d</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(0, std^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。其中：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220707105811403.png" alt="image-20220707105811403" /></p>
<p>也被称之为何氏初始化（He initialization）</p>
<p>参数：</p>
<ul>
<li><code>tensor</code>：一个n维<code>torch.Tensor</code></li>
<li><code>a</code>：the negative slope of the rectifier used after this layer (only used with <code>'leaky_relu'</code>)</li>
<li><code>mode</code>：<code>'fan_in'</code>(默认)或者<code>'fan_out'</code>。选择<code>'fan_in'</code>在前向传播过程中保存权重方差大小；选择<code>'fan_out'</code>在反向传播过程中保存方差大小。</li>
<li><code>nonlinearity</code>：非线性函数（如<code>nn.functional</code>名），建议只使用<code>'relu'</code>或<code>'leaky_relu'</code>（默认）。</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w = torch.empty(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">nn.init.kaiming_normal_(w, mode=<span class="string">&#x27;fan_out&#x27;</span>, nonlinearity=<span class="string">&#x27;relu&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="torchnninitzeros_"><a class="markdownIt-Anchor" href="#torchnninitzeros_"></a> torch.nn.init.zeros_</h4>
<p>其完整声明形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.nn.init.zeros_(tensor)</span><br></pre></td></tr></table></figure>
<p>使用标量0来填充输入Tensor.</p>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>w = torch.empty(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nn.init.zeros_(w)</span><br></pre></td></tr></table></figure>
<p><code>torch.nn.init.ones_</code>与之类似，使用标量1填充输入Tensor。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/nn.init.html">TORCH.NN.INIT</a></li>
</ol>
</blockquote>
<h3 id="torchnnfunctional-vs-torchnn"><a class="markdownIt-Anchor" href="#torchnnfunctional-vs-torchnn"></a> torch.nn.functional vs torch.nn</h3>
<p>前者使用静态的函数，后者则定义了一个<code>nn.Module</code>类。对<code>nn.Module</code>类来说，如<code>nn.Conv2d</code>，其拥有一些内置的属性如<code>self.weight</code>，并不需要传递<code>weights</code>和<code>bias</code>等参数（模块通常会在其<code>forward</code>方法中调用对应的函数）；而对<code>functional.Conv2d</code>来说，其只是定义了操作，需要给其传递所有的参数。</p>
<p>所以下述两种关于Conv2D的实现是等价的：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyModel, self).__init__()</span><br><span class="line">        self.conv = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyModel, self).__init__()</span><br><span class="line">        conv = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">        self.weight = conv.weight</span><br><span class="line">        self.bias = conv.bias</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.conv2d(x, self.weight, self.bias)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>
<p>但下面的操作将<code>weights</code>、<code>bias</code>值和<code>conv2d</code>操作进行了解耦。</p>
<p>经验上看，由于<code>relu</code>等操作不需要像<code>Conv2d</code>操作一样需要对参数进行更新，通常在<code>forward</code>中直接通过<code>F.relu</code>进行调用，而不需要在<code>__init__</code>中初始化<code>nn.ReLU</code>模块。</p>
<p>这里补充下面第5和第6个参考资料中提到的有关<code>backward()</code>的知识：</p>
<p>Pytorch使用计算图来计算backward gradients，计算图会追踪在forward pass中做了哪些操作。任何在一个<code>Variable</code>上做的惭怍隐式地被registered。然后就只需要从variable被调用的地方反向穿过计算图根据导数的链式法则来计算梯度。下面是Pytorch中计算图的一个可视化图片：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220707160538483.png" alt="image-20220707160538483" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/what-is-the-difference-between-torch-nn-and-torch-nn-functional/33597">What is the difference between torch.nn and torch.nn.functional?</a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html">Conv2D</a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.functional.conv2d.html#torch.nn.functional.conv2d">functional.conv2d</a></li>
<li><strong><a href="https://discuss.pytorch.org/t/beginner-should-relu-sigmoid-be-called-in-the-init-method/18689">Beginner: Should ReLU/sigmoid be called in the <strong>init</strong> method?</a></strong></li>
<li><a href="https://stackoverflow.com/questions/49594858/how-does-pytorch-module-do-the-back-prop">How does PyTorch module do the back prop</a></li>
<li><a href="https://pytorch.org/blog/computational-graphs-constructed-in-pytorch/">How Computational Graphs are Constructed in PyTorch</a></li>
</ol>
</blockquote>
<h3 id="pytorch-internals"><a class="markdownIt-Anchor" href="#pytorch-internals"></a> Pytorch Internals</h3>
<p>PS：Linux系统中site-packages路径为<code>../anaconda3/envs/mobilesal/lib/python3.6/site-packages/</code></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/blog/a-tour-of-pytorch-internals-1/">A Tour of PyTorch Internals (Part I)</a></li>
<li><a href="https://pytorch.org/blog/a-tour-of-pytorch-internals-2/">A Tour of PyTorch Internals (Part II) - The Build System</a></li>
<li><a href="https://blog.christianperone.com/2018/03/pytorch-internal-architecture-tour/">PyTorch – Internal Architecture Tour</a></li>
<li><a href="https://stackoverflow.com/questions/31003994/where-is-site-packages-located-in-a-conda-environment">Where is site-packages located in a Conda environment?</a><br />
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</li>
</ol>
</blockquote>
<h3 id="nnmoduleforward"><a class="markdownIt-Anchor" href="#nnmoduleforward"></a> nn.Module.forward</h3>
<p>为什么在下述代码中通过<code>model(input)</code>获取<code>output</code>，而不是<code>model.forward(input)</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyModel, self).__init__()</span><br><span class="line">        conv = nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>)</span><br><span class="line">        self.weight = conv.weight</span><br><span class="line">        self.bias = conv.bias</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.conv2d(x, self.weight, self.bias)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">	model = MyModel()</span><br><span class="line">	<span class="built_in">print</span>(model)</span><br><span class="line">	<span class="built_in">input</span>=torch.randn(<span class="number">1</span>, <span class="number">1</span>, <span class="number">32</span>, <span class="number">32</span>)</span><br><span class="line">	output = model(<span class="built_in">input</span>)</span><br></pre></td></tr></table></figure>
<p>当直接调用model时，会调用内置的<code>__call__</code>函数。在代码 <a href="https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/module.py#L471">the code</a> 中可以看到，该函数会管理所有的registered hooks并且在之后调用<code>forward</code>。这也是应该直接调用model的原因，因为可能hooks可能不会work。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/about-the-nn-module-forward/20858">About the ‘nn.Module.forward’</a></li>
<li><a href="https://pytorch.org/tutorials/beginner/blitz/neural_networks_tutorial.html#define-the-network">NEURAL NETWORKS</a></li>
</ol>
</blockquote>
<h3 id="nnupsample"><a class="markdownIt-Anchor" href="#nnupsample"></a> nn.Upsample</h3>
<p>对一个给定的多通道 1D (temporal), 2D (spatial) 或 3D (volumetric) 数据进行上采样。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Upsample.html">UPSAMPLE</a></li>
</ol>
</blockquote>
<h3 id="torchutilsdata"><a class="markdownIt-Anchor" href="#torchutilsdata"></a> torch.utils.data</h3>
<p>该 package 的核心类为 <code>torch.utils.data.DataLoader</code>，表示在一个数据集上的迭代，其支持：</p>
<ul>
<li>map-style 和 iterable-style 的数据集</li>
<li>定制化数据加载顺序</li>
<li>自动 batching</li>
<li>单线程和多线程的数据加载</li>
<li>自动内存 pinning (固定)</li>
</ul>
<p>这些选项通过以下的 <code>DataLoader</code> 对象的构造器配置，其有signature：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DataLoader(dataset, batch_size=<span class="number">1</span>, shuffle=<span class="literal">False</span>, sampler=<span class="literal">None</span>,</span><br><span class="line">           batch_sampler=<span class="literal">None</span>, num_workers=<span class="number">0</span>, collate_fn=<span class="literal">None</span>,</span><br><span class="line">           pin_memory=<span class="literal">False</span>, drop_last=<span class="literal">False</span>, timeout=<span class="number">0</span>,</span><br><span class="line">           worker_init_fn=<span class="literal">None</span>, *, prefetch_factor=<span class="number">2</span>,</span><br><span class="line">           persistent_workers=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<h4 id="dataset-types"><a class="markdownIt-Anchor" href="#dataset-types"></a> Dataset Types</h4>
<p><code>DataLoader</code>构造器最重要的参数为<code>dataset</code>，它指定了从中加载数据的数据集对象。PyTorch支持两种不同类型的数据集：</p>
<ul>
<li>map-style datasets</li>
<li>iterable-style datasets</li>
</ul>
<h4 id="map-style-datasets"><a class="markdownIt-Anchor" href="#map-style-datasets"></a> Map-Style datasets</h4>
<p>一个map-style的数据集需要实现<code>__getitem__()</code>和<code>__len__()</code>这两个protocols，表示从indices/keys (可能非整型) 到 data samples的映射。</p>
<blockquote>
<p>protocols: 管理数据传输和接收的形式和步骤，如HTTP protocol。</p>
</blockquote>
<p>例如，一个数据集，当能够通过<code>dataset[idx]</code>访问时，可以从磁盘上的文件夹中读取第<code>idx</code>张image和它对应的label。详见 <a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.Dataset"><code>Dataset</code></a></p>
<h4 id="iterable-style-datasets"><a class="markdownIt-Anchor" href="#iterable-style-datasets"></a> Iterable-style datasets</h4>
<p>一个iterable-style的数据集是<code>IterableDataset</code>子类的一个实例，该子类需要实现<code>__iter__()</code> protocol，并且表示在data samples上的一个迭代。这种类型的数据集尤其适合这种情况，当随机读取代价很大甚至不可能，或者batch size依赖于所获取的数据。</p>
<p>例如，一个数据集，当调用<code>iter(dataset)</code>时，可以返回来自数据库、远程服务器甚至实时生成的logs的数据读取流。详见 <a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset"><code>IterableDataset</code></a></p>
<p>PS：当使用<code>IterableDataset</code>进行multi-process data loading时，相同的数据对象在每个worker process上重复，因此必须对副本进行不同的配置以避免重复数据，可以看 <a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset"><code>IterableDataset</code></a>文档了解如何实现。</p>
<h4 id="data-loading-order-and-sampler"><a class="markdownIt-Anchor" href="#data-loading-order-and-sampler"></a> Data Loading Order and <code>Sampler</code></h4>
<p>对于 iterable-style 数据集，数据加载顺序完全由用户定义的迭代器控制。这允许更容易的chunk-reading和动态的batch size的实现（如，通过每次生成一个 batched sample）</p>
<p>本节的剩余部分关心map-style数据集的情况。<code>torch.utils.data.Sampler</code>类被用来指定在数据加载中使用的indices/keys的序列。它们代表在数据集indices上的迭代器对象，例如，在SGD (stochastic gradient decent) 的公共实例中，一个Sampler可以任意排列indices的列表并且每次生成一个indice，或者对于mini-batch SGD生成少量indices。</p>
<p>一个sequential或者shuffled的sampler将会自动根据传递给<code>Dataloader</code>的<code>shuffle</code>参数构造。可选地，用户可能使用<code>sampler</code>参数来指定一个custom Sampler object，每次生成要取的下一个index/key。</p>
<p>一个可以一次生成一个batch indices列表的custom Sampler可以作为<code>batch_sampler</code>参数传递。automatic batching可以通过<code>batch_size</code>和<code>drop_last</code>参数来开启。详见下节获取细节。</p>
<p>PS：<code>sampler</code>和<code>batch_sampler</code>都不兼容iterable-style数据集，因为它们没有key/index的概念。</p>
<h4 id="loading-batched-and-non-batched-data"><a class="markdownIt-Anchor" href="#loading-batched-and-non-batched-data"></a> Loading Batched and Non-Batched Data</h4>
<p><code>DataLoader</code>支持自动地将通过<code>batch_size</code>、<code>drop_last</code>、<code>batch_sampler</code>和<code>collate_fn</code>(有默认函数)参数的每个取到的data samples整理到batches中。</p>
<p><strong>Automatic batching(default)</strong></p>
<p>最通用的情况，对应取得 a minibatch of data并将它们整理进batched samplers，例如整理一维Tensors为batch的维度。</p>
<p>当<code>batch_size</code>(默认为1)不为None时，data loader生成batched samples而不是individual samples，<code>batch_size</code>和<code>drop_last</code>被用来指定data loader如何获取batches of dataset keys。对于map-style数据集，用户可以选择指定<code>batch_sampler</code>，其将一次生成一个list of keys。</p>
<p>PS：<code>batch_size</code>和<code>drop_last</code>是用来从<code>sampler</code>中构建一个<code>batch_sampler</code>的关键。对于map-style数据集，<code>sampler</code>要么由用户提供，要么基于<code>shuffle</code>参数构建。对于iterable-style数据集，没有<code>sampler</code>或<code>batch_sampler</code>的概念</p>
<p>在通过sampler的indices取得 a list of samples后，作为<code>collate_fn</code>参数传递的函数被用来将list of samples整理为batches。在这种情况下，从map-style数据集中的加载数据可以大致等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> indices <span class="keyword">in</span> batch_sampler:</span><br><span class="line">    <span class="keyword">yield</span> collate_fn([dataset[i] <span class="keyword">for</span> i <span class="keyword">in</span> indices])</span><br></pre></td></tr></table></figure>
<p>从iterable-style数据集中加载数据可以大致等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataset_iter = <span class="built_in">iter</span>(dataset)</span><br><span class="line"><span class="keyword">for</span> indices <span class="keyword">in</span> batch_sampler:</span><br><span class="line">    <span class="keyword">yield</span> collate_fn([<span class="built_in">next</span>(dataset_iter) <span class="keyword">for</span> _ <span class="keyword">in</span> indices])</span><br></pre></td></tr></table></figure>
<p>一个custom <code>collate_fn</code> 可以被用来 customize collation，例如，填充序列数据到batch的最大长度。</p>
<h4 id="disable-automatic-batching"><a class="markdownIt-Anchor" href="#disable-automatic-batching"></a> Disable automatic batching</h4>
<p>在某些情况下，用户可能想在数据集中手动管理batching，或者只是简单地加载individual samples。例如，可能直接加载batched data代价更小（例如从数据库中进行块访问，或者读取连续的内存块），或者batch size是数据依赖的，或者程序被设计在individual sample上运行。在这些情况下，不使用automatic batching（使用<code>collate_fn</code>整理samples）可能更好，此时可以让数据加载器直接返回dataset对象的每个成员。</p>
<p>当<code>batch_size</code>和<code>batch_sampler</code>都为None时（默认<code>batch_sampler</code>为None，就禁止了automatic batching。每个从dataset中获取的sampler被作为<code>collate_fn</code>参数传递的函数处理。</p>
<p>当禁止automatic batching，默认的<code>collate_fn</code>简单的转换Numpy arrays为Pytorch Tensors，并且保持everything else untouched。</p>
<p>在这种情况下，从一个map-style数据集中加载数据可以大致等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> sampler:</span><br><span class="line">    <span class="keyword">yield</span> collate_fn(dataset[index])</span><br></pre></td></tr></table></figure>
<p>从一个iterable-style数据集中加载数据可以大致等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> <span class="built_in">iter</span>(dataset):</span><br><span class="line">    <span class="keyword">yield</span> collate_fn(data)</span><br></pre></td></tr></table></figure>
<h4 id="working-with-collate_fn"><a class="markdownIt-Anchor" href="#working-with-collate_fn"></a> Working with <code>collate_fn</code></h4>
<p>当启用或禁用automatic batching时，<code>collate_fn</code>的使用略有不同。</p>
<p>当禁用batching时，<code>collate_fn</code>被单个的data sample调用，输出从data loader iterator中生成。这种情况下，默认的<code>default_fn</code>简单地转换Numpy arrays为Pytorch tensors。</p>
<p>当启用batching时，<code>collate_fn</code>每次被a list of data samples调用，需要将生成的input samples整理为a batch。本节的剩余部分描述默认的<code>collate_fn</code>  (<a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.default_collate"><code>default_collate()</code></a>) 的行为。</p>
<p>例如，如果每个sample包含一个3-channel的数据和一个整型的class label，也就是说，dataset的每个元素返回一个tuple (<code>image, class_index</code>)，默认的<code>collate_fn</code>会整理这样的list of tuples到a single tuple of a batched image tensor和a batched class label Tensor。尤其是，默认的<code>collate_fn</code>有如下的属性：</p>
<ul>
<li>总是将batch dimension作为新的dimension</li>
<li>自动地转换NumPy arrays和Python numerical values为PyTorch Tensors</li>
<li>保留数据结构，例如如果每个sample为一个dictionary，它输出一个有相同set of keys的dict，但是将batched Tensors作为值（或者lists，如果值不能转换为Tensors）。对list、tuple、namedtuple都是如此。</li>
</ul>
<p>… （文档中提及许多暂时用不到的知识，暂略）</p>
<h4 id="memory-pinning"><a class="markdownIt-Anchor" href="#memory-pinning"></a> Memory Pinning</h4>
<p>从主机到GPU的数据的copies会快得多，当它们从 pinned (page-locked) memory 中创建时。详见 <a href="https://pytorch.org/docs/stable/notes/cuda.html#cuda-memory-pinning">Use pinned memory buffers</a> 如何更通用地使用 pinned memory。</p>
<p>对于数据加载来说，传递<code>pin_memory=True</code>给<code>Dataloader</code>将自动的把获取到的数据放在pinned memory，因此会使得对CUDA-enabled GPUs有更快的数据传输。</p>
<p>默认的memory pinning logic 只会识别Tensors和包含Tensors的maps/iterables。默认，如何pinning logic看到一个custom type (如果你有一个<code>collate_fn</code>返回一个custom batch type)，或者你的batch的每个元素为一个custom type，pinning logic不会认出它们，并将返回batch（或元素）而不pin the memory。为了对custom batch或者custom data type进行memory pinning，需要在custom type中定义一个<code>pin_memory()</code>方法。如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleCustomBatch</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, data</span>):</span><br><span class="line">        transposed_data = <span class="built_in">list</span>(<span class="built_in">zip</span>(*data))</span><br><span class="line">        self.inp = torch.stack(transposed_data[<span class="number">0</span>], <span class="number">0</span>)</span><br><span class="line">        self.tgt = torch.stack(transposed_data[<span class="number">1</span>], <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># custom memory pinning method on custom type</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pin_memory</span>(<span class="params">self</span>):</span><br><span class="line">        self.inp = self.inp.pin_memory()</span><br><span class="line">        self.tgt = self.tgt.pin_memory()</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">collate_wrapper</span>(<span class="params">batch</span>):</span><br><span class="line">    <span class="keyword">return</span> SimpleCustomBatch(batch)</span><br><span class="line"></span><br><span class="line">inps = torch.arange(<span class="number">10</span> * <span class="number">5</span>, dtype=torch.float32).view(<span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line">tgts = torch.arange(<span class="number">10</span> * <span class="number">5</span>, dtype=torch.float32).view(<span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line">dataset = TensorDataset(inps, tgts)</span><br><span class="line"></span><br><span class="line">loader = DataLoader(dataset, batch_size=<span class="number">2</span>, collate_fn=collate_wrapper,</span><br><span class="line">                    pin_memory=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> batch_ndx, sample <span class="keyword">in</span> <span class="built_in">enumerate</span>(loader):</span><br><span class="line">    <span class="built_in">print</span>(sample.inp.is_pinned())</span><br><span class="line">    <span class="built_in">print</span>(sample.tgt.is_pinned())</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/data.html">TORCH.UTILS.DATA</a></li>
</ol>
</blockquote>
<p>=======</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>d19dd391c64848b2ec1fd8b1d11d2660466f7856</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch中知识点03</title>
    <url>/2022/10/06/Pytorch%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B903/</url>
    <content><![CDATA[<p>本文记录一下在调试模型过程中的一些 Pytorch 框架和 python 相关知识点。</p>
<span id="more"></span>
<ol>
<li>报错：</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect … This means that the trace might not generalize to other inputs!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221011160635.png" alt="" /></p>
<p>解决方案：将对应位置条件语句删除</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># if c.size() != att.size():</span>
<span class="token comment">#     att = F.interpolate(att, c.size()[2:], mode='bilinear', align_corners=False)</span>
<span class="token comment"># 删除if语句</span>
att <span class="token operator">=</span> F<span class="token punctuation">.</span>interpolate<span class="token punctuation">(</span>att<span class="token punctuation">,</span> c<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'bilinear'</span><span class="token punctuation">,</span> align_corners<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token comment"># if lf.size()[2:] != hf.size()[2:]:</span>
hf <span class="token operator">=</span> F<span class="token punctuation">.</span>interpolate<span class="token punctuation">(</span>hf<span class="token punctuation">,</span> size<span class="token operator">=</span>lf<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'bilinear'</span><span class="token punctuation">,</span> align_corners<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/tracerwarning-converting-a-tensor-to-a-python-index-might-cause-the-trace-to-be-incorrect-this-means-that-the-trace-might-not-generalize-to-other-inputs/42282">TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect…This means that the trace might not generalize to other inputs!</a></li>
<li><a href="https://github.com/onnx/onnx/issues/2836">TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can’t record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs! #2836</a></li>
<li><a href="https://stackoverflow.com/questions/66746307/torch-jit-trace-tracerwarning-converting-a-tensor-to-a-python-boolean-might-c">Torch JIT Trace = TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect</a></li>
</ol>
</blockquote>
</br>
<p>2.报如下错误：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221006184108.png" alt="" /><br />
其原因在于数据集的大小除以batch_size余1，最后只包含单个数据的batch无法完成<code>batch_norm</code>操作。<br />
解决方案：更改batch_size。</p>
</br>
3.出现报错` Can't parse 'dsize'. Sequence item with index 0 has a wrong type`：
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221010164417.png" alt="" /></p>
<p>其原因为<code>(W,H)</code>中数据类型不对，应该将<code>torch.Tensor</code>转为<code>int</code>。由于<code>H</code>和<code>W</code>均为一维Tensor，可以通过以下代码实现：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">H<span class="token punctuation">,</span> W <span class="token operator">=</span> H<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> W<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/47588682/how-to-cast-a-1-d-inttensor-to-int-in-pytorch">How to cast a 1-d IntTensor to int in Pytorch</a></li>
</ol>
</blockquote>
</br>
4.当通过`state_dict = model_zoo.load_url(url_map_[model_name]`在线下载预训练的模型权重文件时，出现`urllib.error.HTTPError: HTTP Error 503: Egress is over the account limit.`错误。
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221018162424.png)
<ul>
<li>原因：状态码为<code>503 Service Unavailable</code>，表示临时的服务器维护或者过载，服务器当前无法处理请求，这个情况是暂时的，会在一段时间后恢复（实际上过了好多天都没修复）</li>
<li>解决方案：因为调用<code>model_zoo.load_url()</code>时会打印出该权重文件的下载地址和保存路径，可以通过手动下载并放入该路径来解决该问题，如下图所示<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221018162553.png" alt="" /></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zh.m.wikipedia.org/zh/HTTP%E7%8A%B6%E6%80%81%E7%A0%81">HTTP状态码</a></li>
</ol>
</blockquote>
</br>
5.报错：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">Cannot interpret <span class="token string">'&lt;attribute '</span>dtype<span class="token string">' of '</span>numpy<span class="token punctuation">.</span>generic<span class="token string">' objects>'</span> <span class="token keyword">as</span> a data <span class="token builtin">type</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
解决方法：更新pandas
> 参考资料：
> 1. [TypeError: Cannot interpret '<attribute 'dtype' of 'numpy.generic' objects>' as a data type · Issue #18355 · numpy/numpy · GitHub](https://github.com/numpy/numpy/issues/18355)
</br>
6.`loss.backward()`报错：`grad can be implicitly created only for scalar outputs`
解决方法：`loss.mean().backward()`。
> 参考资料：
> 1. [Loss.backward() raises error 'grad can be implicitly created only for scalar outputs' - autograd - PyTorch Forums](https://discuss.pytorch.org/t/loss-backward-raises-error-grad-can-be-implicitly-created-only-for-scalar-outputs/12152/2)
</br>
7. Pytorch创建随机张量和创建张量：
- 随机张量均匀分布
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
x2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
x3 <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
x4 <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2048</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
- 随机张量标准正态分布
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
- 全部为1：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
- 全部为0：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [PyTorch 常用方法总结1：生成随机数Tensor的方法汇总（标准分布、正态分布……） - 知乎](https://zhuanlan.zhihu.com/p/31231210)
> 2. [torch.ones — PyTorch 1.13 documentation](https://pytorch.org/docs/stable/generated/torch.ones.html)
> 3. [torch.ones_like — PyTorch 1.13 documentation](https://pytorch.org/docs/stable/generated/torch.ones_like.html)
> 4. [torch.zeros — PyTorch 1.13 documentation](https://pytorch.org/docs/stable/generated/torch.zeros.html)
> 5. [torch.zeros_like — PyTorch 1.13 documentation](https://pytorch.org/docs/stable/generated/torch.zeros_like.html)
</br>
8.BCE Loss vs Cross Entropy：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/bce-loss-vs-cross-entropy/97437">BCE Loss vs Cross Entropy - vision - PyTorch Forums</a></li>
<li>[Learning Day 57/Practical 5: Loss function — CrossEntropyLoss vs BCELoss in Pytorch; Softmax vs sigmoid; Loss calculation | by De Jun Huang | dejunhuang | Medium](<a href="https://medium.com/dejunhuang/learning-day-57-practical-5-loss-function-crossentropyloss-vs-bceloss-in-pytorch-softmax-vs-bd866c8a0d23#:~:text=Difference%20in%20purpose%20(in%20practice,probability%2C%20you%20should%20use%20BCE.&amp;text=We%20cannot%20use%20sigmoid%20for,CrossEntropyLoss%20as%20the%20loss%20function.)">https://medium.com/dejunhuang/learning-day-57-practical-5-loss-function-crossentropyloss-vs-bceloss-in-pytorch-softmax-vs-bd866c8a0d23#:~:text=Difference in purpose (in practice,probability%2C you should use BCE.&amp;text=We cannot use sigmoid for,CrossEntropyLoss as the loss function.)</a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.BCELoss.html">BCELoss — PyTorch 1.13 documentation</a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html">CrossEntropyLoss — PyTorch 1.13 documentation</a></li>
</ol>
</blockquote>
</br>
9.张量最大值和最小值：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 最大</span>
x<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 最小</span>
x<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</br>
10.维度扩充、复制和压缩：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 原始tensor x</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">366</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># shape: 366, 400</span>
<span class="token comment"># 扩充维度</span>
x <span class="token operator">=</span> x<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># shape: 1, 366, 400</span>
<span class="token comment"># 复制通道</span>
x <span class="token operator">=</span> x<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># shape: 3, 366, 400</span>
<span class="token comment"># 压缩维度</span>
x <span class="token operator">=</span> x<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># shape: 3, 366, 400 不能压缩非1的维度</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">366</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> x<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># shape: 366, 400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [记录一个Tensor操作——扩充维度+复制 - 知乎](https://zhuanlan.zhihu.com/p/442263715)
</br>
11.在Module中的如下操作报如下错误：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">gaussian_2D <span class="token operator">=</span> get_gaussian_kernel<span class="token punctuation">(</span>k_gaussian<span class="token punctuation">,</span> mu<span class="token punctuation">,</span> sigma<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>gaussian_filter <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
                                         out_channels<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
                                         kernel_size<span class="token operator">=</span>k_gaussian<span class="token punctuation">,</span>
                                         padding<span class="token operator">=</span>k_gaussian <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                         bias<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
self<span class="token punctuation">.</span>gaussian_filter<span class="token punctuation">.</span>weight<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>gaussian_2D<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-error" data-language="error"><code class="language-error">Leaf variable was used in an inplace operation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230218224821.png)
解决方案：注释掉151行
> 参考资料：
> 1. [Leaf variable was used in an inplace operation - PyTorch Forums](https://discuss.pytorch.org/t/leaf-variable-was-used-in-an-inplace-operation/308)
</br>
12.在Module的batch上面迭代：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
	B<span class="token punctuation">,</span> C<span class="token punctuation">,</span> H<span class="token punctuation">,</span> W <span class="token operator">=</span> x<span class="token punctuation">.</span>shape
	<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span>
		xi <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
		xi <span class="token operator">=</span> self<span class="token punctuation">.</span>net<span class="token punctuation">(</span>xi<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</br>
13.对多个Tensor进行join。有两种方式：
- `torch.cat((tens_1, tens_2, -, tens_n), dim=0, *, out=None)`：在相同的dimension上concatenate多个tensor：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># x1.shape: (1,3,320,320)</span>
x2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># x2.shape: (1,3,320,320)</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>x2<span class="token punctuation">)</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># x.shape: (2,3,320,320)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
- `torch.stack((tens_1, tens_2, -, tens_n), dim=0, *, out=None)`：在一个新的dimension上concatenate一个tensor序列，tensor需要为相同的尺寸：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># x1.shape: (1,3,320,320)</span>
x2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># x2.shape: (1,3,320,320)</span>
x <span class="token operator">=</span> torch<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">)</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># x.shape: (2,1,3,320,320)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [How to join tensors in Pytorch](https://www.geeksforgeeks.org/how-to-join-tensors-in-pytorch/)
> 2. [How to join tensors in Pytorch?](https://www.tutorialspoint.com/how-to-join-tensors-in-pytorch) 
</br>
14.Pytorch对tensor取指定维度的切片。
<pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">,</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (16,3,320,320)</span>
a1 <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># (3,320,320)</span>
a2 <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># (1,3,320,320)</span>
a3 <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># (1,3,320,320)</span>

b <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (1, 1, 320, 320)</span>
b1 <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># (1, 320, 320)</span>
b2 <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># (320, 320)</span>
b3 <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># (1, 1, 320, 320)</span>

c <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (16, 2, 320, 320)</span>
c1 <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># (16, 1, 320, 320)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [python - Tensorflow: How to slice tensor with number of dimension not changed? - Stack Overflow](https://stackoverflow.com/questions/51670073/tensorflow-how-to-slice-tensor-with-number-of-dimension-not-changed)
</br>
15.报错`RuntimeError: Function 'SqrtBackward0' returned nan values in its 0th output.`
解决方案：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">grad_mag <span class="token operator">=</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>grad_x_r<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> grad_y_r<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 添加1e-8项</span>
grad_mag <span class="token operator">=</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>grad_x_r<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> grad_y_r<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1e-8</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [RuntimeError: Function 'SqrtBackward' returned nan values in its 0th output - autograd - PyTorch Forums](https://discuss.pytorch.org/t/runtimeerror-function-sqrtbackward-returned-nan-values-in-its-0th-output/48702/5)
</br>
16.报错`ImportError: cannot import name 'container_abcs' from 'torch._six'`。
原因：torch版本问题，本人版本为`1.10`。
解决方案：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torch<span class="token punctuation">.</span>_six <span class="token keyword">import</span> container_abcs
<span class="token comment"># 改为</span>
<span class="token keyword">import</span> collections<span class="token punctuation">.</span>abc <span class="token keyword">as</span> container_abcs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Colab Notebook: Cannot import name 'container_abcs' from 'torch._six'](https://stackoverflow.com/questions/70193443/colab-notebook-cannot-import-name-container-abcs-from-torch-six)
</br>
17.高效的tensor张量矩阵阈值过滤操作：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> x
tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0.3552</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2.3825</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.8297</span><span class="token punctuation">,</span>  <span class="token number">0.3477</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.2035</span><span class="token punctuation">,</span>  <span class="token number">1.2252</span><span class="token punctuation">,</span>  <span class="token number">0.5002</span><span class="token punctuation">,</span>  <span class="token number">0.6248</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span> <span class="token number">0.1307</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2.0608</span><span class="token punctuation">,</span>  <span class="token number">0.1244</span><span class="token punctuation">,</span>  <span class="token number">2.0139</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> mask <span class="token operator">=</span> x<span class="token punctuation">.</span>ge<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> mask
tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> torch<span class="token punctuation">.</span>masked_select<span class="token punctuation">(</span>x<span class="token punctuation">,</span> mask<span class="token punctuation">)</span>
tensor<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1.2252</span><span class="token punctuation">,</span>  <span class="token number">0.5002</span><span class="token punctuation">,</span>  <span class="token number">0.6248</span><span class="token punctuation">,</span>  <span class="token number">2.0139</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
`torch.masked_select(x, mask)`和`x[mask]`作用相似，可能的差别见参考资料3。但二者返回的tensor均为一维张量，而不是和输入的x和mask相同的shape。
若想保持原始tensor的尺寸，可以进行如下操作：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
mask <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>
mask<span class="token punctuation">[</span>x<span class="token operator">></span><span class="token number">0.5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
result <span class="token operator">=</span> torch<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>x<span class="token punctuation">,</span> mask<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [torch.masked_select — PyTorch 1.13 documentation](https://pytorch.org/docs/stable/generated/torch.masked_select.html)
> 2. [PyTorch中的masked_select选择函数 - 知乎](https://zhuanlan.zhihu.com/p/348035584)
> 3. [Please add "dim" feature for function "torch.masked_select" · Issue #48830 · pytorch/pytorch · GitHub](https://github.com/pytorch/pytorch/issues/48830)
</br>
18.PyTorch中的矩阵乘法操作：
点乘：矩阵逐个元素（element-wise）乘法
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch
<span class="token keyword">import</span> cv2
mask <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./mask.png'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
mask <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>mask<span class="token punctuation">)</span>

edge <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./edge.png'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
edge <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>edge<span class="token punctuation">)</span>

mask1 <span class="token operator">=</span> mask <span class="token operator">/</span> <span class="token number">255.0</span>

mask_region <span class="token operator">=</span> mask1<span class="token punctuation">.</span>ge<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>
mask_final <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>edge<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>
mask_final<span class="token punctuation">[</span>mask_region<span class="token operator">==</span><span class="token boolean">True</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
mask_final<span class="token punctuation">[</span>mask_region<span class="token operator">==</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

edge1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>edge<span class="token punctuation">,</span> mask_final<span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [随笔1: PyTorch中矩阵乘法总结 - 知乎](https://zhuanlan.zhihu.com/p/100069938)
> 2. [torch.Tensor的4种乘法_torch tensor 相乘_da_kao_la的博客-CSDN博客](https://blog.csdn.net/da_kao_la/article/details/87484403)
</br>
19.报错`RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! when resuming training`
> 参考资料：
> 1. [python - RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! when resuming training - Stack Overflow](https://stackoverflow.com/questions/66091226/runtimeerror-expected-all-tensors-to-be-on-the-same-device-but-found-at-least)
</br>
20.报错`Could not load dynamic library 'libnvinfer_plugin.so.7`。
解决方案：建立从`libvinfer`版本7到版本8的symbolic link
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># the follwoing path will be different for you - depending on your install method</span>
$ cd env<span class="token operator">/</span>lib<span class="token operator">/</span>python3<span class="token punctuation">.</span><span class="token number">10</span><span class="token operator">/</span>site<span class="token operator">-</span>packages<span class="token operator">/</span>tensorrt

<span class="token comment"># create symbolic links</span>
$ ln <span class="token operator">-</span>s libnvinfer_plugin<span class="token punctuation">.</span>so<span class="token punctuation">.</span><span class="token number">8</span> libnvinfer_plugin<span class="token punctuation">.</span>so<span class="token punctuation">.</span><span class="token number">7</span>
$ ln <span class="token operator">-</span>s libnvinfer<span class="token punctuation">.</span>so<span class="token punctuation">.</span><span class="token number">8</span> libnvinfer<span class="token punctuation">.</span>so<span class="token punctuation">.</span><span class="token number">7</span>

<span class="token comment"># add tensorrt to library path</span>
$ export LD_LIBRARY_PATH<span class="token operator">=</span>$LD_LIBRARY_PATH<span class="token punctuation">:</span><span class="token operator">~</span><span class="token operator">/</span>env<span class="token operator">/</span>lib<span class="token operator">/</span>python3<span class="token punctuation">.</span><span class="token number">10</span><span class="token operator">/</span>site<span class="token operator">-</span>packages<span class="token operator">/</span>tensorrt<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [tensorflow - Could not load dynamic library 'libnvinfer.so.7' - Stack Overflow](https://stackoverflow.com/questions/74956134/could-not-load-dynamic-library-libnvinfer-so-7)
</br>
21.报错`tensorflow.python.framework.errors_impl.PermissionDeniedError: : /storage/FT/pth/SCWSSOD/SCWSSOD28/events.out.tfevents.1678606756.node4.11263.0; Permission denied`
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230312170110.png)
解决方案：更改`/storage/FT/pth/SCWSSOD/SCWSSOD28`文件夹的权限
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> -R <span class="token number">777</span> /storage/FT/pth/SCWSSOD/SCWSSOD28<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [tensorflow.python.framework.errors_impl.PermissionDeniedError: data · Issue #6393 · tensorflow/tensorflow · GitHub](https://github.com/tensorflow/tensorflow/issues/6393)
> 2. [tensorflow.python.framework.errors_impl.PermissionDeniedError: data · Issue #6393 · tensorflow/tensorflow · GitHub](https://github.com/tensorflow/tensorflow/issues/6393)
</br>
22.Pytorch保存中间权重作为checkpoint，并从中间权重加载权重开始继续训练：
1. 定义和初始化网络
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch
<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn
<span class="token keyword">import</span> torch<span class="token punctuation">.</span>optim <span class="token keyword">as</span> optim

<span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>pool <span class="token operator">=</span> nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>conv2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc3 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>pool<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>pool<span class="token punctuation">(</span>F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> x<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc1<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fc2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc3<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x

net <span class="token operator">=</span> Net<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>net<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
2. 初始化优化器
<pre class="line-numbers language-python" data-language="python"><code class="language-python">optimizer <span class="token operator">=</span> optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>net<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">,</span> momentum<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
3. 保存checkpoint
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Additional information</span>
EPOCH <span class="token operator">=</span> <span class="token number">5</span>
PATH <span class="token operator">=</span> <span class="token string">"model.pt"</span>
LOSS <span class="token operator">=</span> <span class="token number">0.4</span>

torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            <span class="token string">'epoch'</span><span class="token punctuation">:</span> EPOCH<span class="token punctuation">,</span>
            <span class="token string">'model_state_dict'</span><span class="token punctuation">:</span> net<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">'optimizer_state_dict'</span><span class="token punctuation">:</span> optimizer<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">'loss'</span><span class="token punctuation">:</span> LOSS<span class="token punctuation">,</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> PATH<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
4. 加载checkpoint
<pre class="line-numbers language-python" data-language="python"><code class="language-python">model <span class="token operator">=</span> Net<span class="token punctuation">(</span><span class="token punctuation">)</span>
optimizer <span class="token operator">=</span> optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>net<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">,</span> momentum<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">)</span>

checkpoint <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span>PATH<span class="token punctuation">)</span>
model<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>checkpoint<span class="token punctuation">[</span><span class="token string">'model_state_dict'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
optimizer<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>checkpoint<span class="token punctuation">[</span><span class="token string">'optimizer_state_dict'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
epoch <span class="token operator">=</span> checkpoint<span class="token punctuation">[</span><span class="token string">'epoch'</span><span class="token punctuation">]</span>
loss <span class="token operator">=</span> checkpoint<span class="token punctuation">[</span><span class="token string">'loss'</span><span class="token punctuation">]</span>

model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># - or -</span>
model<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Saving and loading a general checkpoint in PyTorch — PyTorch Tutorials 1.13.1+cu117 documentation](https://pytorch.org/tutorials/recipes/recipes/saving_and_loading_a_general_checkpoint.html)
</br>
23.将损失和张量加载到gpu中：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">tree_loss <span class="token operator">=</span> TreeEnergyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>
preds <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span>
low_feats <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span>
high_feats <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span>
unlabeled_ROIs <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Moving tensor to cuda - PyTorch Forums](https://discuss.pytorch.org/t/moving-tensor-to-cuda/39318)
</br>
24.报错`AttributeError: module 'distutils' has no attribute 'version'`。
问题：setuptools新版本中移除了某些属性
解决方案：对setuptools进行降级
<pre class="line-numbers language-python" data-language="python"><code class="language-python">pip install setuptools<span class="token operator">==</span><span class="token number">59.5</span><span class="token number">.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [AttributeError: module 'distutils' has no attribute 'version' : with setuptools 59.6.0 · Issue #69894 · pytorch/pytorch · GitHub](https://github.com/pytorch/pytorch/issues/69894)
</br>
25.报错`Default process group has not been initialized, please make sure to call init_process_group`。
问题：网络中包含了`SyncBatchNorm`操作，该操作必须在两张卡上进行。
解决方案：将`SyncBatchNorm`改为`BatchNorm2d`。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/facebookresearch/detectron2/issues/3972">RuntimeError: Default process group has not been initialized, please make sure to call init_process_group. · Issue #3972 · facebookresearch/detectron2 · GitHub</a></li>
</ol>
</blockquote>
</br>
26.报错`Assertion 't>=0' && 't<n_classes' failed error`。
问题：通过以下方式初始化张量会导致出现`<0`的概率值，无法计算损失
<pre class="line-numbers language-python" data-language="python"><code class="language-python">images <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span>
masks <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span>
image<span class="token punctuation">,</span> mask <span class="token operator">=</span> images<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> masks<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
outputs <span class="token operator">=</span> model<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
loss <span class="token operator">=</span> seg_loss<span class="token punctuation">(</span><span class="token punctuation">[</span>outputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> outputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mask<span class="token punctuation">)</span>
optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>
loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>
optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
解决方案：将`torch.randn()`改为`torch.ones()`。
<pre class="line-numbers language-python" data-language="python"><code class="language-python">images <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span>
masks <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Assertion `t >= 0 && t < n_classes` failed error - vision - PyTorch Forums](https://discuss.pytorch.org/t/assertion-t-0-t-n-classes-failed-error/133794)
</br>
27.报错`TracerWarning: Encountering a list at the output of the tracer might cause the trace to be incorrect, this is only valid if the container structure does not change based on the module's inputs. Consider using a constant container instead (e.g. for `list`, use a `tuple` instead. for `dict`, use a `NamedTuple` instead). If you absolutely need this and know the side effects, pass strict=False to trace() to allow this behavior.`
问题：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/70706389/pytorch-tensorboard-add-graph-dictionary-input-error">PyTorch TensorBoard add_graph() dictionary input error</a></li>
</ol>
</blockquote>
</br>
28.张量(tensor)所在设备和加载到cpu/gpu：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span> a <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">>></span> a<span class="token punctuation">.</span>device
device<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'cpu'</span><span class="token punctuation">)</span>
<span class="token operator">>></span> a <span class="token operator">=</span> a<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">>></span> a<span class="token punctuation">.</span>device
device<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'cuda'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token operator">>></span> a <span class="token operator">=</span> a<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">>></span> a<span class="token punctuation">.</span>device
device<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">'cpu'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</br>
29.处理图片时报错`ValueError: the input array must have size along channel_axis, got (267, 400)`。
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230421182748.png)
<p>问题：在使用Skimage处理单通道图片时进行了多余的转换：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">MASK <span class="token operator">=</span> color<span class="token punctuation">.</span>rgb2gray<span class="token punctuation">(</span>MASK<span class="token punctuation">)</span>  <span class="token comment"># shape of [h, w]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>解决方案：将上述代码改为，</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>MASK<span class="token punctuation">.</span>shape<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 
	MASK <span class="token operator">=</span> color<span class="token punctuation">.</span>rgb2gray<span class="token punctuation">(</span>MASK<span class="token punctuation">)</span>  <span class="token comment"># shape of [h, w]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/BarCodeReader/SelfReformer/issues/2">/data/<strong>init</strong>.py 54 MASK = color.rgb2gray(MASK) · Issue #2 · BarCodeReader/SelfReformer · GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/70895576/skimage-rgb2gray-giving-errors-the-input-array-must-have-size-3-along">python - Skimage rgb2gray giving errors, the input array must have size 3 along - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
20.在`test.py`中设置GPU编号无效，仍使用GPU0
<pre class="line-numbers language-python" data-language="python"><code class="language-python">GPU_ID<span class="token operator">=</span><span class="token number">1</span>
os<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'CUDA_VISIBLE_DEVICES'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>GPU_ID<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
原因：在导入`kornia`时出现了问题
解决方案：将上述代码放在`test.py`最前面
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/pytorch/pytorch/issues/80876">[1.12] os.environ[“CUDA_VISIBLE_DEVICES”] has no effect · Issue #80876 · pytorch/pytorch · GitHub</a></li>
<li><a href="https://github.com/kornia/kornia/issues/1951"><code>import kornia</code> break CUDA lazy init · Issue #1951 · kornia/kornia · GitHub</a></li>
</ol>
</blockquote>
</br>
21.报错`tensorflow.python.framework.errors_impl.PermissionDeniedError:`
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/41606854/tensorflow-permission-denied-error-location">python - TensorFlow Permission Denied Error /Location - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
22.在`bgnet.py`中导入上一层目录中其它文件夹中的包：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'../utils'</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> show_info <span class="token keyword">import</span> <span class="token operator">*</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
目录结构如下：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span>bgnet
\<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>bgnet<span class="token punctuation">.</span>py
<span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span>utils
\<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>show_info<span class="token punctuation">.</span>py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</br>
报错`"conda\activate.py", line 1210, in main print(activator.execute(), end='') UnicodeEncodeError: 'gbk' codec can't encode charact`
问题：git bash作为终端时Python编码格式未设置为`utf-8`
解决方案：在`.bashrc/.zshrc/.bash_path`中添加环境变量：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">PYTHONIOENCODING</span><span class="token operator">=</span>utf-8
<span class="token builtin class-name">export</span> <span class="token assign-left variable">PYTHONLEGACYWINDOWSSTDIO</span><span class="token operator">=</span>utf-8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [python 3.x - Conda: UnicodeEncodeError: 'charmap' codec can't encode character '\u2580' in position 644: character maps to undefined - Stack Overflow](https://stackoverflow.com/questions/59974715/conda-unicodeencodeerror-charmap-codec-cant-encode-character-u2580-in-po)
> 2. [Can not activate/deactivate conda environment due to cmder lambda character not handled in conda encoder/decoder · Issue #7445 · conda/conda · GitHub](https://github.com/conda/conda/issues/7445)
</br>
23.关闭`nvidia-smi`命令中运行在指定显卡上的进程：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'python'</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">19398</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123; print $5 &#125;'</span> <span class="token operator">|</span> <span class="token function">xargs</span> -n1 <span class="token function">kill</span> -9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [python - How to kill process on GPUs with PID in nvidia-smi using keyword? - Stack Overflow](https://stackoverflow.com/questions/50193538/how-to-kill-process-on-gpus-with-pid-in-nvidia-smi-using-keyword)
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Racket中知识点01</title>
    <url>/2022/12/07/Racket%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录Racket中相关的知识点：</p>
<span id="more"></span>
<p>1.运行<code>.rkt</code>文件并进入racket REPL终端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">racket --repl --<span class="built_in">eval</span> <span class="string">&#x27;(enter! (file &quot;d:/Desktop/DataStructure/YetAnotherSchemeTutorial/3.function.rkt&quot;))&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>Racket</tag>
      </tags>
  </entry>
  <entry>
    <title>Pytorch中知识点02</title>
    <url>/2022/06/03/Pytorch%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B902/</url>
    <content><![CDATA[<p>本文记录一下在实现 <a href="https://link.springer.com/article/10.1007/s11042-016-3392-4">DDRQM</a> 过程中的一些 Pytorch 框架和 python 相关知识点。</p>
<span id="more"></span>
<p>1.<code>torch.utils.data.Dataset</code>：一个表示数据集的抽象类。</p>
<p>其完整形式为：<code>CLASS torch.utils.data.Dataset(*args, **kwds)</code>。</p>
<p>所有表示从<code>keys</code>到<code>data samples</code>的映射的数据集都应该是该抽象类的子集。它的所有子类都应该重写<code>__getitem__()</code>方法，从而支持通过<code>key</code>获取<code>data sample</code>；其子类可以选择重写<code>__len__()</code>方法，该方法返回许多通过<code>Sampler</code>实现或<code>Dataloader</code>默认实现的数据集尺寸。a</p>
<p>PS：<code>Dataloader</code>默认构造一个生成整数索引的<code>index sampler</code>，要想其对一个具有非整数的<code>indices/keys</code>的 map-style 的数据集生效，需要提供定制化的<code>sampler</code>。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/docs/stable/data.html">torch.utils.data</a></li>
<li><a href="https://pytorch-cn.readthedocs.io/zh/latest/package_references/data/">torch.utils.data 中文文档</a></li>
</ol>
</br>
<p>2.Creating a Custom Dataset for your files：给自己的文件创建一个定制化的数据集。</p>
<p>一个定制化的数据集必须实现三种函数：<code>__init__</code>、<code>__len__</code>和<code>__getitem__</code>。看一下经典的 FashionMNIST 数据集的实现，我们可以发现图像存储在<code>img_dir</code>目录中，labels 存储在一个 CSV 文件<code>annotation_file</code>中。下面我们看一下在每个函数中发生了什么：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> torchvision.io <span class="keyword">import</span> read_image</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomImageDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, annotations_file, img_dir, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span><br><span class="line">        self.img_labels = pd.read_csv(annotations_file)</span><br><span class="line">        self.img_dir = img_dir</span><br><span class="line">        self.transform = transform</span><br><span class="line">        self.target_transform = target_transform</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.img_labels)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, <span class="number">0</span>])</span><br><span class="line">        image = read_image(img_path)</span><br><span class="line">        label = self.img_labels.iloc[idx, <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> self.transform:</span><br><span class="line">            image = self.transform(image)</span><br><span class="line">        <span class="keyword">if</span> self.target_transform:</span><br><span class="line">            label = self.target_transform(label)</span><br><span class="line">        <span class="keyword">return</span> image, label</span><br></pre></td></tr></table></figure>
<ul>
<li><code>__init__</code>：该函数在实例化数据集对象的时候运行一次，该函数初始化包含图像数据的目录，注释文件和 transforms。<code>labels.csv</code>文件格式如下图所示：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">tshirt1<span class="selector-class">.jpg</span>, <span class="number">0</span></span><br><span class="line">tshirt2<span class="selector-class">.jpg</span>, <span class="number">0</span></span><br><span class="line">......</span><br><span class="line">ankleboot999<span class="selector-class">.jpg</span>, <span class="number">9</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>__len__</code>：该函数返回数据集中的样本数目- <code>__getitem__</code>：该函数加载和返回在给定索引<code>idx</code>处的一个样本。基于索引，该函数定位在磁盘中图像的位置，通过<code>read_image</code>将其转换为一个<code>tensor</code>，从<code>self.img_labels</code>的 csv 数据中取到对应的 label，如果需要的话在它们身上应用 transform 函数，最后以元组的形式返回 tensor 图像和对应的 label。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pytorch.org/tutorials/beginner/basics/data_tutorial.html">Datasets &amp; Dataloaders</a></li>
<li><a href="https://stackoverflow.com/questions/43627405/understanding-getitem-method">Understanding <code>__getitem__</code> method</a></li>
</ol>
</blockquote>
</br>
<p>3.<code>argparse</code>：Parser for command-line options, arguments and sub-command.</p>
<p>其源码位于<a href="https://github.com/python/cpython/tree/3.10/Lib/argparse.py"><code>Lib/argparse.py</code></a>。下面是该 API 的参考信息，<code>argparse</code>模块使得写用户友好的命令行界面变得很容易，该程序定义了它要求的 arguments，<code>argparse</code>将推算出如何从<code>sys.argv</code>中解析出这些 arguments。当用户给出对程序来说无效的 arguments 时<code>argparse</code>模块也就自动生成帮助信息和错误信息。下面通过例子来说明：</p>
<blockquote>
<p>在编程中，arguments 是指在程序、子线程或函数之间传递的值，是包含数据或者代码的独立的 items (表示一个数据单元) 或者 variables。当一个 argument 被用来为一个用户定制化一个程序时，它通常也被称为参数。在 C 语言中，当程序运行时，argc (ARGumentC) 为默认变量，表示被加入到命令行的参数的数量（argument count）。</p>
</blockquote>
<p>下面的代码是一个将一系列整数作为输入的程序，并得到它们的和或者最大值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Process some integers.&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;integers&#x27;</span>, metavar=<span class="string">&#x27;N&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, nargs=<span class="string">&#x27;+&#x27;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;an integer for the accumulator&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--sum&#x27;</span>, dest=<span class="string">&#x27;accumulate&#x27;</span>, action=<span class="string">&#x27;store_const&#x27;</span>,</span><br><span class="line">                    const=<span class="built_in">sum</span>, default=<span class="built_in">max</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;sum the integers (default: find the max)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="built_in">print</span>(args.accumulate(args.integers))</span><br></pre></td></tr></table></figure>
<p>假设上述代码存入<code>prog.py</code>文件。它能够在命令行运行并提供有用的帮助信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python prog.py -h</span><br><span class="line">usage: prog.py [-h] [--<span class="built_in">sum</span>] N [N ...]</span><br><span class="line"></span><br><span class="line">Process some integers.</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line"> N           an <span class="built_in">integer</span> <span class="keyword">for</span> the accumulator</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line"> -h, --<span class="built_in">help</span>  show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line"> --<span class="built_in">sum</span>       <span class="built_in">sum</span> the integers (default: find the max)</span><br></pre></td></tr></table></figure>
<p>当从命令行给出有效的 arguments 时，会打印出这些整数的和或者最大值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python prog.py 1 2 3 4</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">$ python prog.py 1 2 3 4 --<span class="built_in">sum</span></span><br><span class="line">10</span><br></pre></td></tr></table></figure>
<p>当传入无效的 arguments 时，会生成一个 error：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python prog.py a b c</span><br><span class="line">usage: prog.py [-h] [--<span class="built_in">sum</span>] N [N ...]</span><br><span class="line">prog.py: error: argument N: invalid int value: <span class="string">&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>
<p>下面对这个例子做详细说明：</p>
<ol>
<li>
<p>Creating a parser：第一步使用<code>argparse</code>模块创建一个<code>ArgumentParser</code>对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Process some integers.&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>该<code>ArgumentParser</code>对象包含将命令行解析为 Python data types 的所有必要的信息。</p>
</li>
<li>
<p>Adding arguments：通过调用<code>add_argument()</code>方法向<code>ArgumentParser</code>对象填入和程序 arguments 有关的信息。通常来说，这些调用告诉<code>ArgumentParser</code>如何取得命令行中的字符串并将其转化为对象。这些信息被存储起来并可以通过调用<code>parse_args()</code>来使用，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Process some integers.&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;integers&#x27;</span>, metavar=<span class="string">&#x27;N&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, nargs=<span class="string">&#x27;+&#x27;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;an integer for the accumulator&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--sum&#x27;</span>, dest=<span class="string">&#x27;accumulate&#x27;</span>, action=<span class="string">&#x27;store_const&#x27;</span>,</span><br><span class="line">                    const=<span class="built_in">sum</span>, default=<span class="built_in">max</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;sum the integers (default: find the max)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br></pre></td></tr></table></figure>
<p>调用<code>parse_args()</code>将会返回一个具有两个 attributes ——<code>integers</code>和<code>accumulate</code>的对象，<code>integers</code>属性是一个或多个整数值的列表；<code>accumulate</code>是<code>sum()</code>或<code>max()</code>函数。</p>
</li>
<li>
<p>Parsing arguments：<code>ArgumentParser</code>通过<code>parse_args()</code>解析 arguments。其过程中会监测命令行，并将每个 argument 转换为合适的 type，然后采取合适的 action。在大多数情况下，这意味着将从命令行解析的 attributes 中创建一个简单的 <code>Namespace</code> 对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>parser.parse_args([<span class="string">&#x27;--sum&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;-1&#x27;</span>, <span class="string">&#x27;42&#x27;</span>])</span><br><span class="line">Namespace(accumulate=&lt;built-<span class="keyword">in</span> function <span class="built_in">sum</span>&gt;, integers=[<span class="number">7</span>, -<span class="number">1</span>, <span class="number">42</span>])</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>更详细的内容可见：<a href="https://docs.python.org/3/howto/argparse.html">Argparse Tutorial</a></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.python.org/3/library/argparse.html">argparse</a></li>
<li><a href="https://docs.python.org/3/howto/argparse.html">Argparse Tutorial</a></li>
</ol>
</blockquote>
</br>
<p>4.Reading and Writing Files：读取和写入文件</p>
<p><code>open()</code>返回一个文件对象（file object），该函数通常通过两个 positional arguments 和 一个 keyword argument 进行调用：<code>open(filename, mode, encoding=None)</code>。如下图所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;workfile&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li>第一个参数表示文件名；</li>
<li>第二个参数表示打开文件的模式，<code>r</code>表示文件只读，<code>w</code>表示文件只写（已存在的同名文件中数据将被擦除），<code>a</code>表示在文件内容之后<code>appending</code>，写入文件中的数据将被添加到文件最后，<code>r+</code>表示文件可同时读和写，模式参数是可选的，默认为<code>r</code></li>
<li>第三个参数表示文件的编码格式，正常情况下文件以<code>text</code>模式打开，从该文件中读取和写入字符串。当编码格式没有被指定时，默认编码格式是 <code>platform dependent</code>，由于 UTF-8 是现行的标准，建议使用该格式。在<code>text</code>模式，在读取文件时会将 <code>platform-specific line endings</code> 转换为<code>\n</code>，在写入文件时则反之。</li>
</ul>
<p>当处理文件对象时建议使用<code>with</code>关键字，其优点在于在操作完成后文件能被合适地关闭，即使异常发生。其也比等价的<code>try-finally</code>块更短：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;workfile&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    read_data = f.read()</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># We can check that the file has been automatically closed.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.closed</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files">Reading and Writing Files</a></li>
</ol>
</blockquote>
</br>
<p>5.<code>threading.Thread</code>：多线程。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/python/python-multithreading.html">Python 多线程</a></li>
</ol>
</blockquote>
</br>
<p>6.<code>multiprocessing.Process</code>：多进程。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://developer.51cto.com/article/632081.html">想要利用CPU多核资源一Python中多进程（一）</a></li>
<li><a href="https://www.liujiangblog.com/course/python/82">多进程multiprocess</a></li>
</ol>
</blockquote>
<p>7.在python文件中包含<code>from PIL import PILLOW_VERSION</code>代码时，可能会出现如下报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ImportError: cannot <span class="keyword">import</span> name <span class="string">&#x27;PILLOW_VERSION&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;PIL&#x27;</span> (/storage/FT/anaconda3/envs/<span class="built_in">open</span>-mmlab/lib/python3<span class="number">.7</span>/site-packages/PIL/__init__.py)</span><br></pre></td></tr></table></figure>
<p>其原因在于在较新的pillow版本中<code>PILLOW_VERSION</code>已被去除，可以代替使用<code>__version__</code>或者安装较老的pillow版本<code>pip install Pillow==6.1</code>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/python-pillow/Pillow/issues/4130">ImportError: cannot import name ‘PILLOW_VERSION’ from ‘PIL’</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/7.0.0.html#pillow-version-constant">PILLOW_VERSION constant</a></li>
</ol>
</blockquote>
</br>
<p>8.Python中的Logging包，在SCWSSOD中的用法示例为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging <span class="keyword">as</span> logger</span><br><span class="line">logger.basicConfig(level=logger.INFO, <span class="built_in">format</span>=<span class="string">&#x27;%(levelname)s %(asctime)s %(filename)s: %(lineno)d] %(message)s&#x27;</span>, datefmt=<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, \</span><br><span class="line">                           filename=<span class="string">&quot;train_%s.log&quot;</span>%(TAG), filemode=<span class="string">&quot;w&quot;</span>)</span><br><span class="line">...</span><br><span class="line">logger.info(msg)</span><br></pre></td></tr></table></figure>
<p>该模块定义了一系列的函数和类，为applications和libraries实现了一个灵活的event logging system。由一个标准的库模块提供logging API的关键好处在于，所有的Python模块都能加入logging，所以application log可以包含自己的信息以及整合来自第三方模块的信息。简单示例为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> logging</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>logging.warning(<span class="string">&#x27;Watch Out!&#x27;</span>)</span><br><span class="line">WARNING:root:Watch Out!</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.python.org/3/library/logging.html">Logging facility for Python</a></li>
<li><a href="https://docs.python.org/3/howto/logging.html#logging-basic-tutorial">Logging HOWTo</a></li>
</ol>
</blockquote>
</br>
<p>9.在Pytorch中register意味着什么？</p>
<p>在pytorch文档和方法名中register意味着“在一个官方的列表中记录一个名字或者信息的行为”。</p>
<p>例如，<code>register_backward_hook(hook)</code>将函数<code>hook</code>添加到一个其他函数的列表中，<code>nn.Module</code>会在<code>forward</code>过程中执行这些函数。</p>
<p>与之相似，<code>register_parameter(name, param)</code>添加一个<code>nn.Parameter</code>类型的名为<code>name</code>的参数<code>param</code>到<code>nn.Module</code>的可训练参数的列表之中。register可训练参数很关键，这样pytorch才会知道那些tensors传送给优化器，那些tensors作为<code>nn.Module</code>的state_dict存储。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/68463009/what-do-we-mean-by-register-in-pytorch">What do we mean by ‘register’ in PyTorch?</a></li>
</ol>
</blockquote>
<p>10.Pytorch、CUDA版本与显卡驱动版本对应关系：</p>
<ul>
<li>
<p>CUDA驱动和CUDAToolkit对应版本</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220717110226488.png" alt="image-20220717110226488" /></p>
</li>
<li>
<p>Pytorch和cudatoolkit版本</p>
<table>
<thead>
<tr>
<th>cuda和pytorch版本</th>
<th>安装命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>cuda==10.1 pytorch=1.7.1</td>
<td><code>conda install pytorch==1.7.1 torchvision==0.8.2 torchaudio==0.7.2 cudatoolkit=10.1 -c pytorch</code></td>
</tr>
<tr>
<td>cuda==10.1 pytorch=1.7.0</td>
<td><code>conda install pytorch==1.7.0 torchvision==0.8.0 torchaudio==0.7.0 cudatoolkit=10.1 -c pytorch</code></td>
</tr>
<tr>
<td>cuda==10.1 pytorch=1.6.0</td>
<td><code>conda install pytorch==1.6.0 torchvision==0.7.0 cudatoolkit=10.1 -c pytorch</code></td>
</tr>
<tr>
<td>cuda==10.1 pytorch=1.5.1</td>
<td><code>conda install pytorch==1.5.1 torchvision==0.6.1 cudatoolkit=10.1 -c pytorch</code></td>
</tr>
<tr>
<td>cuda==10.1 pytorch=1.5.0</td>
<td><code>conda install pytorch==1.5.0 torchvision==0.6.0 cudatoolkit=10.1 -c pytorch</code></td>
</tr>
<tr>
<td>cuda==10.1 pytorch=1.4.0</td>
<td><code>conda install pytorch==1.4.0 torchvision==0.5.0 cudatoolkit=10.1 -c pytorch</code></td>
</tr>
</tbody>
</table>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/Wanggcong/p/12625540.html">pytorch版本，cuda版本，系统cuda版本查询和对应关系</a></li>
<li><a href="https://pytorch.org/get-started/previous-versions/">INSTALLING PREVIOUS VERSIONS OF PYTORCH</a></li>
<li><a href="https://docs.nvidia.com/deploy/cuda-compatibility/index.html">CUDA Compatibility</a></li>
</ol>
</blockquote>
</br>
<p>11.以如下目录组织文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/model</span><br><span class="line">|_ vgg.py</span><br><span class="line">|_ vgg_models.py</span><br><span class="line">test.py</span><br></pre></td></tr></table></figure>
<p>如果<code>test.py</code>文件中包含对<code>vgg_models.py</code>的依赖：<code>from model.vgg_models import Back_VGG</code></p>
<p>同时，<code>vgg_models.py</code>又包含对<code>vgg.py</code>的依赖：<code>from vgg import B2_VGG</code>。</p>
<p>运行<code>python test.py</code>可能会出现如下报错：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220719095058661.png" alt="image-20220719095058661" /></p>
<p>这是由于运行<code>test.py</code>时将当前目录<code>./</code>作为导入包时的本地查找路径，<code>vgg_models.py</code>在导入包时只会在<code>./</code>中查找，而不会在<code>./model/</code>中查找，导致找不到包。此时可以通过在<code>test.py</code>开头添加如下代码把<code>./model/</code>添加为查找路径来解决该问题：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>, <span class="string">&#x27;./model&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>也可以插入绝对路径：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>, <span class="string">&#x27;/storage/FT/SCWSSOD/SCWSSOD31&#x27;</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/23417941/import-error-no-module-named-does-exist">import error: ‘No module named’ <em>does</em> exist</a></li>
</ol>
</blockquote>
</br>
<p>12.使用<code>cv2.imwrite</code>写入文件时，可能会出现如下问题：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220719095819493.png" alt="image-20220719095819493" /></p>
<p>这是由于存入路径<code>save_path+name</code>无文件扩展名，可以通过在<code>name</code>后添加<code>.png</code>扩展名解决。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/9868963/cvimwrite-could-not-find-a-writer-for-the-specified-extension">cv::imwrite could not find a writer for the specified extension</a></li>
</ol>
</blockquote>
</br>
<p>13.当使用如下代码进行权重初始化时：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_initialize_weights</span>(<span class="params">self, pre_train</span>):</span><br><span class="line">        keys = pre_train.keys()</span><br><span class="line">        self.conv1.conv1_1.weight.data.copy_(pre_train[keys[<span class="number">0</span>]])</span><br></pre></td></tr></table></figure>
<p>可能会出现以下报错：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220719100227462.png" alt="image-20220719100227462" /></p>
<p>这是由于在Python2中<code>Class collections.OrderedDict</code>的<code>keys()</code>属性返回的是一个<code>list</code>，而在Python3中其返回一个<code>odict_keys</code>，此时可以通过将<code>odict_keys</code>转换为<code>list</code>解决该问题：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_initialize_weights</span>(<span class="params">self, pre_train</span>):</span><br><span class="line">        keys = <span class="built_in">list</span>(pre_train.keys())</span><br><span class="line">        self.conv1.conv1_1.weight.data.copy_(pre_train[keys[<span class="number">0</span>]])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li>[]‘odict_keys’ object does not support indexing #1](<a href="https://github.com/taehoonlee/tensornets/issues/1">https://github.com/taehoonlee/tensornets/issues/1</a>)</li>
</ol>
</blockquote>
</br>
<p>14.为什么在Pytorch中通常使用<code>PIL</code> (即PILLOW) 包，而不是<code>cv2</code> (即opencv)。有以下几个原因：</p>
<ul>
<li>OpenCV2以BGR的形式加载图片，可能需要包装类在内部将其转换为RGB</li>
<li>会导致在<code>torchvision</code>中的用于transforms的<code>functional</code>的代码重复，因为许多<code>functional</code>使用PIL的操作实现</li>
<li>OpenCV加载图片为<code>np.array</code>，在arrays上做transformations并没有那么容易</li>
<li>PIL和OpenCV对图像不同的表示可能会导致用户很难捕捉到bugs</li>
<li>Pytorch的modelzoo也依赖于RGB格式，它们想要很容易地支持RGB格式</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/61346009/why-is-pil-used-so-often-with-pytorch">Why is PIL used so often with Pytorch?</a></li>
<li><a href="https://github.com/pytorch/vision/pull/34">OpenCV transforms with tests #34</a></li>
<li><a href="https://discuss.pytorch.org/t/i-wonder-why-pytorch-uses-pil-not-the-cv2/19482">I wonder why Pytorch uses PIL not the cv2</a></li>
</ol>
</blockquote>
</br>
<p>15.在加载模型权重进行测试时，可能会出现如下报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Missing keys &amp; unexpected keys <span class="keyword">in</span> state_dict when loading self trained model</span><br></pre></td></tr></table></figure>
<p>其原因可能在于在训练模型时使用了<code>nn.DataParallel</code>，因此存储的模型权重和不使用前者时的权重的keys有所不同。其解决方法为，在创建模型时同样用<code>nn.DataParallel</code>进行包装：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Network</span></span><br><span class="line">self.model = TRACER(args).to(self.device)</span><br><span class="line"><span class="keyword">if</span> args.multi_gpu:</span><br><span class="line">	self.model = nn.DataParallel(self.model).to(self.device)</span><br></pre></td></tr></table></figure>
<p>也可以直接去除<code>.module</code>key：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">check_point = torch.load(<span class="string">&#x27;myfile.pth.tar&#x27;</span>)</span><br><span class="line">check_point.key()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line">new_state_dict = OrderedDict()</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> state_dict.items():</span><br><span class="line">    name = k[<span class="number">7</span>:] <span class="comment"># remove &#x27;module.&#x27; of dataparallel</span></span><br><span class="line">    new_state_dict[name]=v</span><br><span class="line"></span><br><span class="line">model.load_state_dict(new_state_dict)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/missing-keys-unexpected-keys-in-state-dict-when-loading-self-trained-model/22379">Missing keys &amp; unexpected keys in state_dict when loading self trained model</a></li>
<li><a href="https://discuss.pytorch.org/t/solved-keyerror-unexpected-key-module-encoder-embedding-weight-in-state-dict/1686">[solved] KeyError: ‘unexpected key “module.encoder.embedding.weight” in state_dict’</a></li>
</ol>
</blockquote>
</br>
<p>16.tensorboardX vs tensorboard：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://tensorboardx.readthedocs.io/en/latest/tutorial.html">tensorboardX</a></li>
<li><a href="https://pytorch.org/tutorials/intermediate/tensorboard_tutorial.html">VISUALIZING MODELS, DATA, AND TRAINING WITH TENSORBOARD</a></li>
</ol>
</blockquote>
</br>
<p>17.当在<code>train.py</code>文件中指定了<code>os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = '1'</code>时，如果在调用的其他文件如<code>utils.py</code>中使用<code>fx = Variable(torch.from_numpy(fx)).cuda()</code>或<code>fx = torch.FloatTensor(fx).cuda()</code>，其默认gpu设备仍然为0，此时应该在<code>utils.py</code>文件中加上：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.environ[<span class="string">&quot;CUDA_VISIBLE_DEVICES&quot;</span>] = <span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure>
</br>
<p>18.当scipy版本过高时，如1.7.3。在使用如下代码进行图像存储时：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> misc</span><br><span class="line">misc.imsave(save_path + name, pred_edge_kk)</span><br></pre></td></tr></table></figure>
<p>会报如下错误：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220808155219586.png" alt="image-20220808155219586" /></p>
<p>其原因在于在较新的scipy版本中<code>scipy.misc.imsave</code>已经被去除。解决方法为将上述代码改为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line">imageio.imwrite(save_path + name, pred_edge_kk)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<p><a href="https://stackoverflow.com/questions/19991665/my-scipy-misc-module-appears-to-be-missing-imsave">My scipy.misc module appears to be missing imsave</a></p>
</blockquote>
</br>
<p>19.Variable deprecated</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://discuss.pytorch.org/t/variable-deprecated-how-to-change-the-code/103596">Variable deprecated- how to change the code</a></li>
</ol>
</blockquote>
</br>
<p>20.tensor和numpy之间的转换：(张量转换)</p>
<ul>
<li>numpy to tensor:</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 </span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">mask = cv2.imread(<span class="string">&#x27;./mask.png&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">mask = torch.from_numpy(mask)</span><br></pre></td></tr></table></figure>
<ul>
<li>tensor to numpy:</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch </span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="comment"># this is just my embedding matrix which is a Torch tensor object</span></span><br><span class="line">embedding = learn.model.u_weight</span><br><span class="line"></span><br><span class="line">embedding_list = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>, <span class="number">64382</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.cuda.LongTensor(embedding_list)</span><br><span class="line">tensor_array = embedding(<span class="built_in">input</span>)</span><br><span class="line"><span class="comment"># the output of the line below is a numpy array</span></span><br><span class="line">tensor_array.cpu().detach().numpy()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/64358283/runtimeerror-can-only-calculate-the-mean-of-floating-types-got-byte-instead-f">RuntimeError: Can only calculate the mean of floating types. Got Byte instead. for mean += images_data.mean(2).sum(0)</a></li>
<li><a href="https://stackoverflow.com/questions/49768306/pytorch-tensor-to-numpy-array">Pytorch tensor to numpy array</a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.from_numpy.html">TORCH.FROM_NUMPY</a></li>
</ol>
</blockquote>
</br>
<p>21.pytorch中的L1/L2 regularization。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/65998695/how-to-add-a-l1-or-l2-regularization-to-weights-in-pytorch">How to add a L1 or L2 regularization to weights in pytorch</a></li>
<li><a href="https://stackoverflow.com/questions/42704283/l1-l2-regularization-in-pytorch">L1/L2 regularization in PyTorch</a></li>
</ol>
</blockquote>
</br>
<p>22.pytorch报错“CUDA out of memory”，如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220907150639.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/59129812/how-to-avoid-cuda-out-of-memory-in-pytorch">How to avoid “CUDA out of memory” in PyTorch</a></li>
<li><a href="https://www.kaggle.com/getting-started/140636">Solving “CUDA out of memory” Error</a></li>
<li><a href="https://github.com/pytorch/pytorch/issues/16417">RuntimeError: CUDA out of memory. Tried to allocate 12.50 MiB (GPU 0; 10.92 GiB total capacity; 8.57 MiB already allocated; 9.28 GiB free; 4.68 MiB cached)</a></li>
<li><a href="https://pytorch.org/docs/stable/notes/faq.html">FREQUENTLY ASKED QUESTIONS</a></li>
<li><a href="https://discuss.pytorch.org/t/how-to-allocate-more-gpu-memory-to-be-reserved-by-pytorch-to-avoid-runtimeerror-cuda-out-of-memory/149037">How to allocate more GPU memory to be reserved by PyTorch to avoid “RuntimeError: CUDA out of memory”?</a></li>
<li>How does “reserved in total by PyTorch” work?[<a href="https://discuss.pytorch.org/t/how-does-reserved-in-total-by-pytorch-work/70172">https://discuss.pytorch.org/t/how-does-reserved-in-total-by-pytorch-work/70172</a>]</li>
<li><a href="https://www.zhihu.com/question/67726969">pytorch如何使用多块gpu?</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/86441879">pytorch多gpu并行训练</a></li>
</ol>
</blockquote>
</br>
23.在定义模型时，我们通常使用如下框架的代码：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Model</span>(nn.Module):</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, config</span>):</span><br><span class="line">		self(Model, self).__init__()</span><br><span class="line">		self.config = config</span><br><span class="line">		self.layers = ...</span><br><span class="line"></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">		out = self.layers(x)</span><br><span class="line">		<span class="keyword">return</span> out</span><br></pre></td></tr></table></figure>
在训练或者测试模型时，我们则使用如下的代码：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">net = Model(config)</span><br><span class="line">net.train(true)</span><br><span class="line">net.cuda()</span><br><span class="line">out = net(image)</span><br></pre></td></tr></table></figure>
上述代码中`net(image)`是`net.__call__(image)`的简写形式，那么上述`Model`中定义的`forward`在哪被调用呢？实际上，`__call__`已经在`nn.Module`中定义，将会register all hooks 并且调用`forward`，因此我们不需要调用`model.forward(image)`而只需要调用`model(image)`。
可以参考下面参考资料4对python hook有一个迅速的了解。
> 参考资料：
> 1. [Is model.forward(x) the same as model.\__call\__(x)?](https://discuss.pytorch.org/t/is-model-forward-x-the-same-as-model-call-x/33460)
> 2. [PyTorch module__call__() vs forward()](https://stephencowchau.medium.com/pytorch-module-call-vs-forward-c4df3ff304b1)
> 3. [5 分钟掌握 Python 中的 Hook 钩子函数](https://cloud.tencent.com/developer/article/1761121)
> 4. [python hook 机制](https://zhuanlan.zhihu.com/p/275643739)
</br>
24.出现`RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor`，如下图所示：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220914162425.png)
其原因为model和data分处于GPU和CPU，如果模型在GPU中 (`model.to(device)`)，此时需要添加如下代码将data也加载进GPU：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">inputs, labels = data                         <span class="comment"># this is what you had</span></span><br><span class="line">inputs, labels = inputs.cuda(), labels.cuda() <span class="comment"># add this line</span></span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same](https://stackoverflow.com/questions/59013109/runtimeerror-input-type-torch-floattensor-and-weight-type-torch-cuda-floatte)
> 2. [Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor](https://discuss.pytorch.org/t/input-type-torch-floattensor-and-weight-type-torch-cuda-floattensor-should-be-the-same-or-input-should-be-a-mkldnn-tensor-and-weight-is-a-dense-tensor/152430)
</br>
25.出现报错`AttributeError: module 'distutils' has no attribute 'version' : with setuptools 59.6.0`。
解决方案：`pip install setuptools==59.5.0`，安装较老的setuptools版本
> 参考资料：
> 1. [AttributeError: module 'distutils' has no attribute 'version' : with setuptools 59.6.0 #69894](https://github.com/pytorch/pytorch/issues/69894)
</br>
<p>26.numpy array与torch tensor之间的转换：</p>
<ul>
<li>numpy array to torch tensor</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np_array = np.array(data)</span><br><span class="line">x_np = torch.from_numpy(np_array)</span><br></pre></td></tr></table></figure>
<ul>
<li>torch tensor to numpy</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">na = a.to(<span class="string">&#x27;cpu&#x27;</span>).numpy()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/49768306/pytorch-tensor-to-numpy-array">Pytorch tensor to numpy array</a></li>
</ol>
</blockquote>
</br>
27.查看numpy数组的各属性信息：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">numpy_attr</span>(<span class="params">image</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;type: &quot;</span>, <span class="built_in">type</span>(image))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;dtype: &quot;</span>, image.dtype)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;size: &quot;</span>, image.size)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;shape: &quot;</span>, image.shape)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;dims: &quot;</span>, image.ndim)</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [numpy库数组属性查看：类型、尺寸、形状、维度](https://blog.csdn.net/weixin_41770169/article/details/80565326)
</br>
28.出现如下报错：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220930172422.png)
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220930172447.png" alt="" /><br />
其原因为数据集中读取的数据超出范围，例如对于n类label的数据，其值应该<code>t&gt;=0 &amp;&amp; t&lt;n</code>。本人遇到这种报错的原因为mask数据未做转换：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mask[mask == <span class="number">0.</span>] = <span class="number">255.</span></span><br><span class="line">mask[mask == <span class="number">2.</span>] = <span class="number">0.</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/pytorch/pytorch/issues/1204">RuntimeError: cuda runtime error (59) : device-side assert triggered when running transfer_learning_tutorial #1204</a></li>
</ol>
</blockquote>
</br>
29.出现报错：`Boolean value of Tensor with more than one value is ambiguous in PyTorch`。
original code:
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">loss = CrossEntropyLoss(y_pred, y_true)</span><br></pre></td></tr></table></figure>
应该改为：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化损失</span></span><br><span class="line">L = CrossEntropyLoss()</span><br><span class="line"><span class="comment"># 计算损失</span></span><br><span class="line">L(y_pred, y_true)</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [Bool value of Tensor with more than one value is ambiguous in Pytorch](https://stackoverflow.com/questions/52946920/bool-value-of-tensor-with-more-than-one-value-is-ambiguous-in-pytorch)
</br>
30.交叉熵为负数：
original code:
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">losse = torch.nn.BCELoss()</span><br><span class="line">losse = losse(edge_map, edge)</span><br></pre></td></tr></table></figure>
原因：`edge`未归一化或者`edge_map`未归一化
应改为：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">edge = edge / <span class="number">255.0</span></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">edge_amp = F.softmax(out1, dim=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [解决pytorch 交叉熵损失输出为负数的问题](https://cloud.tencent.com/developer/article/1725343)
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>UML教程</title>
    <url>/2022/08/15/UML%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>本文记录一下UML类图的相关概念和使用技巧：</p>
<span id="more"></span>
<blockquote>
<p>参考资料</p>
<ol>
<li><a href="https://programmer.group/uml-class-diagram-relationship-and-its-corresponding-code.html">UML class diagram relationship and its corresponding code</a></li>
<li><a href="https://segmentfault.com/a/1190000039232402">UML类图简明教程</a></li>
<li><a href="https://www.w3cschool.cn/uml_tutorial/">UML 教程</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu常见操作01</title>
    <url>/2022/05/15/Ubuntu%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C01/</url>
    <content><![CDATA[<p>本文记录一下使用Ubuntu操作系统时的常见操作：</p>
<span id="more"></span>
<p>1.<code>echo $PATH | tr &quot;:&quot; &quot;\n&quot;</code>：在<code>bash</code>终端中分行展示环境变量。</p>
<blockquote>
<p>参考资料：<a href="https://stackoverflow.com/questions/33469374/how-to-split-the-contents-of-path-into-distinct-lines">How to split the contents of $PATH into distinct lines</a></p>
</blockquote>
</br>
<p>2.<code>httping -x localhost:1080 -g http://google.com -c 3</code>：在Ubuntu终端中测试通过代理是否能访问<code>google.com</code>。之所以使用<code>httping</code>是因为<code>ping</code>无法通过代理访问。具体步骤如下：</p>
<ul>
<li>1）通过<code>sudo apt install httping</code>安装工具<code>httping</code>。</li>
<li>2）（在代理开启的情况下）运行上述命令。<code>-x</code>表示代理服务器地址；<code>localhost:1080</code>表示代理服务器为本机，监听<code>1080</code>端口；<code>-g</code>表示对其发送请求的URL，本例中为<code>http://google.com</code>；<code>-c</code>表示在结束请求前代理服务器会向目标URL发送多少 probe，此处为3。</li>
</ul>
<p>运行结果如下：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515111109604.png" alt="image-20220515111109604" /></p>
<blockquote>
<p>参考资料：<a href="https://askubuntu.com/questions/428408/can-not-ping-google-using-proxy">can not ping google using proxy</a></p>
</blockquote>
</br>
<p>3.<code>ls</code></p>
</br>
<p>4.<code>wc</code></p>
</br>
<p>5.<code>zip</code>和<code>unzip</code>：用于压缩解压缩 zip 文件。</p>
<p><code>zip -rq filename.zip /path/to/folder1</code>：把<code>folder1</code>压缩到<code>filename.zip</code>。<code>q</code>表示压缩时不显示任何信息</p>
<p><code>unzip -q /path/to/file.zip -d foldername</code>：把<code>file.zip</code>解压缩到<code>foldername</code>。<br />
解压命令大全见：<a href="https://www.cnblogs.com/eoiioe/archive/2008/09/20/1294681.html">linux下解压命令大全</a></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/linux/linux-comm-unzip.html">Linux unzip 命令</a></li>
<li><a href="https://www.runoob.com/linux/linux-comm-zip.html">Linux zip命令 | 菜鸟教程</a></li>
<li><a href="https://unix.stackexchange.com/questions/57013/zip-all-files-in-directory">Zip all files in directory?</a></li>
<li><a href="https://askubuntu.com/questions/520546/how-to-extract-a-zip-file-to-a-specific-folder">How to extract a zip file to a specific folder?</a></li>
</ol>
</blockquote>
</br>
<p>6.<code>rename</code>：用于重命名文件。</p>
<ul>
<li><code>000001_left.png -&gt; 000001_left_depth.png</code>：<code>rename -v 's/.png/_depth.png/' *.png</code>。</li>
<li><code>000001_left.png -&gt; 000001_left_gt.png</code>：<code>rename -v 's/.png/_gt.png/' *.png</code>。</li>
<li><code>000001_left_GT.png -&gt; 000001_left_gt.png</code>：<code>rename -v 's/GT.png/gt.png/' *.png</code>。</li>
</ul>
<p>也可用于批量给文件名添加前缀或后缀，例如给多个文件批量添加<code>.cpp</code>后缀或<code>1</code>前缀：</p>
<ul>
<li><code>helloworld -&gt; helloworld.cpp</code>：<code>rename -v 's/$/.cpp/' *</code>。</li>
<li><code>helloworld.cpp -&gt; 1helloworld.cpp</code>：<code>rename -v 's/^/1/' *</code>。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://unix.stackexchange.com/questions/1136/batch-renaming-files">Batch renaming files</a></li>
</ol>
</blockquote>
</br>
<p>7.在 Ubuntu 终端中隐藏当前工作目录：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220609103802742.png" alt="image-20220609103802742" /></p>
<ul>
<li>
<p>当前终端中生效：在当前终端中运行<code>export PS1='\u@\h$ '</code></p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220609103954302.png" alt="image-20220609103954302" /></p>
</li>
<li>
<p>永久生效：在<code>~/.bashrc</code>文件末尾添加<code>export PS1='\u@\h$ '</code>，并运行<code>source ~/.bashrc</code>使之生效</p>
</li>
<li>
<p>设置颜色：<code>export PS1='\e[34m\u\e[0m@\e[35m\h\e[0m$ '</code>。</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220609113641179.png" alt="image-20220609113641179" /></p>
</li>
</ul>
<p>PS：<code>\e</code>表示<code>Esc</code>即转义，<code>\e[34m</code>和<code>\e[35m</code>表示颜色，<code>\e[0m</code>表示清除前面的格式，故<code>@</code>和<code>$</code>符号无格式。</p>
<p>参考资料：</p>
<ol>
<li>
<p><a href="https://askubuntu.com/questions/16728/hide-current-working-directory-in-terminal">Hide current working directory in terminal</a></p>
</li>
<li>
<p><a href="https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html">How to Change / Set up bash custom prompt (PS1) in Linux</a></p>
</li>
<li>
<p><a href="https://misc.flogisoft.com/bash/tip_colors_and_formatting">Bash tips: Colors and formatting (ANSI/VT100 Control sequences)</a></p>
</li>
</ol>
</br>
<p>8.<code>ls | sed 's/.jpg//'</code>：用于对<code>ls</code>的输出做处理。</p>
<ul>
<li>
<p>处理之前：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">FT@node2$ ls <span class="token operator">|</span> head
ILSVRC2012_test_00000004<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000018<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000019<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000022<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000030<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000072<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000082<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000108<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000130<span class="token punctuation">.</span>jpg
ILSVRC2012_test_00000172<span class="token punctuation">.</span>jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>
<p>处理之后：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">FT@node2$ ls <span class="token operator">|</span> head <span class="token operator">|</span> sed <span class="token string">'s/.jpg//'</span>
ILSVRC2012_test_00000004
ILSVRC2012_test_00000018
ILSVRC2012_test_00000019
ILSVRC2012_test_00000022
ILSVRC2012_test_00000030
ILSVRC2012_test_00000072
ILSVRC2012_test_00000082
ILSVRC2012_test_00000108
ILSVRC2012_test_00000130
ILSVRC2012_test_00000172<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</br>
<p>9.在<code>sed</code>命令中包含斜杆的替换。一般情况下，我们会用<code>/</code>作为<code>sed</code>指令的分隔符进行字符串的查找替换。例如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">cat test<span class="token punctuation">.</span>txt <span class="token operator">|</span> sed <span class="token string">'s/.jpg/.png/'</span> <span class="token operator">></span> test1<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以将<code>.jpg</code>字符串替换为<code>.png</code>。但当要查找或替换的字符串包含<code>/</code>本身时，该方式无法使用。此时可以利用<code>sed</code>命令会将紧跟在<code>s</code>后面的字符作为分隔符的特性，将分隔符改为<code>#</code>或其他字符。例如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">cat test<span class="token punctuation">.</span>txt <span class="token operator">|</span> sed <span class="token string">'s#^#data/#'</span> <span class="token operator">></span> test2<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以在每一行的开头添加<code>data/</code>字符串。</p>
<ul>
<li>在每一行开头添加<code>'</code>单引号字符，<code>ls | sed &quot;s/^/'/&quot;</code></li>
<li>在每一行末尾添加<code>',</code>字符，<code>ls | sed &quot;s/$/',/&quot;</code>。<br />
完整使用<code>ls | sed &quot;s/^/'/&quot; | sed &quot;s/$/',/&quot;</code>效果如下：</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">&#39;ILSVRC2012_test_00000003.png&#39;,
&#39;ILSVRC2012_test_00000023.png&#39;,
&#39;ILSVRC2012_test_00000025.png&#39;,
&#39;ILSVRC2012_test_00000026.png&#39;,
&#39;ILSVRC2012_test_00000034.png&#39;,
&#39;ILSVRC2012_test_00000038.png&#39;,
&#39;ILSVRC2012_test_00000064.png&#39;,
&#39;ILSVRC2012_test_00000086.png&#39;,
&#39;ILSVRC2012_test_00000105.png&#39;,
&#39;ILSVRC2012_test_00000128.png&#39;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/weixin_39031707/article/details/104065184">Sed替换 内容带反斜杠（/）</a></li>
</ol>
</blockquote>
</br>
<p>10.有时候可能会许村将两个文件中的数据合并到一个文件，并且数据分处第一列和第二列，此时可以通过<code>paste</code>命令实现。例如，文件<code>train.txt</code>和<code>train1.txt</code>分别包含以下内容：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">$ cat train<span class="token punctuation">.</span>txt
<span class="token number">1</span><span class="token punctuation">.</span>jpg
<span class="token number">2</span><span class="token punctuation">.</span>jpg
<span class="token number">3</span><span class="token punctuation">.</span>jpg
<span class="token number">4</span><span class="token punctuation">.</span>jpg
$ cat train1<span class="token punctuation">.</span>txt
<span class="token number">1</span><span class="token punctuation">.</span>jpg
<span class="token number">2</span><span class="token punctuation">.</span>jpg
<span class="token number">3</span><span class="token punctuation">.</span>jpg
<span class="token number">4</span><span class="token punctuation">.</span>jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过<code>paste train.txt train1.txt</code>命令可以获得以下输出：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">.</span>jpg   <span class="token number">1</span><span class="token punctuation">.</span>jpg
<span class="token number">2</span><span class="token punctuation">.</span>jpg   <span class="token number">2</span><span class="token punctuation">.</span>jpg
<span class="token number">3</span><span class="token punctuation">.</span>jpg   <span class="token number">3</span><span class="token punctuation">.</span>jpg
<span class="token number">4</span><span class="token punctuation">.</span>jpg   <span class="token number">4</span><span class="token punctuation">.</span>jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/jiao_zhoucy/article/details/20693179">Linux下paste命令，按列合并文件</a></li>
</ol>
</blockquote>
</br>
<p>11.可以通过以下脚本批量移动文件：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">dir</span> <span class="token keyword">in</span> DUT-OMRON DUTS_Test ECSSD HKU-IS PASCAL-S SOD THUR15K
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"processing <span class="token variable">$dir</span> data"</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> -d <span class="token variable">$dir</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span>
    <span class="token keyword">else</span>
        <span class="token function">mkdir</span> <span class="token variable">$dir</span>
    <span class="token keyword">fi</span>

    <span class="token assign-left variable">image</span><span class="token operator">=</span><span class="token variable">$dir</span>/image
    <span class="token builtin class-name">echo</span> <span class="token string">"image is <span class="token variable">$image</span>"</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> -d <span class="token variable">$image</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span>
    <span class="token keyword">else</span>
        <span class="token function">mkdir</span> <span class="token variable">$image</span>
    <span class="token keyword">fi</span>
    
    <span class="token assign-left variable">mask</span><span class="token operator">=</span><span class="token variable">$dir</span>/mask
    <span class="token builtin class-name">echo</span> <span class="token string">"mask is <span class="token variable">$mask</span>"</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> -d <span class="token variable">$mask</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span>
    <span class="token keyword">else</span>
        <span class="token function">mkdir</span> <span class="token variable">$mask</span>
    <span class="token keyword">fi</span>
    
    <span class="token function">mv</span> ./img/<span class="token variable">$dir</span>/* <span class="token variable">$image</span>
    <span class="token function">mv</span> ./gt/<span class="token variable">$dir</span>/* <span class="token variable">$mask</span>
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>先通过<code>[-d $dir]</code>确定是否存在<code>$dir</code>文件夹，如果没有则创建，然后将<code>img</code>和<code>gt</code>文件夹下的图片移动到对应的文件夹。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li>《Linux命令行和shell脚本编程》第12章</li>
</ol>
</blockquote>
</br>
<p>12.在Linux系统中可以很方便地对两个文本文件求取交集、并集和差集</p>
<ul>
<li>交集：<code>sort a.txt b.txt | uniq -d</code></li>
<li>并集：<code>sort a.txt b.txt | uniq</code></li>
<li>差集：
<ul>
<li>a.txt - b.txt：<code>sort a.txt b.txt b.txt | uniq -u</code></li>
<li>b.txt - a.txt：<code>sort b.txt a.txt a.txt | uniq -u</code></li>
</ul>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/molong1208/p/5358509.html">Linux两个文件求交集、并集、差集</a></li>
</ol>
</blockquote>
</br>
<p>13.结合[11]和[12]可以方便地求取image和mask文件夹中图片的交集并输出到对应的txt文件：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">dir</span> <span class="token keyword">in</span> DUT-OMRON DUTS_Test ECSSD HKU-IS PASCAL-S SOD THUR15K
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"processing <span class="token variable">$dir</span> data"</span>
    <span class="token assign-left variable">image</span><span class="token operator">=</span><span class="token variable">$dir</span>/image
    <span class="token assign-left variable">mask</span><span class="token operator">=</span><span class="token variable">$dir</span>/mask
    <span class="token function">ls</span> <span class="token variable">$image</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/.jpg//'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/.png//'</span> <span class="token operator">></span><span class="token variable">$dir</span>/image.txt
    <span class="token function">ls</span> <span class="token variable">$mask</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/.png//'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/.bmp//'</span> <span class="token operator">></span><span class="token variable">$dir</span>/mask.txt

    <span class="token function">sort</span> <span class="token variable">$dir</span>/image.txt <span class="token variable">$dir</span>/mask.txt <span class="token operator">|</span> <span class="token function">uniq</span> -d <span class="token operator">></span><span class="token variable">$dir</span>/test.txt
    <span class="token function">cat</span> <span class="token variable">$dir</span>/test.txt <span class="token operator">|</span> <span class="token function">wc</span>
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</br>
<p>14.<code>sh</code> vs <code>bash</code>：注意，二者并不等价。bash是sh的超集。</p>
<ul>
<li>
<p>通过<code>sh test7.sh</code>运行脚本，会出现如下报错：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220716172241725.png" alt="image-20220716172241725" /></p>
</li>
<li>
<p>通过<code>bash test7.sh</code>运行脚本，可以正常运行：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220716172342306.png" alt="image-20220716172342306" /></p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.geeksforgeeks.org/difference-between-sh-and-bash/">Difference between sh and bash</a></li>
<li><a href="https://unix.stackexchange.com/questions/45781/shell-script-fails-syntax-error-unexpected">Shell script fails: Syntax error: “(” unexpected</a></li>
</ol>
</blockquote>
</br>
<p>15.在bash脚本中将命令行的输出复制给一个变量：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> batchDir.sh <span class="token operator">|</span> <span class="token function">wc</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$&#123;output&#125;</span>"</span>
<span class="token comment"># 或者</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$output</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其输出如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220716172942136.png" alt="image-20220716172942136" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/4651437/how-do-i-set-a-variable-to-the-output-of-a-command-in-bash">How do I set a variable to the output of a command in Bash?</a></li>
</ol>
</blockquote>
</br>
<p>16.在Anaconda中创建环境时<code>-n/--name</code>不能和<code>-p/--prefix</code>同时使用：</p>
<ul>
<li><code>-n, --name</code>：环境名，如<code>conda create --name py35 python=3.5</code>。</li>
<li><code>-p, --prefix</code>：环境位置的完整路径。如<code>conda create --prefix /users/.../yourenvname python=2.7</code>。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.conda.io/projects/conda/en/latest/commands/create.html#conda-create">conda create</a></li>
<li><a href="https://stackoverflow.com/questions/37926940/how-to-specify-new-environment-location-for-conda-create">how to specify new environment location for conda create</a></li>
</ol>
</blockquote>
</br>
<p>17.删除conda环境：<code>conda env remove -n ENV_NAME</code>。</p>
</br>
<p>18.在编写bash脚本时，指定<code>IFS</code>变量为多个分隔符：<code>IFS=', | \\'</code>。如下图所示：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/bin/bash</span>
echo <span class="token string">"reading values from a file"</span>
<span class="token builtin">file</span><span class="token operator">=</span><span class="token string">"list"</span>
<span class="token comment"># change seperator</span>
<span class="token comment"># save IFS before changing it</span>
IFS_OLD<span class="token operator">=</span>$IFS
<span class="token comment"># set multiple seperators?</span>
IFS<span class="token operator">=</span><span class="token string">'; | :'</span>
<span class="token keyword">for</span> state <span class="token keyword">in</span> $<span class="token punctuation">(</span>cat $<span class="token builtin">file</span><span class="token punctuation">)</span>
do
    echo <span class="token string">"Visit $state"</span>
done
IFS<span class="token operator">=</span>$<span class="token punctuation">&#123;</span>IFS_OLD<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/25163486/split-string-using-2-different-delimiters-in-bash">Split string using 2 different delimiters in Bash</a></li>
</ol>
</blockquote>
</br>
<p>19.在Ubuntu终端常使用Ctrl + L组合快捷键清空终端屏幕，但向上滚动时屏幕内容依然存在。此时可以通过</p>
<ul>
<li><code>printf '\ec'</code></li>
<li><code>reset</code></li>
</ul>
<p>二者来完全清空屏幕，但<code>reset</code>为彻底清除，执行速度较慢。故可以通过在<code>~/.bashrc</code>中添加如下别名：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">cls</span><span class="token operator">=</span><span class="token string">'printf "\ec"'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>来使用<code>cls</code>来清空终端屏幕。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/pngynghay/article/details/23176757">Linux终端彻底清空屏幕</a></li>
</ol>
</blockquote>
</br>
<p>20.在使用<code>ls</code>命令时，有时我们仅需要列出目录，然后将目录导入txt文件。下面是3种不同的方法：</p>
<ol>
<li>
<p><code>ls -d */</code>：其输出如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">DUT-OMRON/  DUTS_Test/  ECSSD/  HKU-IS/  PASCAL-S/  SOD/  THUR15K/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以通过<code>ls -d */ | sed 's#/##' &gt; dir.txt</code>将数据集名称导出到<code>dir.txt</code></p>
</li>
<li>
<p><code>ls -F | grep &quot;/$&quot;</code>。<code>-F</code>会在输出的不同文件类型后面加上后缀，文件后会加上<code>*</code>，管道后会加上<code>|</code>，目录后会加上<code>/</code>。</p>
</li>
<li>
<p><code>ls -l | grep &quot;^d&quot;</code>。使用<code>grep</code>匹配输出每行开头的<code>d</code>字符。可以通过<code>awk</code>命令列出目录名本身：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> -l <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"^d"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $8&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/DLUTBruceZhang/article/details/9244897">Linux Shell 只列出目录的方法</a></li>
</ol>
</blockquote>
</br>
<p>21.在Ubuntu系统中，常常需要查看当前运行的进程，并根据需要筛选。下面介绍<code>ps</code>命令的选项：</p>
<ul>
<li>
<p><code>ps -A</code>：列出所有的进程</p>
</li>
<li>
<p><code>ps -w</code>：显示加宽可以显示更多的信息</p>
</li>
<li>
<p><code>ps -au</code>：显示较为详细的信息</p>
</li>
<li>
<p><code>ps -aux</code>：显示所有包含其他使用者的进程。下面是对该命令输出信息的介绍，其输出格式为</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token environment constant">USER</span> PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>
<p><code>USER</code>：进程拥有者</p>
</li>
<li>
<p><code>PID</code>：process id</p>
</li>
<li>
<p><code>%CPU</code>：CPU占用率</p>
</li>
<li>
<p><code>VSZ</code>：虚拟内存大小</p>
</li>
<li>
<p><code>RSS</code>：内存大小</p>
</li>
<li>
<p><code>TTY</code>：minor device number of tty</p>
</li>
<li>
<p><code>STAT</code>：进程状态</p>
<ul>
<li>D：无法终端的休眠状态（通常为IO的进程）</li>
<li>R：正在执行中</li>
<li>S：静止状态</li>
<li>T：暂停执行</li>
<li>Z：不存在但暂时无法消除</li>
<li>W：没有足够的内存分页可分配</li>
<li>&lt;：高优先序的进程</li>
<li>N：低优先序的进程</li>
<li>L：有内存分页分配且Lock在内存内</li>
</ul>
</li>
<li>
<p>START：进程开始时间</p>
</li>
<li>
<p>TIME：执行的时间</p>
</li>
<li>
<p>COMMAND：执行的指令</p>
</li>
</ul>
</li>
</ul>
<p>较为常用的命令为<code>ps -u FT</code>，其可以显示用户<code>FT</code>正在运行的进程，并可以通过<code>grep</code>对进程进行筛选。</p>
<p>此外，<code>top</code>命令可以显示正在运行的进程并实时更新。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/linux/linux-comm-ps.html">Linux ps 命令</a></li>
<li><a href="https://blog.csdn.net/yaoqiuxiang/article/details/9449179">ubuntu查看所有正在运行的进程</a></li>
</ol>
</blockquote>
</br>
<p>22.<code>kill</code>命令常用于通过进程号PID终止特定进程。可以用<code>kill -l</code>命令列出所有可用的信号，最常用的信号是：</p>
<ul>
<li><code>1 (HUP)</code>：重新加载进程</li>
<li><code>9 (KILL)</code>：杀死一个进程</li>
<li><code>15 (TERM)</code>：正常停止一个进程</li>
</ul>
<p>示例：</p>
<p><code>kill -9 12345</code>：彻底杀死进程号为12345的进程。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/linux/linux-comm-kill.html">Linux kill命令</a></li>
</ol>
</blockquote>
</br>
<p>23.服务器远程登录配置：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.chengxiaobai.cn/record/tencent-cloud-denied-permission-publickey-gssapikeyex-gssapiwithmic.html">腾讯云 Permission denied (publickey,gssapi-keyex,gssapi-with-mic)</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1720991">Linux 配置SSH免密登录 “ssh-keygen”的基本用法</a></li>
<li><a href="https://www.runoob.com/w3cnote/set-ssh-login-key.html">设置 SSH 通过密钥登录</a></li>
</ol>
</blockquote>
</br>
<p>24.使用<code>chmod</code>变更文件或目录权限。可以使用<code>chmod -R 777 ./folder</code>对目录以及目录一下的文件递归执行更改权限操作。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://wangchujiang.com/linux-command/c/chmod.html">chmod</a></li>
</ol>
</blockquote>
</br>
<p>25.查看Linux系统内核版本和系统架构：</p>
<ul>
<li><code>hostnamectl</code>：查看内核版本和系统架构<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220913164139.png" alt="" /></li>
<li><code>uname -a</code>：查看内核版本和系统架构<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220913164340.png" alt="" /></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.sysgeek.cn/find-out-linux-system-32-or-64-bit/">查看Linux系统架构类型的5条常用命令</a></li>
<li><a href="https://www.cnblogs.com/linuxprobe/p/11664104.html">查看Linux内核版本</a></li>
</ol>
</blockquote>
</br>
26.查看Linux空间使用情况：
- `df -lh`：查看分区使用情况
- `du -sh /home/FT`：查看当前用户使用的存储空间大小
> 参考资料：
> 1. [Linux笔记』查看磁盘空间大小和所有用户各自占用空间](https://blog.csdn.net/abc13526222160/article/details/84962310#:~:text=Linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E5%8D%A0,%E5%91%BD%E4%BB%A4%E6%9C%89%E4%B8%80%E4%BA%9B%E5%8C%BA%E5%88%AB%E7%9A%84%E3%80%82)
> 2. [Linux 查看磁盘空间](https://www.runoob.com/w3cnote/linux-view-disk-space.html)
</br>
27.Ubuntu添加和删除用户
> 参考资料：
> 1. [如何在Ubuntu添加和删除用户](https://www.myfreax.com/how-to-add-and-delete-users-on-ubuntu-18-04/#:~:text=%E9%80%9A%E8%BF%87GUI%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%94%A8%E6%88%B7&text=%E6%89%93%E5%BC%80Ubuntu%E8%AE%BE%E7%BD%AE%EF%BC%8C%E6%89%BE%E5%88%B0%20%E7%94%A8%E6%88%B7,%E5%91%98%E7%94%A8%E6%88%B7%E5%B9%B6%E8%BE%93%E5%85%A5%E4%BF%A1%E6%81%AF%E3%80%82)
</br>
28.配置环境变量
- `export PATH=/usr/local/bin:$PATH`：将环境变量放在环境变量检索目录最开始，即优先查找该变量
- `export PATH=$PATH:/usr/local/bin`：将环境变量放在环境变量检索目录最后，即最后查找该变量
> 1. [Multiple CUDA versions on machine nvcc -V confusion](https://stackoverflow.com/questions/40517083/multiple-cuda-versions-on-machine-nvcc-v-confusion)
> 2. [How to correctly add a path to PATH?](https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path)
</br>
<p>29.复制指定目录下的全部文件到另一个目录中：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> -r dir1 dir2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/zdz8207/p/linux-cp-dir.html">linux复制指定目录下的全部文件到另一个目录中，linux cp 文件夹</a></li>
</ol>
</blockquote>
</br>
30.rename批量修改文件名：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://einverne.github.io/post/2018/01/rename-files-batch.html">每天学习一个命令: rename 批量修改文件名 | Verne in GitHub</a></li>
</ol>
</blockquote>
</br>
31.编写bash script脚本：
以下脚本使用copilot编写：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Find the process IDs of all processes containing "FT"</span>
<span class="token assign-left variable">pids</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> FT <span class="token operator">|</span> <span class="token function">grep</span> train <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span>

<span class="token comment"># Kill all processes with the found process IDs</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable">$pids</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"Killing processes: <span class="token variable">$pids</span>"</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$pids</span>"</span> <span class="token operator">|</span> <span class="token function">xargs</span> -r <span class="token function">kill</span> -9
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"No processes found containing 'FT'"</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [linux - Add a bash script to path - Stack Overflow](https://stackoverflow.com/questions/20054538/add-a-bash-script-to-path)
> 2. [WSL2配置代理 - Leaos - 博客园](https://www.cnblogs.com/tuilk/p/16287472.html)
> 3. [Functions - Bash Scripting Tutorial](https://ryanstutorials.net/bash-scripting-tutorial/bash-functions.php)
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode和Idea快捷键记录</title>
    <url>/2023/04/07/VSCode%E5%92%8CIdea%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录一下在VSCode和IDEA中所配置的快捷键以便查阅：</p>
<span id="more"></span>
<h3 id="编辑"><a class="markdownIt-Anchor" href="#编辑"></a> 编辑</h3>
<p>1.<code>Ctrl+Shift+D</code>：选中光标位置所在的单词出现。<br />
2.<code>Ctrl+Shift+L</code>：选中光标位置所在单词的所有出现。此时使用<code>i</code>或<code>c/d</code>可以实现多光标编辑（VSCode和IDEA中的Vim插件使用<code>i</code>有点问题，可使用<code>c</code>作为替代）<br />
3.<code>Ctrl+Right/Left</code>定位选中单词的下/上一个出现。（VSCode，IDEA中配置快捷键失效）<br />
4.<code>Ctrl+D/U</code>上下移动整个屏幕。<br />
5.<code>gd</code>跳转到函数/变量定义处。<br />
6.<code>ge/gE</code>跳转到下/上一个error处。<br />
7.<code>gm/gM</code>跳转到下/上一个method处。（IDEA）<br />
8.<code>&lt;leader&gt;&lt;leader&gt;w/b</code>快速定位光标前后单词。（通过easymotion实现）<br />
9.<code>s+目标单词的前两个字母</code>快速定位光标所在行的目标单词。（通过sneak实现）<br />
10.<code>Ctrl+;</code>输入字母快速定位文件中该字母的出现位置。（通过ace jump插件实现）。<br />
11.<code>Alt+Left/Right</code>跳转到上/下一个跳转位置。<br />
12.<code>gb</code>选中光标所在单词，再次按<code>gb</code>选中和前面单词的下一个出现。按下<code>c</code>或者<code>i</code>可以进行多光标编辑。（IDEA中不起作用）<br />
13.<code>yL</code>复制光标到该行末尾的内容(<code>L</code>已被映射为<code>$</code>)；<code>y^</code>复制光标到该行开头的内容（虽然H已被映射为^，但在VSCode中<code>yH</code>不起作用，在Obsidian中起作用）<br />
14.<code>3yy</code>复制光标所在行以及之后的两行共3行。<br />
15.<code>123G</code>跳转到123行。<br />
16.<code>V+j/k</code>快速选中整行。<br />
17.<code>V/pattern+n</code>快速选中当前行到匹配pattern所在行。<br />
18.<code>gv</code>：重新选择刚才选择的块<br />
19.<code>gb</code>：在当前单词处添加光标，重复<code>gb</code>在当前单词的下一个匹配处添加光标。<br />
20.<code>ctrl-v + j/k</code>：选择当前行光标所在字符，<code>j/k</code>选择上下行该光标对应位置字符。<br />
21.选择代码块后，可通过<code>:s/match/replace</code>将代码块中的<code>match</code>替换为<code>replace</code>。<br />
22.<code>&quot;0p</code>：粘贴使用<code>yy</code>复制的内容，该内容不会被<code>dd</code>覆盖。见参考资料5。<br />
23.<code>J</code>：将下一行和当前行合并，没有对应的<code>K</code>操作。<br />
24.<code>i/a</code>：在光标前后插入，<code>i</code>对应insert，<code>a</code>对应append。<br />
25.<code>ea</code>：在光标所在单词后插入。<br />
26.<code>gU</code>后选中：将选择的文本转换为大写。<br />
27.<code>gu</code>后选中：将选择的文本转换为小写。<br />
28.<code>gh</code>：展示光标所在位置的变量的tooltip（提示）。<br />
29.<code>&gt;</code>和<code>&lt;</code>，对选择的代码进行缩进。<br />
30.<code>Alt+Shift+F</code>：对文件进行格式化。<br />
31.<code>Alt</code>+鼠标点击，在指定位置创建多光标。<br />
32.在<code>visual</code>模式下选中单词后，按下<code>gb</code>可以选择下一个该单词的出现，从而实现多光标编辑。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/7764176/how-to-copy-from-current-position-to-the-end-of-line-in-vi">vim - How to copy from current position to the end of line in vi - Stack Overflow</a></li>
<li><a href="https://www.yuque.com/xiaochentongzhi/plyxyr/ekvv3fliaqtzaymt">VSCode 快捷键备忘</a></li>
<li><a href="https://stackoverflow.com/questions/7406949/vim-faster-way-to-select-blocks-of-text-in-visual-mode">Vim: faster way to select blocks of text in visual mode - Stack Overflow</a></li>
<li><a href="https://www.cs.swarthmore.edu/oldhelp/vim/selection.html">vim tips and tricks: text selection</a></li>
<li><a href="https://stackoverflow.com/questions/11993851/how-to-delete-not-cut-in-vim">copy paste - How to delete (not cut) in Vim? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="切换"><a class="markdownIt-Anchor" href="#切换"></a> 切换</h3>
<p>1.<code>&lt;leader&gt;h</code>和<code>&lt;leader&gt;l</code>切换tab页。<br />
2.<code>&lt;leader&gt;n</code>定位explorer，通过<code>j/k</code>等选择、新建、重命名文件。（通过NERDTree插件实现）<br />
3.<code>Ctrl+P</code>根据文件名搜索explorer中的所有文件并通过enter打开。<br />
4.<code>~ + 1</code>定位文件进行编辑，<code>~ + 2</code>定位终端窗口。</p>
<h3 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h3>
<p>1.<code>Ctrl+Shift+F</code>全局搜索。<br />
2.<code>Ctrl+,</code>打开settings。<br />
3.<code>F2</code>搜索commands（VSCode）。<br />
4.<code>Ctrl+Shift+R</code>重载窗口（VSCode）。<br />
5.<code>Ctrl+T</code>打开终端。<br />
6.<code>Ctrl+w</code>或者<code>&lt;leader&gt;q</code>关闭当前文件。<br />
7.<code>Ctrl+K+W</code>关闭所有文件。</p>
<h3 id="文本选择包括选择-删除-替换-复制-缩进"><a class="markdownIt-Anchor" href="#文本选择包括选择-删除-替换-复制-缩进"></a> 文本选择（包括选择、删除、替换、复制、缩进）</h3>
<p>选择、删除、替换、复制、缩进分别对应<code>v</code>, <code>d</code>, <code>c</code>, <code>y</code>, <code>&gt;</code>。（visual/delete/change/yank/indent）<br />
首先先根据参考资料1理解text object的概念：<br />
以选择模式(<code>v</code>)为例：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407182521.png" alt="" /><br />
解释：<br />
<code>viw</code>：visual select inner a word<br />
<code>di&quot;</code>：delete the content which surrounded by <code>&quot;&quot;</code><br />
1.<code>viw</code>：选中光标所在单词（不包括单词末尾空格/space）。如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407172636.png" alt="" /><br />
2.<code>vaw</code>：选中光标所在单词（包括单词末尾空格/space）。如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407172754.png" alt="" /><br />
3.<code>viW/vaW</code>：选中更广义的单词（<code>,</code>、<code>;</code>等不会中断识别）：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407173106.png" alt="" /><br />
上述<code>viw</code>会被<code>,</code>中断。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407173146.png" alt="" /><br />
使用<code>viW</code>则不会被<code>,</code>中断。<br />
4.<code>vis</code>：选中光标所在句子，句子通过<code>.</code>分隔。<code>vas</code>则会多选中末尾一个空格（对代码来说不太好用，但理解<code>s</code>表示句子的概念对理解Vim-surround中的操作有帮助。没有<code>viS/vaS</code>）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407184135.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407184204.png" alt="" /><br />
5.<code>vip</code>：选中光标所在的段落，段落通过空行分割。<code>vap</code>会多选中末尾空行直至下一个段落。（没有<code>viP/vaP</code>）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407184257.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407184346.png" alt="" /><br />
6.<code>vi&#123;</code>：选中光标所在位置外部的第一个<code>&#123;&#125;</code>内的所有内容，不包括<code>&#123;&#125;</code>本身。（<code>vi(</code>, <code>vi[</code>, <code>vi&quot;</code>, <code>vi'</code>同理）：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407184721.png" alt="" /><br />
7.<code>va&#123;</code>：选中光标所在位置外部的第一个<code>&#123;&#125;</code>内的所有内容，包括<code>&#123;&#125;</code>本身。（<code>vi(</code>, <code>vi[</code>, <code>vi&quot;</code>, <code>vi'</code>同理）：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407184839.png" alt="" /><br />
8.<code>vit</code>：选中光标所在的HTML tag中的内容。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407191410.png" alt="" /></p>
<p>9.<code>ci(</code>：可以直接修改修改最近的括号中的内容。（参考：<a href="https://www.bilibili.com/video/BV1Vu4y1f7sW/?vd_source=71b57f2bb132ac1f88ed255cad4a06a6">我今天刚意识到的超实用 Vim 小技巧_哔哩哔哩_bilibili</a>）</p>
<p>PS：将上述的<code>v</code>替换为<code>c/d/y/&gt;</code>可以实现相同范围的选择。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1Ze4y1E7Sk/?spm_id_from=333.999.0.0&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">Vim中的重要概念 Text Object_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
<h3 id="vim-surround"><a class="markdownIt-Anchor" href="#vim-surround"></a> Vim-surround</h3>
<p>add/change/delete surrounding for content<br />
add：<code>ys [text object] Mark</code><br />
change：<code>ds Mark</code><br />
delete：<code>cs srcMark dstMark</code><br />
<strong>add</strong><br />
1.<code>ysiw&quot;</code>：给光标所在单词添加<code>&quot;&quot;</code>。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407190108.png" alt="" /><br />
2.<code>yss&quot;</code>：给光标所在行添加<code>&quot;&quot;</code>。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407190233.png" alt="" /><br />
3.<code>ysip&quot;</code>：给光标所在代码段添加<code>&quot;&quot;</code>。（注意此处需要<code>i</code>，上述VSCode中<code>yss</code>不需要<code>i</code>，IDEA中需要写<code>ysis</code>，但根据参考资料5该特性并没有在IDEA中实现）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407190720.png" alt="" /><br />
4.<code>ysiw(</code>：给光标所在单词添加<code>()</code>，额外添加空格。（<code>yss(</code>和<code>ysip(</code>同理）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407190909.png" alt="" /><br />
5.<code>ysiw)</code>：给光标所在单词添加<code>()</code>，不额外添加空格。（<code>yss)</code>和<code>ysip)</code>同理）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407190957.png" alt="" /><br />
6.<code>ysiwt p</code>：给光标所在单词添加HTML tag <code>&lt;p&gt;&lt;/p&gt;</code>。（<code>ysst p</code>和<code>ysipt p</code>同理）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407191812.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407191934.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407191949.png" alt="" /></p>
<p><strong>change</strong><br />
1.<code>cs&quot;'</code>：将光标所在单词最近的<code>&quot;&quot;</code>变为<code>''</code>。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407192147.png" alt="" /><br />
2.<code>cs&quot;&#123;</code>：将光标所在单词最近的<code>&quot;&quot;</code>变为<code>&#123;&#125;</code>，并添加额外空格。（<code>cs&quot;&#125;</code>不会添加额外空格）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407192308.png" alt="" /><br />
3.<code>cs&quot;t p</code>：将光标所在单词最近的<code>&quot;&quot;</code>变为对应HTML tag <code>&lt;p&gt;&lt;/p&gt;</code>。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407192819.png" alt="" /></p>
<p><strong>delete</strong><br />
1.<code>ds&quot;</code>：删除光标所在单词最近的<code>&quot;&quot;</code>。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407192441.png" alt="" /><br />
2.<code>ds&#123;</code>：删除光标所在单词最近的<code>&#123;&#125;</code>，并删除周围空格，如果没有则不删除。（<code>ds&#125;</code>不会删除周围空格）<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407192615.png" alt="" /><br />
3.<code>dst</code>：删除光标所在单词最近的HTML tag。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407193033.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1Le4y1i7Uz/?spm_id_from=333.788&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">好用的Vim插件Vim-Surround介绍_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1YA411u78P/?spm_id_from=333.337.search-card.all.click&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">指尖飞舞：vscode + vim 高效开发（vim-surround）_哔哩哔哩_bilibili</a></li>
<li><a href="https://github.com/tpope/vim-surround">GitHub - tpope/vim-surround: surround.vim: Delete/change/add parentheses/quotes/XML-tags/much more with ease</a></li>
<li><a href="https://youtrack.jetbrains.com/issue/VIM-769/inbuilt-vim-surround-support-in-ideavim">https://youtrack.jetbrains.com/issue/VIM-769/inbuilt-vim-surround-support-in-ideavim</a></li>
<li><a href="https://youtrack.jetbrains.com/issue/VIM-2004/Cannot-surround-full-line-using-yss-command">https://youtrack.jetbrains.com/issue/VIM-2004/Cannot-surround-full-line-using-yss-command</a></li>
</ol>
</blockquote>
<h3 id="vscode插件nerdtree"><a class="markdownIt-Anchor" href="#vscode插件nerdtree"></a> VSCode插件NERDTree</h3>
<p>操作如下：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407195849.png" alt="" /></p>
<h3 id="vscode光标移动到wrap-line末尾"><a class="markdownIt-Anchor" href="#vscode光标移动到wrap-line末尾"></a> VSCode光标移动到wrap line末尾</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://vi.stackexchange.com/questions/9762/how-to-go-to-the-end-of-the-line-even-in-on-a-wrapped-line">cursor movement - How to go to the end of the line even in on a wrapped line? - Vi and Vim Stack Exchange</a></li>
<li><a href="https://stackoverflow.com/questions/105721/how-do-i-move-to-end-of-line-in-vim">editor - How do I move to end of line in Vim? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode将redo映射为u"><a class="markdownIt-Anchor" href="#vscode将redo映射为u"></a> VSCode将redo映射为U</h3>
<ul>
<li>打开VSCode中Vim的Ctrl映射</li>
</ul>
<pre class="line-numbers language-settings.json" data-language="settings.json"><code class="language-settings.json">&quot;vim.useCtrlKeys&quot;: true,<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>在<code>.vimrc</code>中remap</li>
</ul>
<pre class="line-numbers language-vimrc" data-language="vimrc"><code class="language-vimrc">&quot; remap redo to U
nnoremap U &lt;C-r&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.reddit.com/r/vim/comments/4yvjje/remapping_u_to_redo_cr_to_reversesearch/">Remapping <code>U</code> to redo, <code>C-r</code> to reverse-search : vim</a></li>
</ol>
</blockquote>
<h3 id="vscode配置复制粘贴操作"><a class="markdownIt-Anchor" href="#vscode配置复制粘贴操作"></a> VSCode配置复制粘贴操作</h3>
<ul>
<li>使用<code>p</code>替换在visual mode下选中的text而不会替换剪切板的内容<br />
在<code>.vimrc</code>中添加如下内容：</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token string">" delete without yanking
nnoremap &lt;leader>d "</span>_d
vnoremap <span class="token operator">&lt;</span>leader<span class="token operator">></span>d <span class="token string">"_d

"</span> replace currently selected text with default register
<span class="token string">" without yanking it
vnoremap &lt;leader>p "</span>_dP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>PS：在VSCode中生效，在VSCode Insiders中不生效</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/321547/how-do-i-replace-paste-yanked-text-in-vim-without-yanking-the-deleted-lines">How do I replace-paste yanked text in vim without yanking the deleted lines? - Super User</a></li>
</ol>
</blockquote>
<h3 id="多光标编辑"><a class="markdownIt-Anchor" href="#多光标编辑"></a> 多光标编辑</h3>
<p><strong>VSCode原生模式</strong></p>
<ol>
<li>鼠标定位到目标行目标编辑位置。</li>
<li><code>Ctrl+Alt+down/up</code>创建多个光标。</li>
<li><code>right/down</code>更改光标位置</li>
<li>便可以直接进行多光标编辑<br />
<strong>Vim模式</strong></li>
</ol>
<h3 id="替换换行符"><a class="markdownIt-Anchor" href="#替换换行符"></a> 替换换行符</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230604104759.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/microsoft/vscode/issues/2097">Search for newline character (\n) in regex mode · Issue #2097 · microsoft/vscode · GitHub</a></li>
</ol>
</blockquote>
<h3 id="跳转到代码块-block-的开头和末尾"><a class="markdownIt-Anchor" href="#跳转到代码块-block-的开头和末尾"></a> 跳转到代码块 (block) 的开头和末尾</h3>
<p>1.<code>[[</code>：跳转到上一个顶层代码块（block）的开头。<br />
2.<code>]]</code>：跳转到下一个顶层代码块（block）的开头。<br />
3.<code>[m</code>：跳转到上一个方法/函数（method/function）的开头。<br />
4.<code>]m</code>：跳转到下一个方法/函数（method/function）的开头。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://vi.stackexchange.com/questions/7262/end-of-python-block-motion">End of python block motion - Vi and Vim Stack Exchange</a></li>
<li><a href="https://stackoverflow.com/questions/26344789/move-to-the-beginning-of-next-code-block-in-vim">perl - Move to the beginning of next code block in Vim - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode-vim-tips"><a class="markdownIt-Anchor" href="#vscode-vim-tips"></a> VSCode Vim Tips</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bypaulshen.com/posts/vscode-vim-tips">VSCodeVim Tips | paul shen</a></li>
</ol>
</blockquote>
<h3 id="vscode-vim重新映射已有的快捷键"><a class="markdownIt-Anchor" href="#vscode-vim重新映射已有的快捷键"></a> VSCode Vim重新映射已有的快捷键</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nnoremap gb <span class="token punctuation">]</span><span class="token punctuation">]</span>
nnoremap gB <span class="token punctuation">[</span><span class="token punctuation">[</span>
nnoremap gm <span class="token punctuation">]</span>m
nnoremap gM <span class="token punctuation">[</span>m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.reddit.com/r/vim/comments/g50gdv/how_do_you_remap_brackets_in_vim/">How do you remap brackets in vim : r/vim</a></li>
<li><a href="https://unix.stackexchange.com/questions/180926/disable-or-remove-default-vim-keybinding">key mapping - Disable or remove default vim keybinding - Unix &amp; Linux Stack Exchange</a></li>
<li><a href="https://stackoverflow.com/questions/24416826/changing-default-key-bindings-in-vim">Changing default key bindings in vim - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode-vim-d键重新映射"><a class="markdownIt-Anchor" href="#vscode-vim-d键重新映射"></a> VSCode vim d键重新映射</h3>
<pre class="line-numbers language-vimrc" data-language="vimrc"><code class="language-vimrc">vnoremap p P
vnoremap P p
vnoremap d &quot;_d
vnoremap &quot;_d d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：<br />
1 <a href="https://superuser.com/questions/321547/how-do-i-replace-paste-yanked-text-in-vim-without-yanking-the-deleted-lines">How do I replace-paste yanked text in vim without yanking the deleted lines? - Super User</a><br />
<a href="https://stackoverflow.com/questions/11993851/how-to-delete-not-cut-in-vim">copy paste - How to delete (not cut) in Vim? - Stack Overflow</a><br />
<a href="https://www.bilibili.com/video/BV1hh411P7vZ/?spm_id_from=333.999.0.0">Vim Visual 模式粘贴小知识_哔哩哔哩_bilibili</a><br />
<a href="https://stackoverflow.com/questions/54255/in-vim-is-there-a-way-to-delete-without-putting-text-in-the-register">replace - In Vim is there a way to delete without putting text in the register? - Stack Overflow</a><br />
<a href="https://stackoverflow.com/questions/11993851/how-to-delete-not-cut-in-vim">copy paste - How to delete (not cut) in Vim? - Stack Overflow</a></p>
</blockquote>
<h3 id="vscode定位explorer快捷键shortcut"><a class="markdownIt-Anchor" href="#vscode定位explorer快捷键shortcut"></a> VSCode定位explorer快捷键（shortcut）</h3>
<p><code>Ctrl+0</code></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/49662075/is-there-a-shortcut-to-move-focus-to-the-sidebar-in-visual-studio-code">Is there a shortcut to move focus to the sidebar in Visual Studio Code? - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu常见操作02</title>
    <url>/2022/11/22/Ubuntu%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C02/</url>
    <content><![CDATA[<p>本文记录一下使用Ubuntu操作系统时的常见操作：</p>
<span id="more"></span>
<p>1.<code>sed</code>命令中的<code>.</code>字符。<code>.</code>用于匹配除换行符之外的任意单个字符，它必须匹配一个字符。通过这种形式加上正则表达式的贪婪匹配（匹配符合模式的最长字符串）可以进行如下替换操作：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221122221549.png" alt="" /><br />
其命令为`head scores2.txt | sed ‘s#.*/##’。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li>《Linux命令行于shell脚本编程大全》第三版20.2.4点号字符</li>
</ol>
</blockquote>
</br>
2.删除文件时出现`cannot remove:device or resource busy`：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221123001238.png)
解决方案：
- `lsof +D /path`：查看当前路径下哪些进程占用文件
- `kill -9 $PID`：关闭对应进程id
- `rm -rf ./*`：重新尝试删除文件
一行命令实现：
`lsof +D ./ | awk '{print $2}' | tail -n +2 | xargs -r kill -9`
类似命令：
`ps -ef | grep FT | awk '{print $2}' | xargs -r kill -9`
> 参考资料：
> 1. [files - How to get over "device or resource busy"? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/11238/how-to-get-over-device-or-resource-busy)
</br>
3.bash脚本中的字符串比较：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$dir</span>"</span> <span class="token operator">==</span> <span class="token string">"image"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	<span class="token assign-left variable">img</span><span class="token operator">=</span>DUTS/<span class="token variable">$dir</span>/<span class="token variable">$line</span><span class="token string">".jpg"</span>
<span class="token keyword">else</span>
	<span class="token assign-left variable">img</span><span class="token operator">=</span>DUTS/<span class="token variable">$dir</span>/<span class="token variable">$line</span><span class="token string">".png"</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Bash shell字符串比较 | myfreax](https://www.myfreax.com/how-to-compare-strings-in-bash/#:~:text=%E5%9C%A8Bash%E4%B8%AD%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E4%BB%A5%E4%B8%8B,%E4%BD%A0%E5%BA%94%E8%AF%A5%E4%B8%8E%20%5B%20%E9%85%8D%E5%90%88%E4%BD%BF%E7%94%A8%E3%80%82)
> 2. [Bash Shell字符串比较入门_Linux教程_Linux公社-Linux系统门户网站](https://www.linuxidc.com/Linux/2019-05/158678.htm)
</br>
4.由于Windows系统和Linux系统中换行符的差异（前者为\n\r，后者为\n），在WSL进行批量处理时可能出现以下问题：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221203144329.png)
其解决方式是，在遍历时进行`sed`替换操作替换掉`\r`：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> img_1000.txt <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/\r//'</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> line
<span class="token keyword">do</span>
    <span class="token assign-left variable">img</span><span class="token operator">=</span>./image/<span class="token variable">$line</span><span class="token string">".jpg"</span>
    <span class="token function">cp</span> <span class="token variable">$img</span> ./DUTS1000/
    <span class="token comment"># echo "$img"</span>
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</br>
5.`awk`指令。
- 打印第4列：`cat test.txt | awk '{print $4}'`
- 打印第1，3列：`cat test.txt | awk '{print $1, $3}'`
> 参考资料：
> 1. [Fetching Title#90mq](https://www.runoob.com/linux/linux-comm-awk.html)
</br>
6.sed指令匹配模式，并替换模式中的一部分，保留剩余部分（向后查找，回溯）：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token string">'s/hello \(world\)/hi \1/'</span> file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
可以将`hello world`替换为`hi world`。
</br>
7.由于Linux和Windows系统中换行符的差异，有时需要将`\r`替换为空字符。
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">cat</span> test.txt <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/\r//'</span> <span class="token operator">></span>a.txt
$ <span class="token function">sort</span> b.txt a.txt a.txt <span class="token operator">|</span> <span class="token function">uniq</span> -u <span class="token operator">></span> b-a.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</br>
8.使用FreePic2Pdf给书制作目录时，从豆瓣或使用OCR对应的目录txt文本往往如下图所示：
<pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">第1章 基础：逻辑和证明 1
1.1 命题逻辑 1
1.1.1 引言 1
1.1.2 命题 1
1.1.3 条件语句 4
1.1.4 复合命题的真值表 7
1.1.5 逻辑运算符的优先级 8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
根据FreePic2Pdf要求，需要将末尾的" "(空格)+数字转换为"\t"(tab键)+数字。此时可以使用vim中的替换（使用子模式匹配），命令如下：
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token operator">/</span>\<span class="token function">v</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
先使用上述正则语法，然后回车找到末尾的`( )(页码)$`模式；
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token punctuation">:</span><span class="token operator">%</span>s<span class="token operator">/</span><span class="token operator">/</span>\<span class="token keyword">t</span>\<span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
再使用上述的替换命令，将页码前的空格替换为`\t`。
同样可以使用类似命令在行首添加`\t`：
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token operator">/</span>\v^<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span> #末尾包含空格
<span class="token punctuation">:</span><span class="token operator">%</span>s<span class="token operator">/</span><span class="token operator">/</span>\<span class="token keyword">t</span>\<span class="token number">1</span><span class="token operator">.</span>\<span class="token number">2</span> #末尾包含空格<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
更精准的做法是：
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token operator">/</span>\v^<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token operator">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">1.2</span><span class="token punctuation">&#125;</span> <span class="token punctuation">)</span> #末尾包含空格，<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span>表示匹配<span class="token number">1</span>或<span class="token number">2</span>次
<span class="token punctuation">:</span><span class="token operator">%</span>s<span class="token operator">/</span><span class="token operator">/</span>\<span class="token keyword">t</span>\<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
还可以使用`^`排除匹配：
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token operator">/</span>\v^<span class="token punctuation">(</span><span class="token punctuation">[</span>^第\<span class="token keyword">t</span><span class="token punctuation">]</span><span class="token punctuation">)</span> #<span class="token punctuation">[</span>^第\<span class="token keyword">t</span><span class="token punctuation">]</span>表示排除对<span class="token string">"第"</span>和<span class="token string">"\t"</span>的匹配
<span class="token punctuation">:</span><span class="token operator">%</span>s<span class="token operator">/</span><span class="token operator">/</span>\<span class="token keyword">t</span>\<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
> 参考资料：
> 1. 《Vim实用技巧》技巧94
> 2. [VIM学习笔记 正则表达式-进阶 (Regular Expression Advanced)](http://yyq123.github.io/learn-vim/learn-vi-82-RegularExpressionAdv.html)
</br>
9.当使用pip或者conda安装新的package时，可能出现"No Space Left on Device"。此时推荐的做法是本文档的第2点，杀掉自己的所有进程然后重新连接服务器。下面查找到的其它的方法均需要root权限，并不推荐。
> 参考资料：
> 1. [Top 3 Ways to Fix “No Space Left on Device” Error in Linux](https://helpdeskgeek.com/linux-tips/top-3-ways-to-fix-no-space-left-on-device-error-in-linux/)
> 2. [How to Fix the "No Space Left on Device" Error on Linux - Make Tech Easier](https://www.maketecheasier.com/fix-linux-no-space-left-on-device-error/)
> 3. [privileges - lsof: WARNING: can't stat() fuse.gvfsd-fuse file system - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/171519/lsof-warning-cant-stat-fuse-gvfsd-fuse-file-system)
</br>
10.当使用`grep`指令时，搭配正则表达式，例如或运算：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">'fatal\|error\|critical'</span> /var/log/nginx/error.log <span class="token comment"># 使用\转义</span>
<span class="token function">grep</span> -E <span class="token string">'fatal|error|critical'</span> /var/log/nginx/error.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Linux grep中的正则表达式Regex | myfreax](https://www.myfreax.com/regular-expressions-in-grep/)
</br>
11.Ubuntu卸载软件：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> remove lua5.3 <span class="token comment">#只去除lua5.3</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> remove --auto-remove lua5.3 <span class="token comment">#去除lua5.3及其依赖packages</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> purge lua5.3 <span class="token comment"># 使用purge，所有配置和依赖packages将被移除</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> purge --auto-remove lua5.3 <span class="token comment"># 使用auto remove选项时，将根据该package来去除，在你想要重装时很有用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [在ubuntu系统中删除软件的三种最佳方法_51CTO博客_ubuntu 卸载软件](https://blog.51cto.com/u_168360/2407085)
> 2. [server - How to completely remove virtual packages? - Ask Ubuntu](https://askubuntu.com/questions/207505/how-to-completely-remove-virtual-packages)
> 3. [How to uninstall or remove lua5.3 software package from Ubuntu 17.04 (Zesty Zapus)](https://www.thelinuxfaq.com/ubuntu/ubuntu-17-04-zesty-zapus/lua5.3?type=uninstall)
</br>
12.Ubuntu源配置：
1. 备份sources.list文件，然后删除
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
2. 新建sources.list，将下述参考资料2中的源地址复制到其中：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认注释了源码仓库，如有需要可自行取消注释</span>
deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse
<span class="token comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span>

deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse
<span class="token comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span>

deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
<span class="token comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span>

deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
<span class="token comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span>

<span class="token comment"># 预发布软件源，不建议启用</span>
<span class="token comment"># deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span>
<span class="token comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
3. 运行`sudo apt-get update`对源进行更新
> 参考资料：
> 1. [Ubuntu 20.04系统下更改apt源为阿里源 - 知乎](https://zhuanlan.zhihu.com/p/251009600)
> 2. [USTC Open Source Software Mirror](http://mirrors.ustc.edu.cn/)
> 3. [Ubuntu 源使用帮助 — USTC Mirror Help 文档](http://mirrors.ustc.edu.cn/help/ubuntu.html)
</br>
13.修改用户名和密码
1. 使用`wsl -u root`登录root用户
2. 执行如下命令：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">usermod</span> -l <span class="token operator">&lt;</span>newname<span class="token operator">></span> -d /home/<span class="token operator">&lt;</span>newname<span class="token operator">></span> -m <span class="token operator">&lt;</span>oldname<span class="token operator">></span>
<span class="token function">usermod</span> -c <span class="token string">"newfullname"</span> <span class="token operator">&lt;</span>newname<span class="token operator">></span>
<span class="token function">groupmod</span> -n <span class="token operator">&lt;</span>newgroup<span class="token operator">></span> <span class="token operator">&lt;</span>oldgroup<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [permissions - How do I change my username? - Ask Ubuntu](https://askubuntu.com/questions/34074/how-do-i-change-my-username)
> 2. [Linux usermod user is currently used by process - Stack Overflow](https://stackoverflow.com/questions/28972503/linux-usermod-user-is-currently-used-by-process)
> 3. [linux - How to set default user for manually installed WSL distro? - Super User](https://superuser.com/questions/1566022/how-to-set-default-user-for-manually-installed-wsl-distro)
</br>
14.查看文件和文件夹大小：
- 查看文件大小：`ls -l filename`
- 查看文件夹大小：`du -sh folder`
- 查看磁盘使用情况：`df -h`
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/xiqingchun/article/details/42466267">Ubuntu查看文件大小或文件夹大小_jackliang的博客-CSDN博客_ubuntu 文件大小</a></li>
</ol>
</blockquote>
</br>
15.卸载java
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dpkg-query -W -f<span class="token operator">=</span><span class="token string">'$&#123;binary:Package&#125;\n'</span> <span class="token operator">|</span> <span class="token function">grep</span> -E -e <span class="token string">'^(ia32-)?(sun|oracle)-java'</span> -e <span class="token string">'^openjdk-'</span> -e <span class="token string">'^icedtea'</span> -e <span class="token string">'^(default|gcj)-j(re|dk)'</span> -e <span class="token string">'^gcj-(.*)-j(re|dk)'</span> -e <span class="token string">'^java-common'</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> -y remove

<span class="token function">sudo</span> <span class="token function">apt-get</span> -y autoremove<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [How to completely uninstall Java? - Ask Ubuntu](https://askubuntu.com/questions/84483/how-to-completely-uninstall-java#)
</br>
16.改造`rm`命令，删除文件至回收站：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://segmentfault.com/a/1190000018464527">linux - 改造rm命令，删除文件至回收站 - 不足 - SegmentFault 思否</a></li>
<li><a href="https://github.com/andreafrancia/trash-cli">GitHub - andreafrancia/trash-cli: Command line interface to the freedesktop.org trashcan.</a></li>
</ol>
</blockquote>
</br>
17.定期清空某个文件夹
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://cloud.tencent.com/developer/article/1849092">linux定时删除N天前的文件（文件夹） - 腾讯云开发者社区-腾讯云</a></li>
<li><a href="https://askubuntu.com/questions/589210/removing-files-older-than-7-days">command line - Removing files older than 7 days - Ask Ubuntu</a></li>
</ol>
</blockquote>
</br>
18.Ubuntu配置ssh免输密码：
- `ssh-keygen`：在本地机器上生成密钥对，`id_rsa.pub`和`id_rsa`。在`~/.ssh/`目录下。更改`id_rsa` 私钥权限，`chmod 600 id_rsa`。
- `ssh-copy-id -i ~/.ssh/id_rsa.pub user@host`：将本地公钥`id_rsa.pub`写入远程host的`~/.ssh`目录下的`authorized_keys`文件。如果远程host没有`.ssh`目录手动进行创建。更改`authorized_keys`文件权限，`chmod 755 authorized_keys`。
- 尝试本地登录，如果无法免密码登录，更改远程host上`/home/user`目录权限，`chmod 700 /home/user`。
> 参考资料：
> 1. [Getting Started With SSH in Linux](https://linuxhandbook.com/ssh-basics/)
> 2. [How to Add SSH Public Key to Server](https://linuxhandbook.com/add-ssh-public-key-to-server/)
> 3. [Why am I still getting a password prompt with ssh with public key authentication? - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/36540/why-am-i-still-getting-a-password-prompt-with-ssh-with-public-key-authentication)
> 4. [ssh-copy-id succeeded, but still prompt password input - Unix & Linux Stack Exchange](https://unix.stackexchange.com/questions/407394/ssh-copy-id-succeeded-but-still-prompt-password-input)
> 5. [VSCode远程连接服务器 免密登录（ssh key） | 烟雨平生](https://i007it.com/2022/07/14/VSCode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/)
</br>
19.vnc viewer和vnc server搭配使用。
- 先使用`vncserver`在远程服务器上生成对应端口号
- 在本地机器上建立`host:port`的连接
> 参考资料：
> 1. [linux中如何开启vnc服务端口,Linux下vnc配置及启动_听亭亭的博客-CSDN博客](https://blog.csdn.net/weixin_30125993/article/details/116636925?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-116636925-blog-107807058.pc_relevant_3mothn_strategy_recovery&spm=1001.2101.3001.4242.2&utm_relevant_index=4)
</br>
20.使用`rm`删除文件时排除某个文件：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://unix.stackexchange.com/questions/153862/remove-all-files-directories-except-for-one-file">Remove all files/directories except for one file</a></li>
</ol>
</blockquote>
</br>
21.Ubuntu复制命令行输出到剪切板的工具。
工具：xclip
安装过程：
- 从参考资料4下载并解压得到xclip文件夹
- 进入xclip文件夹，运行`./configure --prefix=/storage/FT/.local`指定安装文件夹。
- `make`进行编译
- 通过`su`切换到root用户
- `make install`和`make install.man`安装xclip和man page，分别安装在`/storage/FT/.local/bin`和`/storage/FT/.local/man`目录下。
- 编辑`.bashrc`将该路径加入到PATH中：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/storage/FT/.local/bin:<span class="token environment constant">$PATH</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
- 编辑`.bashrc`添加alias：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">clip</span><span class="token operator">=</span><span class="token string">'xclip -se c'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
- 此时即可通过`pwd | clip`复制当前路径。
PS：但在VSCode终端中会出现如下报错。
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230418225219.png)
<blockquote>
<p>参考资料 ：</p>
<ol>
<li><a href="https://askubuntu.com/questions/11925/a-command-line-clipboard-copy-and-paste-utility">software recommendation - A command-line clipboard copy and paste utility? - Ask Ubuntu</a></li>
<li><a href="https://github.com/milki/xclip/blob/master/INSTALL">xclip/INSTALL at master · milki/xclip · GitHub</a></li>
<li><a href="https://howtoinstall.co/en/xclip">How to install xclip on Ubuntu</a></li>
<li><a href="https://sourceforge.net/projects/xclip/">xclip download | SourceForge.net</a></li>
<li><a href="https://stackoverflow.com/questions/3239343/make-install-but-not-to-default-directories">linux - Make install, but not to default directories? - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
22.VSCode中使用bash连接远程服务器时，运行上述`pwd | clip`出现如下报错（MobaXterm中不报错）：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230418225219.png)
根据参考资料4中下述描述：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230419002605.png)
在MobaXterm中`$DISPLAY`生效，但在VSCode中打开的bash终端中`$DISPLAY`并未生效。只需：
- 在MobaXterm中通过`echo $DISPLAY`查看`$DISPLAY`环境变量的值。(若没有，通过`cat /etc/resolv.conf`查看`nameserver`的值)
- 在`.bashrc`中添加：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">DISPLAY</span></span><span class="token operator">=</span><span class="token string">'localhost:29.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
- `source ~/.bashrc`使之生效。
> 参考资料：
> 1. [xclip fails with Error: Can't open display: (null) · Issue #4933 · microsoft/WSL · GitHub](https://github.com/microsoft/WSL/issues/4933)
> 2. [How do I fix a "cannot open display" error when opening an X program after ssh'ing with X11 forwarding enabled? - Super User](https://superuser.com/questions/310197/how-do-i-fix-a-cannot-open-display-error-when-opening-an-x-program-after-sshi)
> 3. [linux - Error: Can't open display: (null) when using Xclip to copy ssh public key - Stack Overflow](https://stackoverflow.com/questions/18695934/error-cant-open-display-null-when-using-xclip-to-copy-ssh-public-key)
> 4. [linux - Error: Can't open display: (null) when using Xclip to copy ssh public key - Stack Overflow](https://stackoverflow.com/questions/18695934/error-cant-open-display-null-when-using-xclip-to-copy-ssh-public-key)
</br>
22.Ubuntu系统复制粘贴：
VSCode终端窗口中可以使用`Ctrl+Shift+C/V`进行复制粘贴；
MobaXterm可以使用`Ctrl+C`进行复制，鼠标右键进行粘贴。
</br>
23.Ubuntu从源码编译安装，安装到指定文件夹：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure --prefix<span class="token operator">=</span>/storage/FT/.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [linux - Make install, but not to default directories? - Stack Overflow](https://stackoverflow.com/questions/3239343/make-install-but-not-to-default-directories)
</br>
24.`tar`解压文件夹：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.runoob.com/linux/linux-comm-tar.html">Linux tar 命令 | 菜鸟教程</a></li>
</ol>
</blockquote>
</br>
25.设置alias
> 参考资料：
> 1. [Bash alias with piping - Super User](https://superuser.com/questions/407104/bash-alias-with-piping)
</br>
26.设置时区。·
`ls -lh`和`date`命令显示的时间不同。
> 参考资料：
> 1. [linux - ls and date showing different file dates - Super User](https://superuser.com/questions/908157/ls-and-date-showing-different-file-dates)
> 2. [How to set or change timezone in linux](https://linuxize.com/post/how-to-set-or-change-timezone-in-linux/)
> 3. [关于Linux中ls -l显示时间不全的问题_nui111的博客-CSDN博客](https://blog.csdn.net/nui111/article/details/42275481)
</br>
27.使用`ln -s`将`dotfiles`仓库中的文件链接到`~`。
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/wsl/.zshrc ~/.zshrc
<span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/wsl/.bash_aliases ~/.bash_aliases
<span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/wsl/.bash_path ~/.bash_path
<span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/wsl/.bashrc ~/.bashrc
<span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/wsl/.vimrc ~/.vimrc
<span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/wsl/.vim/colors/monokai.vim ~/.vim/colors/monokai.vim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</br>
28.Linux的内存统计：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.0xffffff.org/2019/07/17/42-linux-memory-monitor/">聊聊 Linux 的内存统计 | 浅墨的部落格</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode配置</title>
    <url>/2022/05/21/VSCode%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在 VSCode 编辑器中一些常用的配置方法。</p>
<span id="more"></span>
<h3 id="vscode-重新启用错误波形提示"><a class="markdownIt-Anchor" href="#vscode-重新启用错误波形提示"></a> VSCode 重新启用“错误波形提示”</h3>
<p>有两种方式：</p>
<ul>
<li>
<p>手动：</p>
<ol>
<li>文件——首选项——设置（files-&gt;preferences-&gt;settings），搜索 <code>error Squiggles</code>。</li>
<li>在用户 (user) 和工作区 (workspace) 都选择<code>enable</code>。</li>
</ol>
</li>
<li>
<p>快捷键：在命令面板通过快捷键 (Ctrl + Shift + P) 打开搜索栏，搜索 <code>Error Squiggles</code>，选择<code>enable</code>。</p>
<p>PS：只对某些 extensions 有用，如 C/C++ 插件</p>
</li>
</ul>
<blockquote>
<p>参考资料：<a href="https://blog.csdn.net/HermitSun/article/details/103627053">VSCode重新启用“错误波形提示”</a></p>
</blockquote>
<h3 id="vscode-配置快捷键shortcuts"><a class="markdownIt-Anchor" href="#vscode-配置快捷键shortcuts"></a> VSCode 配置快捷键（shortcuts）</h3>
<p>有两种方式：</p>
<ul>
<li>
<p>手动：<code>File -&gt; Preferences -&gt; Keyboard Shortcuts</code>，即可打开窗口手动编辑。</p>
</li>
<li>
<p><code>json</code>文件：在上述打开的窗口中点击右上角的如图按钮编辑<code>json</code>文件：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220523101335662.png" alt="image-20220523101335662" /></p>
</li>
</ul>
<h3 id="vscode-在多个窗口中打开同一项目"><a class="markdownIt-Anchor" href="#vscode-在多个窗口中打开同一项目"></a> VSCode 在多个窗口中打开同一项目</h3>
<ul>
<li>
<p><code>File -&gt; Add Folder to Workspace</code>，添加目标项目到 workspace：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220523101543021.png" alt="image-20220523101543021" /></p>
</li>
<li>
<p><code>File -&gt; Dulplicate Workspace</code>，重复该工作区：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220523101705028.png" alt="image-20220523101705028" /></p>
</li>
</ul>
<h3 id="vscode显示85字符宽度提示线"><a class="markdownIt-Anchor" href="#vscode显示85字符宽度提示线"></a> VSCode显示85字符宽度提示线</h3>
<ul>
<li>
<p><code>File-&gt;Preferences-&gt;Settings</code>，搜索<code>editor.rulers</code>：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220625185036578.png" alt="image-20220625185036578" /></p>
</li>
<li>
<p>打开<code>settings.json</code>，编辑<code>editor.rulers</code>的值为85：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220625185247521.png" alt="image-20220625185247521" /></p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_43406338/article/details/109397831">vs code设置每行代码的垂直标尺</a></li>
</ol>
</blockquote>
<h3 id="vscode设置默认python-interpreter"><a class="markdownIt-Anchor" href="#vscode设置默认python-interpreter"></a> VSCode设置默认Python Interpreter</h3>
<p>依次打开<code>File-&gt;Preferences-&gt;Settings</code>，搜索<code>python.default</code>，配置如下：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220808165221633.png" alt="image-20220808165221633" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://code.visualstudio.com/docs/python/environments">Using Python environments in VS Code</a></li>
</ol>
</blockquote>
<h3 id="vscode关闭editor-enable-preview"><a class="markdownIt-Anchor" href="#vscode关闭editor-enable-preview"></a> VSCode关闭Editor: Enable Preview</h3>
<p>VSCode默认打开Workbench的Preview，其表现为，在单击一个左边的一个文件后，如果在不对其进行modify操作后单击另一个文件，会直接切换为另一个文件而不是在新tab页打开另一个文件，这不符合本人的习惯。</p>
<p>此时，可以通过打开<code>settings</code>搜索<code>preview</code>关键词然后关闭<code>Workbench&gt;Editor: Enable preview</code>来实现：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220729153253563.png" alt="image-20220729153253563" /></p>
<h3 id="vscode出现unexpected-indentation-in-visual-studio-code-with-python"><a class="markdownIt-Anchor" href="#vscode出现unexpected-indentation-in-visual-studio-code-with-python"></a> VSCode出现Unexpected Indentation in Visual Studio Code with Python</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/52224313/unexpected-indentation-in-visual-studio-code-with-python">Unexpected Indentation in Visual Studio Code with Python</a></li>
</ol>
</blockquote>
<h3 id="vscode配置默认terminal"><a class="markdownIt-Anchor" href="#vscode配置默认terminal"></a> VSCode配置默认Terminal</h3>
<ul>
<li>搜索<code>Terminal: Select Default Profile</code></li>
</ul>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220810185654267.png" alt="image-20220810185654267" /></p>
<ul>
<li>
<p>点击目标Terminal如cmd：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220810185807233.png" alt="image-20220810185807233" /></p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/44435697/vscode-change-default-terminal">VSCode Change Default Terminal</a></li>
</ol>
</blockquote>
<h3 id="vscode在运行或者编译c文件出现问题"><a class="markdownIt-Anchor" href="#vscode在运行或者编译c文件出现问题"></a> VSCode在运行或者编译C++文件出现问题</h3>
<p>launch: workingDirectory ‘D:\Develop\msys2\mingw64\bin’ does not exist<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220917002755.png" alt="" /><br />
此时，为<code>.vscode</code>文件夹下的json配置文件出错：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220917002916.png" alt="" /><br />
需要将上图中的<code>msys2</code>改为正确的安装目录<code>msys64</code>。</p>
<h3 id="彻底卸载vscode"><a class="markdownIt-Anchor" href="#彻底卸载vscode"></a> 彻底卸载VSCode</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://bbs.huaweicloud.com/blogs/254150">彻底卸载VSCode</a></li>
</ol>
</blockquote>
<h3 id="vscode配置git终端"><a class="markdownIt-Anchor" href="#vscode配置git终端"></a> VSCode配置Git终端</h3>
<ul>
<li>打开Settings</li>
<li>搜索<code>shell:windows</code>，打开<code>settings.json</code>：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016110802.png" alt="" /></li>
<li>添加如下GitBash终端配置：</li>
</ul>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"GitBash"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"D:\\Develop\\Git\\bin\\bash.exe"</span><span class="token punctuation">,</span>
            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">"icon"</span><span class="token operator">:</span> <span class="token string">"terminal-bash"</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016110936.png" alt="" /></p>
<ul>
<li>重启VSCode，可以发现配置生效<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016111046.png" alt="" /><br />
PS：上述的GitBash不要添加空格使用&quot;Git Bash&quot;，会导致配置无法生效</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/68068359/gitbash-not-showing-up-as-a-terminal-option-in-visual-studio-code">GitBash not showing up as a terminal option in Visual Studio Code</a></li>
</ol>
</blockquote>
<h3 id="vscode-leetcode插件"><a class="markdownIt-Anchor" href="#vscode-leetcode插件"></a> VSCode leetcode插件</h3>
<p>出现<code>command 'leetcode.sign in' not found</code>。<br />
解决方案：</p>
<ul>
<li>在everything中搜索<code>leetcode</code>文件夹，删除如下安装的leetcode插件文件夹<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221031222539.png" alt="" /></li>
<li>搜索<code>.lc</code>文件夹，同样删除<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221031222640.png" alt="" /></li>
<li>重新安装leetcode插件。<br />
当进行代码Test时出现如下问题：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221031225401.png" alt="" /><br />
解决方案：登录leetcode官网后在设置里进行邮箱验证</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/LeetCode-OpenSource/vscode-leetcode/issues/622">Can’t load and login: command ‘leetcode.signin’ not found · Issue #622 · LeetCode-OpenSource/vscode-leetcode · GitHub</a></li>
<li><a href="https://blog.csdn.net/qq_41521512/article/details/115199293">vscode LeetCode显示sign in 成功，但是[ERROR] session expired, please login again [code=-1]的问题！！！_LIQIANDI的博客-CSDN博客</a></li>
<li><a href="https://github.com/skygragon/leetcode-cli/issues/94">登录不上，[ERROR] session expired, please login again [-1] #94</a></li>
</ol>
</blockquote>
<h3 id="vscode-vim插件配置"><a class="markdownIt-Anchor" href="#vscode-vim插件配置"></a> VSCode Vim插件配置</h3>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">//插入模式设置，将双击"j"键映射为"&lt;Esc>"键</span>
<span class="token property">"vim.insertModeKeyBindings"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"j"</span><span class="token punctuation">,</span> <span class="token string">"j"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"&lt;Esc>"</span><span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token comment">//通过键&lt;C-h>等设置为false保留VSCode原生快捷键</span>
<span class="token property">"vim.handleKeys"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
	<span class="token property">"&lt;C-h>"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token property">"&lt;C-a>"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token property">"&lt;C-f>"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token property">"&lt;C-n>"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token property">"&lt;C-p>"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token property">"&lt;C-x>"</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token comment">//使vim不会捕获Ctrl键，从而可以使用所有Ctrl+Key VSCode快捷键，此时可不设置上面</span>
<span class="token property">"vim.useCtrlKeys"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token comment">//"vim.leader"可以看作类似Ctrl的前缀键，可以对Vim做很多的个性化设置</span>
<span class="token property">"vim.leader"</span><span class="token operator">:</span> <span class="token string">"&lt;space>"</span><span class="token punctuation">,</span>
<span class="token property">"vim.commandLineModeKeyBindings"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token comment">//正常模式设置，此处将"H"映射为"^"（行首），将"L"映射为"$"（行尾）</span>
<span class="token property">"vim.normalModeKeyBindings"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
	<span class="token punctuation">&#123;</span>
		<span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"H"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"^"</span><span class="token punctuation">]</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token punctuation">&#123;</span>
		<span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"L"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"$"</span><span class="token punctuation">]</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/188499395">在VSCode里面配置Vim的正确姿势（细节解析） - 知乎</a></li>
<li><a href="https://xie.infoq.cn/article/654e137365b09e217f57bc965">vscode + vim : vscode 全键盘使用方案_vim_lmymirror_InfoQ写作社区</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ry4y1H7zH">指尖飞舞：vscode + vim 高效开发（easymotion）_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.yuexun.me/blog/the-vim-guide-for-vs-code-users/">写给 VS Code 用户的 Vim 入坑指南</a></li>
<li><a href="https://www.pengfeixc.com/blogs/developer-handbook/vim-shortcuts">vim 使用技巧</a></li>
<li><a href="https://www.v2ex.com/t/703444">vs code 使用 vim 插件 快捷键问题 - V2EX</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/430603620">vscode + vim 全键盘操作高效搭配方案 - 知乎</a></li>
<li><a href="https://www.zhaixue.cc/vim/vim-insert.html#:~:text=%E5%B8%B8%E7%94%A8%E7%9A%84vim%E6%8F%92%E5%85%A5%E5%91%BD%E4%BB%A4%EF%BC%9A&amp;text=a%EF%BC%9A%E5%9C%A8%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E7%9A%84,%E7%9A%84%E7%BB%93%E5%B0%BE%E5%A4%84%E6%B7%BB%E5%8A%A0%E6%96%87%E6%9C%AC">vim 文本插入 - 在光标的前面，后面，行尾，行首插入字符 - vim使用入门 | 宅学部落</a></li>
<li><a href="https://stackoverflow.com/questions/62405783/how-do-you-avoid-key-binding-collisions-between-vs-code-and-vscodevim">How do you avoid key binding collisions between VS Code and vscodevim? - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/48369303/use-in-visual-studio-code-vim-extension-caps-instead-of-esc">Use in Visual Studio Code (Vim extension) CAPS instead of ESC - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode-vim打开easymotion和sneak实现文件内任意跳转"><a class="markdownIt-Anchor" href="#vscode-vim打开easymotion和sneak实现文件内任意跳转"></a> VSCode Vim打开EasyMotion和Sneak实现文件内任意跳转</h3>
<h4 id="sneak"><a class="markdownIt-Anchor" href="#sneak"></a> Sneak</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230325225209.png" alt="" /></p>
<ul>
<li><code>s&#123;char&#125;&#123;char&#125;</code>跳转到从光标开始，第一个<code>&#123;char&#125;&#123;char&#125;</code>出现的位置</li>
<li><code>;</code>跳转到下一个出现位置，<code>,</code>跳转到上一个</li>
<li><code>S&#123;char&#125;&#123;char&#125;</code>：反向查找，即方向相反</li>
</ul>
<h4 id="easymotion"><a class="markdownIt-Anchor" href="#easymotion"></a> EasyMotion</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230325225459.png" alt="" /><br />
EasyMotion使你摆脱需要<code>5j</code>或者<code>5k</code>这样数数的麻烦。</p>
<ul>
<li><code>&lt;leader&gt;&lt;leader&gt;w</code>：会使用字母的排列组合标注当前行以及之后的行的单词。<br />
标注前：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230325225622.png" alt="" /><br />
标注后：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230325225650.png" alt="" /><br />
按下对应键即可实现跳转。</li>
<li><code>&lt;leader&gt;&lt;leader&gt;f'</code>，EasyMotion将会标注所有<code>'</code>字符在当前行和之后行出现的位置。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.barbarianmeetscoding.com/boost-your-coding-fu-with-vscode-and-vim/moving-even-faster-with-vim-sneak-and-easymotion/">Moving Even Faster with Vim Surround and EasyMotion | Barbarian Meets Coding</a></li>
</ol>
</blockquote>
<h3 id="vscode配置在终端和编辑器之间切换的快捷键"><a class="markdownIt-Anchor" href="#vscode配置在终端和编辑器之间切换的快捷键"></a> VSCode配置在终端和编辑器之间切换的快捷键</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/Jeffxu_lib/article/details/86651173">VScode在终端和编辑器之间切换的快捷键_Xu小亿的博客-CSDN博客</a></li>
</ol>
</blockquote>
<h3 id="vscode打开new-tab"><a class="markdownIt-Anchor" href="#vscode打开new-tab"></a> VSCode打开new tab</h3>
<p>在VSCode中单击左侧的侧边栏中的file brower中的文件或者通过<code>Ctrl-p</code>搜索跳转或者通过<code>Ctrl+左键</code>在代码中跳转到文件时，会在新的tab打开对应文件，但如果不对该文件进行编辑，文件处于 preview mode (文件名为意大利斜体)：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230114000110.png" alt="" /><br />
此时如果通过上述三种方式打开或跳转到新的文件，之前处于preview mode的文件会被替换掉：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230114000131.png" alt="" /><br />
解决方法：</p>
<ol>
<li>双击左侧侧边栏的文件名或者上方tab的文件名，此时文件会进入edit mode：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230114000313.png" alt="" /></li>
<li>通过设置配置文件<code>settings.json</code> (通过<code>Ctrl-Shift-P</code>搜索<code>User Settings</code>打开) 在里面关闭preview mode：</li>
</ol>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"workbench.editor.enablePreview"</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token property">"workbench.editor.enablePreviewFromQuickOpen"</span><span class="token operator">:</span> <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/38713405/open-files-always-in-a-new-tab">visual studio code - Open files always in a new tab - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode配置defaultformatter"><a class="markdownIt-Anchor" href="#vscode配置defaultformatter"></a> VSCode配置defaultFormatter</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://dev.to/drayeleo/installing-the-ruby-plugin-for-prettier-in-vs-code-2m6c#:~:text=You%20should%20now%20be%20able,for%20macOS">Installing the Ruby Plugin for Prettier in VS Code - DEV Community</a></li>
<li><a href="https://stackoverflow.com/questions/41051423/how-do-i-auto-format-ruby-or-erb-files-in-vs-code">html - How do I auto format Ruby or .erb files in VS Code? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode配置fira-code字体"><a class="markdownIt-Anchor" href="#vscode配置fira-code字体"></a> VSCode配置Fira Code字体</h3>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"editor.fontLigatures"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token property">"editor.fontFamily"</span><span class="token operator">:</span> <span class="token string">"Fira Code"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/38605932">Fira Code: 一个有趣而实用的编程字体 - 知乎</a></li>
<li><a href="https://www.cnblogs.com/kizuna1314/p/15423673.html">visual studio/vscode 使用Fira code字体 - KizunaT - 博客园</a></li>
<li><a href="https://github.com/tonsky/FiraCode/blob/master/README_CN.md">FiraCode/README_CN.md at master · tonsky/FiraCode · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vscode管理java项目"><a class="markdownIt-Anchor" href="#vscode管理java项目"></a> VSCode管理Java项目</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://code.visualstudio.com/docs/java/java-project">Java project management in Visual Studio Code</a></li>
</ol>
</blockquote>
<h3 id="vscode插件推荐"><a class="markdownIt-Anchor" href="#vscode插件推荐"></a> VSCode插件推荐</h3>
<ol>
<li><a href="https://blog.openreplay.com/set-up-codegpt-in-visual-studio-code/">Set up CodeGPT in Visual Studio Code</a></li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/380933740/answer/1554048933">有什么推荐的vs code插件？ - 知乎</a></li>
</ol>
</blockquote>
<h3 id="vscode-c环境配置"><a class="markdownIt-Anchor" href="#vscode-c环境配置"></a> VSCode C++环境配置</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://code.visualstudio.com/docs/languages/cpp">C++ programming with Visual Studio Code</a></li>
<li><a href="https://www.msys2.org/">MSYS2</a></li>
<li><a href="https://packages.msys2.org/package/mingw-w64-x86_64-gcc">Package: mingw-w64-x86_64-gcc - MSYS2 Packages</a></li>
</ol>
</blockquote>
<h3 id="vscode-ssh免密码连接远程服务器"><a class="markdownIt-Anchor" href="#vscode-ssh免密码连接远程服务器"></a> VSCode ssh免密码连接远程服务器</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://code.visualstudio.com/docs/remote/ssh">Developing on Remote Machines using SSH and Visual Studio Code</a></li>
<li><a href="https://code.visualstudio.com/blogs/2019/10/03/remote-ssh-tips-and-tricks">Visual Studio Code Remote SSH Tips and Tricks</a></li>
</ol>
</blockquote>
<h3 id="vscode跳转配置"><a class="markdownIt-Anchor" href="#vscode跳转配置"></a> VSCode跳转配置</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230312161241.png" alt="" /><br />
通过勾选上述选项，可以实现在当前文件窗口更改代码，而无需跳转。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://mailchi.mp/vscode/46">VSCode #46 - A Better Code Folding Extension</a></li>
</ol>
</blockquote>
<h3 id="vscode刷题主题"><a class="markdownIt-Anchor" href="#vscode刷题主题"></a> VSCode刷题主题</h3>
<p>1.Gruvbox Them较为简洁，且变量和关键字区分较为明显，比较适合刷题<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327235910.png" alt="" /></p>
<h3 id="vscode搜索文件"><a class="markdownIt-Anchor" href="#vscode搜索文件"></a> VSCode搜索文件</h3>
<p>快捷键：Ctrl+P</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/30095376/how-do-i-search-for-files-in-visual-studio-code">keyboard shortcuts - How do I search for files in Visual Studio Code? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode-copilot使用"><a class="markdownIt-Anchor" href="#vscode-copilot使用"></a> VSCode Copilot使用</h3>
<p>1.<code>tab</code>键补全。<br />
2.<code>Ctrl + Enter</code>右侧打开Copilot窗口。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://tutorials.tinkink.net/zh-hans/vscode/copilot-usage-and-shortcut.html#%E4%BD%BF%E7%94%A8">Github Copilot 的使用方法和快捷键 | 教程 | Tinkink</a></li>
</ol>
</blockquote>
<h3 id="vscode快捷键"><a class="markdownIt-Anchor" href="#vscode快捷键"></a> VSCode快捷键</h3>
<p>1.<code>Ctrl+P</code>：按文件名搜索文件<br />
2.<code>Ctrl+W</code>：关闭当前文件窗口<br />
3.<code>Ctrl+K+W</code>：关闭所有文件窗口<br />
4.<code>Ctrl+shif+l</code>：选中当前光标所在单词的所有单词<br />
5.<code>Ctrl+,</code>：打开settings。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/44044896">VS Code 的常用快捷键 - 知乎</a></li>
</ol>
</blockquote>
<h3 id="vscode配置插入模式下的vim映射"><a class="markdownIt-Anchor" href="#vscode配置插入模式下的vim映射"></a> VSCode配置插入模式下的Vim映射</h3>
<p>在<code>settings.json</code>中添加：（经使用，不太好用，无法输入H/L/J/K，故取消）</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"vim.insertModeKeyBindings"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"H"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"&lt;Esc>"</span><span class="token punctuation">,</span> <span class="token string">"^"</span><span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"L"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"&lt;Esc>"</span><span class="token punctuation">,</span> <span class="token string">"$"</span><span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"J"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"&lt;Esc>"</span><span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token string">"j"</span><span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"before"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"K"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">"after"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"&lt;Esc>"</span><span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token string">"k"</span><span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/706674/moving-to-the-beginning-of-line-within-vim-insert-mode">Moving to the beginning of line within Vim insert mode - Super User</a></li>
</ol>
</blockquote>
<h3 id="vscode查找光标处单词的所有出现插件"><a class="markdownIt-Anchor" href="#vscode查找光标处单词的所有出现插件"></a> VSCode查找光标处单词的所有出现插件</h3>
<p>Find Word At Cursor。其快捷键配置如下：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230330105601.png" alt="" /><br />
使用步骤为：</p>
<ol>
<li>使用快捷键<code>Ctrl+D</code>选中光标所在单词的所有出现。</li>
<li>使用快捷键<code>Ctrl+-&gt;</code>定位下一个出现，使用快捷键<code>Ctrl+&lt;-</code>定位上一个出现k。<br />
PS：需要覆盖或删除与<code>Ctrl+-&gt;</code>和<code>Ctrl+&lt;-</code>冲突的系统默认快捷键。</li>
</ol>
<h3 id="vscode使用vimrc文件配置vim"><a class="markdownIt-Anchor" href="#vscode使用vimrc文件配置vim"></a> VSCode使用<code>.vimrc</code>文件配置Vim</h3>
<p>在<code>settings</code>中打开<code>.vimrc</code>文件配置，并在指定位置添加<code>.vimrc</code>文件：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230402235543.png" alt="" /><br />
<code>.vimrc</code>内容如下（参考资料2）：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">" Pick a leader key
" Use space as leader key
let mapleader = <span class="token string">" "</span>

nmap H ^
nmap L $
nmap j gj
nmap k gk

set textwidth=<span class="token number">79</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/63017771/how-to-modify-change-the-vimrc-file-in-vscode">vim - How to modify/change the vimrc file in VsCode? - Stack Overflow</a></li>
<li><a href="https://gist.github.com/simonista/8703722">A basic .vimrc file that will serve as a good template on which to build. · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vscode配置80字符和120字符垂直线"><a class="markdownIt-Anchor" href="#vscode配置80字符和120字符垂直线"></a> VSCode配置80字符和120字符垂直线</h3>
<p>在<code>settings.json</code>中添加：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"editor.rulers"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">120</span>
  <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>效果如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230402235455.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/29968499/vertical-rulers-in-visual-studio-code">configuration - Vertical rulers in Visual Studio Code - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode中vim配置复杂命令映射"><a class="markdownIt-Anchor" href="#vscode中vim配置复杂命令映射"></a> VSCode中Vim配置复杂命令映射</h3>
<p>PS：VSCode中跳出文件编辑窗口后<code>&lt;leader&gt;</code>键和其它键不起作用。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.barbarianmeetscoding.com/boost-your-coding-fu-with-vscode-and-vim/elevating-your-worflow-with-custom-mappings/">Elevating Your Workflow With Custom Mappings | Barbarian Meets Coding</a></li>
<li><a href="https://code.visualstudio.com/docs/getstarted/userinterface">Visual Studio Code User Interface</a></li>
<li><a href="https://code.visualstudio.com/api/references/commands">Built-in Commands | Visual Studio Code Extension API</a></li>
<li><a href="https://github.com/VSCodeVim/Vim/issues/2542">How do I assign a mapping to VSCode commands · Issue #2542 · VSCodeVim/Vim · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vscode中nerdtree插件实现文件切换"><a class="markdownIt-Anchor" href="#vscode中nerdtree插件实现文件切换"></a> VSCode中NERDTree插件实现文件切换</h3>
<p>快捷键如下：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230404222129.png" alt="" /></p>
<h3 id="vscode中find-word-at-cursor插件实现定位所有光标处单词并快速移动到下一个"><a class="markdownIt-Anchor" href="#vscode中find-word-at-cursor插件实现定位所有光标处单词并快速移动到下一个"></a> VSCode中Find Word At Cursor插件实现定位所有光标处单词并快速移动到下一个</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230404003727.png" alt="" /><br />
1.<code>Ctrl+D</code>定位所有光标位置单词。<br />
2.<code>Ctrl+-&gt;</code>和<code>Ctrl+&lt;-</code>跳转到上一个/下一个。</p>
<h3 id="vscode中code-ace-jumper插件实现任意跳转"><a class="markdownIt-Anchor" href="#vscode中code-ace-jumper插件实现任意跳转"></a> VSCode中Code Ace Jumper插件实现任意跳转</h3>
<p>按下<code>Ctrl + ;</code>后输入对应字母即可跳转到以该字母为首字母的单词出现位置。</p>
<h3 id="vscode中设置justmycodefalse失效"><a class="markdownIt-Anchor" href="#vscode中设置justmycodefalse失效"></a> VSCode中设置<code>justMyCode=false</code>失效</h3>
<p>当前调试配置文件<code>launch.json</code>为：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token comment">// 使用 IntelliSense 了解相关属性。 </span>
    <span class="token comment">// 悬停以查看现有属性的描述。</span>
    <span class="token comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span>
    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>
    <span class="token property">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Python: Current File"</span><span class="token punctuation">,</span>
            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"python"</span><span class="token punctuation">,</span>
            <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>
            <span class="token property">"program"</span><span class="token operator">:</span> <span class="token string">"$&#123;file&#125;"</span><span class="token punctuation">,</span>
            <span class="token property">"console"</span><span class="token operator">:</span> <span class="token string">"integratedTerminal"</span><span class="token punctuation">,</span>
            <span class="token property">"justMyCode"</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>根据参考资料3在上述<code>launch.json</code>中添加：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"purpose"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"debug-in-terminal"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>即更新为：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Python: Current File"</span><span class="token punctuation">,</span>
            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"python"</span><span class="token punctuation">,</span>
            <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>
            <span class="token property">"program"</span><span class="token operator">:</span> <span class="token string">"$&#123;file&#125;"</span><span class="token punctuation">,</span>
            <span class="token property">"console"</span><span class="token operator">:</span> <span class="token string">"integratedTerminal"</span><span class="token punctuation">,</span>
            <span class="token property">"justMyCode"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">"purpose"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"debug-in-terminal"</span><span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/microsoft/vscode-python/issues/7347">“justMyCode” does not enable standard library debugging · Issue #7347 · microsoft/vscode-python · GitHub</a></li>
<li><a href="https://code.visualstudio.com/docs/python/testing#_debug-tests">Testing Python in Visual Studio Code</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/440413830">VsCode justMyCode: false无效 - 知乎</a></li>
</ol>
</blockquote>
<h3 id="vscode-insiders-vs-vscode"><a class="markdownIt-Anchor" href="#vscode-insiders-vs-vscode"></a> VSCode Insiders vs VSCode</h3>
<p>二者的配置是独立的，但是VSCode Insiders可以同步VSCode的配置。通过关闭对VSCode的同步，然后打开VSCode Insiders的同步便可以从VSCode复制一份配置。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://code.visualstudio.com/docs/supporting/FAQ">Visual Studio Code Frequently Asked Questions</a></li>
<li><a href="https://code.visualstudio.com/insiders/">Download Visual Studio Code Insiders</a></li>
</ol>
</blockquote>
<h3 id="vscode-python错误提示和类型检查"><a class="markdownIt-Anchor" href="#vscode-python错误提示和类型检查"></a> VSCode Python错误提示和类型检查</h3>
<p>问题：插件Pylance会提供对Python文件的类型检查，但是有时候其类型检查较为严格，会爆出很多我们想忽视的错误<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230408141703.png" alt="" /><br />
解决方案：在settings里关闭<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230408141832.png" alt="" /></p>
<h3 id="vscode设置选取候选词切换键为tab"><a class="markdownIt-Anchor" href="#vscode设置选取候选词切换键为tab"></a> VSCode设置选取候选词切换键为tab</h3>
<p>在快捷键中查找selectNextSuggestion设置<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230409110425.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/microsoft/vscode/issues/33645">How to select the non-first item of the candidate selector by using the shortcut key? · Issue #33645 · microsoft/vscode · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vscode在settings-sync-设置同步-中排除某些设置"><a class="markdownIt-Anchor" href="#vscode在settings-sync-设置同步-中排除某些设置"></a> VSCode在settings sync (设置同步) 中排除某些设置</h3>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token property">"settingsSync.ignoredSettings"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
	    <span class="token string">"editor.fontSize"</span><span class="token punctuation">,</span>
		<span class="token string">"-python.defaultInterpreterPath"</span><span class="token punctuation">,</span>
		<span class="token string">"remote.SSH.configFile"</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>快捷键：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
   <span class="token property">"settingsSync.keybindingsPerPlatform"</span><span class="token operator">:</span> True
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/64603768/can-i-exclude-certain-settings-with-vs-code-built-in-settings-sync-feature">Can I exclude certain settings with VS Code built-in settings sync feature? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode显示tab和space并设置颜色"><a class="markdownIt-Anchor" href="#vscode显示tab和space并设置颜色"></a> VSCode显示tab和space并设置颜色</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/30140595/show-whitespace-characters-in-visual-studio-code">Show whitespace characters in Visual Studio Code - Stack Overflow</a></li>
<li><a href="https://github.com/Microsoft/vscode/issues/25956">Setting to change the color and opacity of whitespace characters when made visible… · Issue #25956 · microsoft/vscode · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vscode中使用显示隐藏terminal窗口"><a class="markdownIt-Anchor" href="#vscode中使用显示隐藏terminal窗口"></a> VSCode中使用显示/隐藏terminal窗口</h3>
<p>使用</p>
<pre class="line-numbers language-none"><code class="language-none">Ctrl + &#96;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/48440673/how-to-switch-between-terminals-in-visual-studio-code">How to switch between terminals in Visual Studio Code? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode中切换terminal-tab"><a class="markdownIt-Anchor" href="#vscode中切换terminal-tab"></a> VSCode中切换terminal tab</h3>
<ul>
<li><code>Ctrl + pageDown</code>：</li>
</ul>
<h3 id="vscode出现-error-while-fetching-extensions-xhr-failed"><a class="markdownIt-Anchor" href="#vscode出现-error-while-fetching-extensions-xhr-failed"></a> VSCode出现  “Error while fetching extensions. XHR failed”</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/70177216/visual-studio-code-error-while-fetching-extensions-xhr-failed">marketplace - Visual Studio Code “Error while fetching extensions. XHR failed” - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode配置终端字体"><a class="markdownIt-Anchor" href="#vscode配置终端字体"></a> VSCode配置终端字体</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230615115430.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.nerdfonts.com/font-downloads">Nerd Fonts - Iconic font aggregator, glyphs/icons collection, &amp; fonts patcher</a></li>
</ol>
</blockquote>
<h3 id="vscode配置终端图标"><a class="markdownIt-Anchor" href="#vscode配置终端图标"></a> VSCode配置终端图标</h3>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"Git Bash"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"Git Bash"</span><span class="token punctuation">,</span>
  <span class="token property">"icon"</span><span class="token operator">:</span> <span class="token string">"github"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token property">"Ubuntu (WSL)"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
  <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"C:\\WINDOWS\\System32\\wsl.exe"</span><span class="token punctuation">,</span>
  <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"-d"</span><span class="token punctuation">,</span> <span class="token string">"Ubuntu"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">"icon"</span><span class="token operator">:</span> <span class="token string">"terminal-ubuntu"</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://code.visualstudio.com/docs/terminal/appearance">Terminal Appearance in Visual Studio Code</a></li>
<li><a href="https://code.visualstudio.com/docs/terminal/profiles">Terminal Profiles in Visual Studio Code</a></li>
</ol>
</blockquote>
<h3 id="vscode-neovim"><a class="markdownIt-Anchor" href="#vscode-neovim"></a> VSCode Neovim</h3>
<ul>
<li>映射<code>init.vim</code>文件：</li>
</ul>
<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">mklink C:\Users\26899\AppData\Local\nvim\init.vim D:\Desktop\dotfiles\nvim-win\init.vim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/YunyaSir/p/15523927.html">vscode-nvim - 云崖君 - 博客园</a></li>
<li><a href="https://github.com/VSCodium/vscodium/issues/482">Settings sync is not available · Issue #482 · VSCodium/vscodium · GitHub</a></li>
<li><a href="https://www.chrisatmachine.com/posts/01-ide-crash-course">Neovim IDE Crash Course</a></li>
</ol>
</blockquote>
<h3 id="vscode设置隐藏文件"><a class="markdownIt-Anchor" href="#vscode设置隐藏文件"></a> VSCode设置隐藏文件</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/zwkkkk1/article/details/93742821">如何在VSCode设置/取消隐藏文件_zwkkkk1的博客-CSDN博客</a></li>
</ol>
</blockquote>
<h3 id="vscode关闭word-suggestions单词提示单词建议"><a class="markdownIt-Anchor" href="#vscode关闭word-suggestions单词提示单词建议"></a> VSCode关闭word suggestions(单词提示/单词建议)</h3>
<p>问题：在编辑<code>.tex</code>文件时，会进行全文检索并给出单词提示<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230828123217.png" alt="" /><br />
解决方案：<br />
在<code>settings.json</code>中添加：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"editor.wordBasedSuggestions"</span><span class="token operator">:</span> <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/50890967/disable-word-based-suggestion-in-visual-studio-code">Disable word based suggestion in Visual Studio Code - Stack Overflow</a></li>
<li><a href="https://support.tabnine.com/hc/en-us/articles/11623814014865-How-to-Enable-Disable-Inline-Suggestions-in-VS-Code">How to Enable/Disable Inline Suggestions in VS Code – Tabnine</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim使用指南</title>
    <url>/2023/02/03/Vim%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下从IDE转为Vim的一些资料和教程：</p>
<span id="more"></span>
<ol>
<li><a href="https://juejin.cn/book/7051157342770954277/section/7051399376945545252">Neovim配置实战</a>：掘金小册，30块</li>
<li><a href="https://ichunyu.github.io/neovim/">NeoVim 基本配置 - 某春雨的后花园</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/467428462">我的现代化 NeoVim 配置介绍/教程 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/382092667">我的现代化Neovim配置 - 知乎</a></li>
<li><a href="https://spacevim.org/cn/quick-start-guide/#windows">入门指南 | SpaceVim</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/571617696">学习 Neovim 全 lua 配置 - 知乎</a>：Neovim配置实战的旧版，免费</li>
<li><a href="https://alpha2phi.medium.com/learn-neovim-the-practical-way-8818fcf4830f">Learn Neovim The Practical Way. All articles on how to configure and… | by alpha2phi | Medium</a>：medium上关于neovim配置的系列文章</li>
<li><a href="https://github.com/LunarVim/Neovim-from-scratch">GitHub - LunarVim/Neovim-from-scratch: 📚 A Neovim config designed from scratch to be understandable</a>：Lunar官方配置教程</li>
<li><a href="https://www.youtube.com/watch?v=ctH-a-1eUME&amp;list=PLhoH5vyxr6Qq41NFL4GvhFp-WLd5xzIzZ&amp;ab_channel=chris%40machine">Neovim IDE from Scratch</a>：Neovim配置视频教程</li>
<li><a href="https://www.lunarvim.org/">LunarVim | LunarVim</a>：neovim的变种，便于配置</li>
<li><a href="https://spacevim.org/">Home | SpaceVim</a>：neovim的变种，便于配置</li>
<li><a href="https://astronvim.com/">Getting Started | AstroNvim</a>：neovim的变种，便于配置</li>
<li><a href="https://www.openvim.com/">Interactive Vim tutorial</a>：在线vim交互式教程。</li>
<li>[GitHub - fengstats/vscode-settings: my vscode settings and theme config]：<a href="https://www.bilibili.com/video/BV1i24y1L7uG">VSCode | 日常工作流分享_哔哩哔哩_bilibili</a>中分享的配置</li>
<li><a href="https://github.com/LintaoAmons/CoolStuffes">GitHub - LintaoAmons/CoolStuffes: 我的分享放这里了，大家随便拿去用啊，记得给个星星就行啦～</a>：b站up主的配置</li>
<li><a href="https://github.com/NvChad/NvChad">NvChad</a>：NvChad，另一个neovim的变种。</li>
<li><a href="https://www.imooc.com/learn/1129">玩转Vim 从放弃到爱不释手-Vim入门-慕课网</a>：b站PegasusWang出品的免费Vim慕课教程</li>
<li><a href="https://www.cs.swarthmore.edu/oldhelp/vim/home.html">vim tips and tricks: home</a>：Vim在线交互学习网站。</li>
<li><a href="https://vim.fandom.com/wiki/Vim_Tips_Wiki">Vim Tips Wiki | Fandom</a>：vim tips</li>
<li><a href="https://vim.rtorr.com/lang/zh_cn">Vim Cheat Sheet</a>：vim常用命令大全</li>
</ol>
<h3 id="碰到的一些问题的解决方法"><a class="markdownIt-Anchor" href="#碰到的一些问题的解决方法"></a> 碰到的一些问题的解决方法</h3>
<ol>
<li><a href="https://github.com/LunarVim/Neovim-from-scratch/issues/274">No C compiler found · Issue #274 · LunarVim/Neovim-from-scratch · GitHub</a></li>
</ol>
<h3 id="neovim配置步骤"><a class="markdownIt-Anchor" href="#neovim配置步骤"></a> neovim配置步骤</h3>
<h4 id="借鉴配置"><a class="markdownIt-Anchor" href="#借鉴配置"></a> 借鉴配置</h4>
<p>可供借鉴的配置有：</p>
<ol>
<li><a href="https://github.com/nshen/learn-neovim-lua">GitHub - nshen/learn-neovim-lua: Neovim 配置实战：从 0 到 1 打造自己的 IDE</a></li>
<li><a href="https://github.com/leslie255/nvim-config">GitHub - leslie255/nvim-config: A pretty epic NeoVim setup</a></li>
<li><a href="https://github.com/ayamir/nvimdots">GitHub - ayamir/nvimdots: A well configured and structured Neovim.</a><br />
此处以第3个配置为例，介绍配置流程。（因为第3个配置最为复杂，且使用较为丰富的插件，和更小众、更新型的插件管理工具lazy.nvim。<br />
此处，先把<code>dotfiles</code>仓库中的对应文件夹映射到<code>~/.config/nvim</code>：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -s /mnt/d/Desktop/dotfiles/nvim2 ~/.config/nvim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="安装lazyvim插件管理器"><a class="markdownIt-Anchor" href="#安装lazyvim插件管理器"></a> 安装lazy.vim插件管理器</h4>
<ol>
<li>直接在终端运行<code>nvim init.lua</code>，让neovim自动安装，出现如下报错，即无法从github clone lazy.vim进行安装。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230204222425.png" alt="" /><br />
原因：git出现问题，需要进行配置。<br />
解决方案：向github账户添加ssh验证。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的github账户名"</span>
<span class="token function">git</span> config --global user.email <span class="token string">"你的github账户默认的邮箱地址"</span>
ssh-keygen -t rsa -b <span class="token number">4096</span> -C <span class="token string">"你的github账户默认的邮箱地址"</span>
<span class="token function">cat</span> ~/.ssh/id_rsa.pub <span class="token comment"># 添加到git ssh</span>
ssh-keyscan -t rsa github.com <span class="token operator">>></span> ~/.ssh/known_hosts <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>进行上述配置后，再次运行<code>nvim init.lua</code>，会发现如下错误，即<code>efm-langserver</code>无法安装：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230204223330.png" alt="" /><br />
原因：<code>efm-langserver</code>使用go语言编写，其使用go的包管理工具进行安装。<br />
解决方案：安装go语言。</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载对应版本go压缩包后解压到指定目录</span>
<span class="token function">sudo</span> <span class="token function">tar</span> -C /usr/local -xzf go1.20.linux-amd64.tar.gz
<span class="token comment"># 将对应目录添加至PATH环境变量，写入~/.bashrc使其永久生效</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/go/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>再次运行<code>nvim init.lua</code>，发现仍然无法安装。<br />
原因：go仓库源在国内无法稳定访问<br />
解决方案：配置国内镜像源，在<code>.bashrc</code>文件中写入：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启用 Go Modules 功能</span>
go <span class="token function">env</span> -w <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on

<span class="token comment"># 配置 GOPROXY 环境变量，以下三选一</span>

<span class="token comment"># 1. 七牛 CDN</span>
go <span class="token function">env</span> -w  <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>再次运行<code>nvim init.lua</code>，发现仍然无法安装。报如下错误：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Can only use path@version syntax with <span class="token string">'go get'</span>?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>原因：go1.16以下版本无法通过<code>go install path@version</code>安装。<br />
解决方案：卸载掉<code>apt-get</code>默认安装的<code>go1.13</code>版本，手动安装<code>go1.20</code>并添加到指定路径（也可以手动安装efm和gopls）：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/go/bin
<span class="token comment"># 启用 Go Modules 功能</span>
go <span class="token function">env</span> -w <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on
<span class="token comment"># 2. 阿里云</span>
go <span class="token function">env</span> -w <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://mirrors.aliyun.com/goproxy/,direct<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/mattn/efm-langserver/issues/220">Can only use path@version syntax with ‘go get’? · Issue #220 · mattn/efm-langserver · GitHub</a></li>
<li><a href="https://github.com/ayamir/nvimdots/issues/98">efm-langserver: Error while opening a new .cc file · Issue #98 · ayamir/nvimdots · GitHub</a></li>
</ol>
</blockquote>
<h3 id="配置主题"><a class="markdownIt-Anchor" href="#配置主题"></a> 配置主题</h3>
<p>以上述安装的配置为例。</p>
<ol>
<li>在对应配置文件<code>lua/ui/plugins.lua</code>中添加主题：</li>
</ol>
<pre class="line-numbers language-lua" data-language="lua"><code class="language-lua">ui<span class="token punctuation">[</span><span class="token string">"folke/tokyonight.nvim"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	lazy <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
	name <span class="token operator">=</span> <span class="token string">"tokyonight"</span><span class="token punctuation">,</span> 
	config <span class="token operator">=</span> conf<span class="token punctuation">.</span>tokyonight<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>在对应配置文件中<code>lazy-lock.json</code>中添加主题仓库信息：</li>
</ol>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"tokyonight"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"branch"</span><span class="token operator">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token property">"commit"</span><span class="token operator">:</span> <span class="token string">"affb21a81e6d7de073378eb86d02864c594104d9"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="3">
<li>在<code>lua/core/settings.lua</code>中将<code>colorsheme</code>设置为<code>tokyonight</code>：</li>
</ol>
<pre class="line-numbers language-lua" data-language="lua"><code class="language-lua">settings<span class="token punctuation">[</span><span class="token string">"colorscheme"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"tokyonight"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="neovim配置java环境"><a class="markdownIt-Anchor" href="#neovim配置java环境"></a> neovim配置java环境</h3>
<ol>
<li>下载解压jdt-language-server：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建workspace目录，后面会用到</span>
<span class="token function">mkdir</span> -p ~/.local/share/nvim/lsp/jdt-language-server/workspace/folder
<span class="token builtin class-name">cd</span> ~/.local/share/nvim/lsp/jdt-language-server
<span class="token comment"># 下载jdt-language-server-xxxxx.tar.gz</span>
<span class="token function">wget</span> https://download.eclipse.org/jdtls/milestones/1.9.0/jdt-language-server-1.9.0-202203031534.tar.gz
<span class="token comment"># 解压</span>
<span class="token function">tar</span> -zxvf jdt-language-server-1.9.0-202203031534.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>创建<code>/lua/modules/lang/usr/</code>文件夹，并添加<code>config.lua</code>和<code>plugins.lua</code>两个文件，文件内容如下：<br />
config.lua：</li>
</ol>
<pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token keyword">local</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> config<span class="token punctuation">.</span><span class="token function">java</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">local</span> opts <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
		cmd <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
			<span class="token string">"java"</span><span class="token punctuation">,</span> 
			<span class="token string">"-Declipse.application=org.eclipse.jdt.ls.core.id1"</span><span class="token punctuation">,</span>
			<span class="token string">"-Dosgi.bundles.defaultStartLevel=4"</span><span class="token punctuation">,</span>
			<span class="token string">"-Declipse.product=org.eclipse.jdt.ls.core.product"</span><span class="token punctuation">,</span>
			<span class="token string">"-Dlog.protocol=true"</span><span class="token punctuation">,</span>
			<span class="token string">"-Dlog.level=ALL"</span><span class="token punctuation">,</span>
			<span class="token string">"-Xms1g"</span><span class="token punctuation">,</span>
			<span class="token string">"--add-modules=ALL-SYSTEM"</span><span class="token punctuation">,</span>
			<span class="token string">"--add-opens"</span><span class="token punctuation">,</span>
			<span class="token string">"java.base/java.util=ALL-UNNAMED"</span><span class="token punctuation">,</span>
			<span class="token string">"--add-opens"</span><span class="token punctuation">,</span>
			<span class="token string">"java.base/java.lang=ALL-UNNAMED"</span><span class="token punctuation">,</span>
			<span class="token string">"-jar"</span><span class="token punctuation">,</span>
			<span class="token string">"/home/fg/.local/share/nvim/lsp/jdt-language-server/plugins/org.eclipse.equinox.launcher_1.6.400.v20210924-0641.jar"</span><span class="token punctuation">,</span>
			<span class="token string">"-configuration"</span><span class="token punctuation">,</span>
			<span class="token string">"/home/fg/.local/share/nvim/lsp/jdt-language-server/config_linux"</span><span class="token punctuation">,</span>
			<span class="token string">"-data"</span><span class="token punctuation">,</span>
			<span class="token string">"/home/fg/.local/share/nvim/lsp/jdt-language-server/workspace/folder"</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		root_dir <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"jdtls.setup"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find_root</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token string">".git"</span><span class="token punctuation">,</span> <span class="token string">"mvnw"</span><span class="token punctuation">,</span> <span class="token string">"gradlew"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		settings <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
			java <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		init_options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
			bundles <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token punctuation">&#125;</span>
	<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"jdtls"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start_or_attach</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">return</span> config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>plugins.lua：</p>
<pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token keyword">local</span> custom <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
<span class="token keyword">local</span> conf <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"modules.lang.user.config"</span><span class="token punctuation">)</span>

custom<span class="token punctuation">[</span><span class="token string">"mfussenegger/nvim-jdtls"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	lazy <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
	ft <span class="token operator">=</span> <span class="token string">"java"</span><span class="token punctuation">,</span>
	config <span class="token operator">=</span> conf<span class="token punctuation">.</span>java<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">return</span> custom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>在<code>lazy-lock.json</code>添加仓库信息：</li>
</ol>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"nvim-jdtls"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"branch"</span><span class="token operator">:</span> <span class="token string">"master"</span><span class="token punctuation">,</span> <span class="token property">"commit"</span><span class="token operator">:</span> <span class="token string">"1f640d14d17f20cfc63c1acc26a10f9466e66a75"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="4">
<li>在<code>/lua/modules/editor/config.lua</code>中添加<code>java</code>的语法高亮：</li>
</ol>
<pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"nvim-treesitter.configs"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
		ensure_installed <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
		<span class="token string">"java"</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="5">
<li>在<code>/lua/modules/editor/config.lua</code>中添加java的debug配置：</li>
</ol>
<pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token comment">-- local dap = require('dap')</span>
dap<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span>java <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
		<span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
			type <span class="token operator">=</span> <span class="token string">'server'</span><span class="token punctuation">;</span>
			host <span class="token operator">=</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">;</span>
			port <span class="token operator">=</span> port<span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>

<span class="token comment">-- local dap = require('dap')</span>
dap<span class="token punctuation">.</span>configurations<span class="token punctuation">.</span>java <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token punctuation">&#123;</span>
	classPaths <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

	<span class="token comment">-- If using multi-module projects, remove otherwise.</span>
	projectName <span class="token operator">=</span> <span class="token string">"yourProjectName"</span><span class="token punctuation">,</span>

	javaExec <span class="token operator">=</span> <span class="token string">"/usr/bin/java"</span><span class="token punctuation">,</span>
	mainClass <span class="token operator">=</span> <span class="token string">"your.package.name.MainClassName"</span><span class="token punctuation">,</span>
	modulePaths <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	name <span class="token operator">=</span> <span class="token string">"Launch YourClassName"</span><span class="token punctuation">,</span>
	request <span class="token operator">=</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>
	type <span class="token operator">=</span> <span class="token string">"java"</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>	<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/lxyoucan/nvim-as-java-ide">GitHub - lxyoucan/nvim-as-java-ide: 从零开始搭建Neovim Java IDE开发环境</a></li>
<li><a href="https://github.com/ayamir/nvimdots/wiki/Usage">Usage · ayamir/nvimdots Wiki · GitHub</a></li>
<li><a href="https://github.com/mfussenegger/nvim-dap/wiki/Java">Java · mfussenegger/nvim-dap Wiki · GitHub</a></li>
<li><a href="https://github.com/mfussenegger/nvim-jdtls">GitHub - mfussenegger/nvim-jdtls: Extensions for the built-in LSP support in Neovim for eclipse.jdt.ls</a></li>
</ol>
</blockquote>
</br>
### Vim模式在中文输入法下的问题。
> 参考资料：
> 1. [Vim模式在中文输入法下的问题 - 建议反馈 - Obsidian 中文论坛](https://forum-zh.obsidian.md/t/topic/11234/2)
</br>
### Obsidian vim模式配置
对Obsidian的`.obsidian.vimrc`文件配置`Ctrl`键（对Obsidian而言需要安装Vimrc Support插件）
<pre class="line-numbers language-.vimrc" data-language=".vimrc"><code class="language-.vimrc">&quot;set some Ctrl- shortcuts&quot;
nmap &lt;C-[&gt; &lt;C-d&gt; #映射为outdent，不能生效
imap &lt;C-[&gt; &lt;C-d&gt; #映射伪outdent，不能生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
PS：
> 参考资料：
> 1. [key bindings - How to disable Ctrl key? - Vi and Vim Stack Exchange](https://vi.stackexchange.com/questions/4060/how-to-disable-ctrl-key)
> 2. [key bindings -  Vim Stack Exchange](https://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570)
> 3. [GitHub - esm7/obsidian-vimrc-support: A plugin for the Obsidian.md note-taking software](https://github.com/esm7/obsidian-vimrc-support)
> 4. [Can't map the Tab key w/o Mod Keys · Issue #48 · esm7/obsidian-vimrc-support · GitHub](https://github.com/esm7/obsidian-vimrc-support/issues/48) 
> 5. [vim tips and tricks: indenting](https://www.cs.swarthmore.edu/oldhelp/vim/indenting.html#:~:text=To%20indent%20the%20current%20line,by%20sw%20(repeat%20with%20.%20)&text=then%20try%20hitting%20the%20F5,or%20just%20%3Aset%20paste%20).)
</br>
### vim中yy复制到系统剪贴板
设置vim中的yy可以copy to clipboard：
- Obsidian配置，在`.obsidian.vimrc`文件中添加：
<pre class="line-numbers language-.vimrc" data-language=".vimrc"><code class="language-.vimrc">&quot;Yank to system clipboard&quot;
set clipboard&#x3D;unnamed #重启后生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
- VSCode配置，在settings中搜索`vim clip`点击生效：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/1.png)
> 参考资料：
>1. [VS code VIM extension copy and paste - Stack Overflow](https://stackoverflow.com/questions/58306002/vs-code-vim-extension-copy-and-paste)
>2. [How to copy to clipboard in Vim? - Stack Overflow](https://stackoverflow.com/questions/3961859/how-to-copy-to-clipboard-in-vim)
>3. [GitHub - esm7/obsidian-vimrc-support: A plugin for the Obsidian.md note-taking software](https://github.com/esm7/obsidian-vimrc-support)
</br>
### Vim中各种map模式nmap/imap等详解：
> 参考资料：
> 1. [What is the difference between the remap, noremap, nnoremap and vnoremap mapping commands in Vim? - Stack Overflow](https://stackoverflow.com/questions/3776117/what-is-the-difference-between-the-remap-noremap-nnoremap-and-vnoremap-mapping)
> 2. [key bindings - What is the difference between unmap and mapping to  nop? - Vi and Vim Stack Exchange](https://vi.stackexchange.com/questions/16392/what-is-the-difference-between-unmap-and-mapping-to-nop?noredirect=1)
</br>
### `Ctrl`/`Shift`/方向键/Fn键的映射：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/508655/map-shift-f3-in-vimrc">vim - Map Shift + F3 in .vimrc - Super User</a></li>
<li><a href="https://stackoverflow.com/questions/7542381/vim-how-to-specify-arrow-keys">vim: how to specify arrow keys - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
### `.vimrc`配置文件中`<CR>`的含义：
> 参考资料：
> 1. [What is the meaning of a CR at the end of some vim mappings? - Stack Overflow](https://stackoverflow.com/questions/22142755/what-is-the-meaning-of-a-cr-at-the-end-of-some-vim-mappings)
</br>
</br>
### Ubuntu和wsl中vim配置
Ubuntu和wsl中进行基础的`.vimrc`配置：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://gist.github.com/simonista/8703722">A basic .vimrc file that will serve as a good template on which to build. · GitHub</a></li>
<li><a href="https://juejin.cn/s/ubuntu%E4%B8%8Bvim%E7%9A%84%E9%85%8D%E7%BD%AEvimrc">ubuntu下vim的配置vimrc-掘金</a></li>
<li><a href="https://stackoverflow.com/questions/9206797/error-trailing-characters-in-ubuntu">vim - Error Trailing Characters in Ubuntu - Stack Overflow</a></li>
<li><a href="https://github.com/microsoft/terminal/issues/4335">Vim cursor can’t be changed · Issue #4335 · microsoft/terminal · GitHub</a></li>
<li><a href="https://www.reddit.com/r/vim/comments/uvizcu/changing_vim_cursor_in_windows_terminal/">Changing Vim cursor in Windows Terminal : vim</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Vim</tag>
        <tag>neovim</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim学习笔记</title>
    <url>/2022/11/20/Vim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文记录一下在学习Vim过程中的经验和总结：</p>
<span id="more"></span>
<h3 id="vim删除查找匹配的行"><a class="markdownIt-Anchor" href="#vim删除查找匹配的行"></a> Vim删除查找匹配的行</h3>
<p>例如，要全局替换掉包含<code>file:</code>的行：</p>
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token punctuation">:</span>g<span class="token operator">/</span><span class="token keyword">file</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token keyword">d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/hanshileiai/article/details/50528505">vim 删除匹配行_中国风2012的博客-CSDN博客_vim 删除匹配行</a></li>
</ol>
</blockquote>
<h3 id="vim复制-粘贴然后替换"><a class="markdownIt-Anchor" href="#vim复制-粘贴然后替换"></a> Vim复制、粘贴然后替换</h3>
<p>以下面代码为例：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327191509.png" alt="" /><br />
我们的目的是将<code>pass</code>替换为<code>if __name__ == &quot;__main__&quot;</code>。步骤如下：<br />
1.在visual模式下选择<code>if __name__ == &quot;__main__&quot;</code>，然后在normal模式下按下<code>y</code>复制。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327191750.png" alt="" /><br />
2.在visual模式下选择<code>pass</code>，按下<code>y</code>即可进行替换：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327191812.png" alt="" /><br />
便可得到下述结果：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327191848.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/371160/copy-delete-then-paste-in-vim">Copy, delete, then paste in Vim - Super User</a></li>
</ol>
</blockquote>
<h3 id="vim移动"><a class="markdownIt-Anchor" href="#vim移动"></a> Vim移动</h3>
<p>1.<code>w</code>、<code>b</code>、<code>e</code>。<code>e</code>用于移动到光标所在位置的下一个单词的末尾。<br />
2.<code>W</code>、<code>B</code>、<code>E</code>。跳转到下一个空格。<br />
3.<code>%</code>。跳到对应的括号。</p>
<h3 id="vim-tab页切换"><a class="markdownIt-Anchor" href="#vim-tab页切换"></a> Vim Tab页切换</h3>
<p>1.<code>gt</code>：右边的tab页。已经映射为<code>&lt;leader&gt;l</code>。<br />
2.<code>gT</code>：左边的tab页。已经映射为<code>&lt;leader&gt;h</code>。</p>
<h3 id="leetcode网页端vim模式"><a class="markdownIt-Anchor" href="#leetcode网页端vim模式"></a> leetcode网页端Vim模式</h3>
<p>问题1：按下<code>Esc</code>键会跳出编辑窗口。<br />
解决方案：编辑前使用<code>:imap jj &lt;Esc&gt;</code>进行映射，或者使用<code>Ctrl+C</code>进入normal模式。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://leetcode.com/discuss/general-discussion/446981/vim-command-mode">VIM Command Mode</a></li>
</ol>
</blockquote>
<h3 id="vim配置特定主题"><a class="markdownIt-Anchor" href="#vim配置特定主题"></a> Vim配置特定主题</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://linuxhint.com/best_vim_color_schemes/">Best vim color schemes and how to install</a></li>
</ol>
</blockquote>
<h3 id="vim禁止闪烁"><a class="markdownIt-Anchor" href="#vim禁止闪烁"></a> Vim禁止闪烁</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/5933568/disable-blinking-at-the-first-last-line-of-the-file">vim - Disable blinking at the first/last line of the file - Stack Overflow</a></li>
<li><a href="https://vi.stackexchange.com/questions/22547/how-to-prevent-vim-from-making-a-flashy-screen-effect-when-pressing-esc-or">terminal - How to prevent Vim from making a flashy screen effect when pressing <code>ESC</code> or <code>^[</code> in normal mode? - Vi and Vim Stack Exchange</a></li>
</ol>
</blockquote>
<h3 id="git-bash-vim主题显示和对应主题不一致"><a class="markdownIt-Anchor" href="#git-bash-vim主题显示和对应主题不一致"></a> git bash Vim主题显示和对应主题不一致</h3>
<p>推测原因为终端不支持256 color，见参考资料2。可在<code>.zshrc</code>中添加如下配置：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">TERM</span></span><span class="token operator">=</span>xterm-256color<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.reddit.com/r/vim/comments/ebylxb/vim_from_git_bash_showing_weird_colorscheme/">Reddit - Dive into anything</a></li>
<li><a href="https://github.com/romkatv/powerlevel10k/issues/1840">Configuration wizard missing · Issue #1840 · romkatv/powerlevel10k · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vim复制到剪切板-clipboard"><a class="markdownIt-Anchor" href="#vim复制到剪切板-clipboard"></a> Vim复制到剪切板 clipboard</h3>
<p>参考资料3设置有效</p>
<blockquote>
<p>参考资料：<br />
1.<a href="https://stackoverflow.com/questions/30691466/what-is-difference-between-vims-clipboard-unnamed-and-unnamedplus-settings">What is difference between Vim’s clipboard “unnamed” and “unnamedplus” settings? - Stack Overflow</a><br />
2.  <a href="https://superuser.com/questions/1291425/windows-subsystem-linux-make-vim-use-the-clipboard">Windows Subsystem Linux - Make VIM use the clipboard? - Super User</a><br />
3. <a href="https://waylonwalker.com/vim-wsl-clipboard/">Vim Wsl Clipboard</a></p>
</blockquote>
<h3 id="git中使用zsh在git仓库中响应过慢"><a class="markdownIt-Anchor" href="#git中使用zsh在git仓库中响应过慢"></a> git中使用zsh在git仓库中响应过慢</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 当前仓库配置</span>
<span class="token function">git</span> config --add oh-my-zsh.hide-status <span class="token number">1</span>
<span class="token function">git</span> config --add oh-my-zsh.hide-dirty <span class="token number">1</span>

<span class="token comment"># 全局配置</span>
<span class="token function">git</span> config --global --add oh-my-zsh.hide-status <span class="token number">1</span>
<span class="token function">git</span> config --global --add oh-my-zsh.hide-dirty <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/12765344/oh-my-zsh-slow-but-only-for-certain-git-repo">oh-my-zsh slow, but only for certain Git repo - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vscode中使用jk切换intellisense-suggestions"><a class="markdownIt-Anchor" href="#vscode中使用jk切换intellisense-suggestions"></a> VSCode中使用j/k切换IntelliSense suggestions</h3>
<p>在<code>keybindings.json</code>中添加：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
	<span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"j"</span><span class="token punctuation">,</span>
	<span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"selectNextSuggestion"</span><span class="token punctuation">,</span>
	<span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"suggestWidgetMultipleSuggestions &amp;&amp; suggestWidgetVisible &amp;&amp; textInputFocus &amp;&amp; vim.mode=='Insert'"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#123;</span>
	<span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"k"</span><span class="token punctuation">,</span>
	<span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"selectPrevSuggestion"</span><span class="token punctuation">,</span>
	<span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"suggestWidgetMultipleSuggestions &amp;&amp; suggestWidgetVisible &amp;&amp; textInputFocus &amp;&amp; vim.mode=='Insert'"</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://airyboy.medium.com/using-vim-like-navigation-for-intellisense-suggestions-in-vscode-3c310ac73844">Using vim-like navigation for IntelliSense suggestions in VSCode | by Airy | Medium</a></li>
</ol>
</blockquote>
<h3 id="vim映射键"><a class="markdownIt-Anchor" href="#vim映射键"></a> Vim映射键</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/VSCodeVim/Vim">GitHub - VSCodeVim/Vim: Vim for Visual Studio Code</a></li>
<li><a href="https://unix.stackexchange.com/questions/180926/disable-or-remove-default-vim-keybinding">key mapping - Disable or remove default vim keybinding - Unix &amp; Linux Stack Exchange</a></li>
</ol>
</blockquote>
<h3 id="vim对文件显示颜色"><a class="markdownIt-Anchor" href="#vim对文件显示颜色"></a> Vim对文件显示颜色</h3>
<ul>
<li><code>:set syntax=json</code>：临时生效，使得<code>json</code>文件具有颜色。还有<code>:set syntax=html</code>等方式。</li>
<li></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/19657384/vim-doesnt-show-a-certain-file-with-colors">Vim doesn’t show a certain file with colors - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/11666170/persistent-set-syntax-for-a-given-filetype">vim - Persistent :set syntax for a given filetype? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vim识别文件并语法高亮"><a class="markdownIt-Anchor" href="#vim识别文件并语法高亮"></a> Vim识别文件并语法高亮</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/620374/how-to-make-my-vim-recognize-filetype-and-load-the-corresponding-syntax-file">gvimrc - How to make my vim recognize filetype and load the corresponding syntax file - Super User</a></li>
</ol>
</blockquote>
<h3 id="vim配置行移动-moving-lines-up-or-down"><a class="markdownIt-Anchor" href="#vim配置行移动-moving-lines-up-or-down"></a> vim配置行移动 (Moving lines up or down)</h3>
<p>主要使用参考资料3<br />
在<code>.vimrc</code>中添加：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">map <span class="token operator">&lt;</span>Esc<span class="token operator">></span>j <span class="token operator">&lt;</span>A-j<span class="token operator">></span>
map <span class="token operator">&lt;</span>Esc<span class="token operator">></span>k <span class="token operator">&lt;</span>A-k<span class="token operator">></span>
nnoremap <span class="token operator">&lt;</span>A-j<span class="token operator">></span> :m .+<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>CR<span class="token operator">>=</span><span class="token operator">=</span>
nnoremap <span class="token operator">&lt;</span>A-k<span class="token operator">></span> :m .-<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>CR<span class="token operator">>=</span><span class="token operator">=</span>
inoremap <span class="token operator">&lt;</span>A-j<span class="token operator">></span> <span class="token operator">&lt;</span>Esc<span class="token operator">></span>:m .+<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>CR<span class="token operator">>=</span><span class="token operator">=</span>gi
inoremap <span class="token operator">&lt;</span>A-k<span class="token operator">></span> <span class="token operator">&lt;</span>Esc<span class="token operator">></span>:m .-<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>CR<span class="token operator">>=</span><span class="token operator">=</span>gi
vnoremap <span class="token operator">&lt;</span>A-j<span class="token operator">></span> :m <span class="token string">'>+1&lt;CR>gv=gv
vnoremap &lt;A-k> :m '</span><span class="token operator">&lt;</span>-<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>CR<span class="token operator">></span>gv<span class="token operator">=</span>gv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://vim.fandom.com/wiki/Moving_lines_up_or_down#:~:text=Mappings%20to%20move%20lines,-The%20following%20mappings&amp;text=In%20normal%20mode%20or%20in,move%20the%20current%20line%20up.">Moving lines up or down</a></li>
<li><a href="https://vi.stackexchange.com/questions/2674/how-can-i-easily-move-a-line">key bindings - How can I easily move a line? - Vi and Vim Stack Exchange</a></li>
<li><a href="https://stackoverflow.com/questions/49052619/any-mapping-in-vimrc-with-alt-isnt-working">vim - Any mapping in vimrc with Alt isn’t working - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vim中删除空行"><a class="markdownIt-Anchor" href="#vim中删除空行"></a> Vim中删除空行</h3>
<pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token punctuation">:</span>g<span class="token operator">/</span>^$<span class="token operator">/</span><span class="token keyword">d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>PS：由于vscode中vim插件为vim模拟器，未实现g (global) 功能。故考虑迁移到vscode-neovim (其非模拟器，而是之间调用本地安装的neovim)</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/carbon3/p/5915282.html">vim删除空行和注释 - 碳 - 博客园</a></li>
</ol>
</blockquote>
<h3 id="vim使用hl移动到wrap-line的行首行尾"><a class="markdownIt-Anchor" href="#vim使用hl移动到wrap-line的行首行尾"></a> Vim使用H/L移动到wrap line的行首/行尾</h3>
<pre class="line-numbers language-.vimrc" data-language=".vimrc"><code class="language-.vimrc">noremap &lt;silent&gt; H g^ &#x2F;&#x2F; g^和g0等价，即0和^等价
noremap &lt;silent&gt; L g$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://vim.fandom.com/wiki/Move_cursor_by_display_lines_when_wrapping">Move cursor by display lines when wrapping | Vim Tips Wiki | Fandom</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10常见操作</title>
    <url>/2022/05/22/Windows10%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>本文记录一下使用 Windows10 过程中的常见操作：</p>
<span id="more"></span>
<h3 id="查看-windows版本信息"><a class="markdownIt-Anchor" href="#查看-windows版本信息"></a> 查看 Windows版本信息</h3>
<ul>
<li><code>Win + R</code>打开窗口</li>
<li>窗口中输入 <code>winver</code> 回车，即可查看 Windows10 版本信息</li>
</ul>
<h3 id="查看windows-net-framework版本"><a class="markdownIt-Anchor" href="#查看windows-net-framework版本"></a> 查看Windows .NET Framework版本</h3>
<p>打开资源管理器，再地址栏输入：<code>%systemroot%\Microsoft.NET\Framework</code>，可以看到 .Net Framework 安装目录下列出的版本</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/zyw_anquan/article/details/9873047">查看本机.NET Framework版本</a></li>
</ol>
</blockquote>
<h3 id="在没有安装pip或pip被卸载的情况下安装pip"><a class="markdownIt-Anchor" href="#在没有安装pip或pip被卸载的情况下安装pip"></a> 在没有安装pip或pip被卸载的情况下安装pip</h3>
<ul>
<li>下载<code>get-pip.py</code>脚本，<a href="https://bootstrap.pypa.io/get-pip.py">here</a></li>
<li>运行<code>python get-pip.py</code></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pip.pypa.io/en/stable/installation/">pip installation</a></li>
</ol>
</blockquote>
<h3 id="更新pip"><a class="markdownIt-Anchor" href="#更新pip"></a> 更新pip</h3>
<p><code>python -m pip install --upgrade pip</code>。</p>
<p>参考资料：</p>
<blockquote>
<ol>
<li><a href="https://pip.pypa.io/en/stable/installation/">pip installation</a></li>
<li><a href="https://askubuntu.com/questions/1239829/modulenotfounderror-no-module-named-distutils-util">python - ModuleNotFoundError: No module named ‘distutils.util’ - Ask Ubuntu</a></li>
</ol>
</blockquote>
<h3 id="键盘键位映射修改"><a class="markdownIt-Anchor" href="#键盘键位映射修改"></a> 键盘键位映射修改</h3>
<p>问题：笔记本left shift键失灵，将Caps Lock键映射到left shift键然后作为left shift键使用</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/29581818">键盘键位修改及管理（Windows篇）</a></li>
<li><a href="https://blog.csdn.net/qq_42191914/article/details/104840458">Windows：修改键盘映射表</a></li>
</ol>
</blockquote>
<h3 id="网络问题排查"><a class="markdownIt-Anchor" href="#网络问题排查"></a> 网络问题排查</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.51cto.com/article/620620.html">网络出了问题，如何排查? 这篇文章告诉你</a></li>
</ol>
</blockquote>
<h3 id="在不断开网线的情况下断网"><a class="markdownIt-Anchor" href="#在不断开网线的情况下断网"></a> 在不断开网线的情况下断网</h3>
<p>控制面板-&gt;网络和共享中心-&gt;更改适配器设置-&gt;以太网右键禁用</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://jingyan.baidu.com/article/0964eca27410968285f53613.html">如何不拔网线断网，怎么断开电脑网络本地连接</a></li>
</ol>
</blockquote>
<h3 id="如何使得vscode可以有多个taskbar-icon以方便切换"><a class="markdownIt-Anchor" href="#如何使得vscode可以有多个taskbar-icon以方便切换"></a> 如何使得VSCode可以有多个taskbar icon以方便切换</h3>
<p>如下图所示：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230112140219.png" alt="" /></p>
<ol>
<li>方法1：<br />
Windows 10打开Taskbar设置：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230112140315.png" alt="" /><br />
改为：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230112140336.png" alt="" /><br />
但这会对所有软件生效。</li>
<li>方法2：使用7+ Taskbar Tweaker管理Taskbar，推荐。配置如下：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230203201506.png" alt="" /></li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/63381934/vs-code-multiple-taskbar-icon">VS Code multiple taskbar icon - Stack Overflow</a></li>
<li><a href="https://www.bilibili.com/video/BV1VV411n7hW">88：7+ Taskbar Tweaker 最新 5.1一款功能强大的Windows任务栏自定义设置工具使用教程_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
<h3 id="其中的文件夹或文件已在另一程序中打开"><a class="markdownIt-Anchor" href="#其中的文件夹或文件已在另一程序中打开"></a> 其中的文件夹或文件已在另一程序中打开</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/453864187/answer/1827894565">想删除这个东西但它显示的是在另一文件夹中或程序中打开，无法删除，怎么办？ - 知乎</a></li>
</ol>
</blockquote>
<h3 id="google同步多个标签页"><a class="markdownIt-Anchor" href="#google同步多个标签页"></a> Google同步多个标签页</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/630975/sync-onetab-tabs-on-chrome-across-different-pcs">Sync OneTab tabs on Chrome across different PC’s - Super User</a></li>
</ol>
</blockquote>
<h3 id="windows重启资源管理器"><a class="markdownIt-Anchor" href="#windows重启资源管理器"></a> Windows重启资源管理器</h3>
<p>重命名文件时，包含特殊字符会导致桌面卡住，无法进行桌面文件选择和点击操作：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230415122100.png" alt="" /><br />
此时需要重启windows资源管理器，但在任务管理器中有时又没有该任务。此时需要启动资源管理器然后对它进行重启。操作步骤如下：</p>
<ul>
<li><code>Windows + R</code>键打开运行窗口，输入<code>expolorer.exe</code>回车启动资源管理器，（不要关闭打开的文件资源管理器窗口）：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230415122405.png" alt="" /></li>
<li>此时会发现任务管理器中出现Windows Explorer任务，右键重启即可：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230415122528.png" alt="" /></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://consumer.huawei.com/cn/support/content/zh-cn00733776/">Windows 10 计算机如何重启文件资源管理器 | 华为官网</a></li>
</ol>
</blockquote>
<h3 id="ppt-powerpoint-在多个窗口打开多个文件"><a class="markdownIt-Anchor" href="#ppt-powerpoint-在多个窗口打开多个文件"></a> PPT (Powerpoint) 在多个窗口打开多个文件</h3>
<p>视图-&gt;层叠窗口</p>
<h3 id="同步时间"><a class="markdownIt-Anchor" href="#同步时间"></a> 同步时间</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230604143409.png" alt="" /></p>
<h3 id="添加系统http_proxy和https_proxy环境变量"><a class="markdownIt-Anchor" href="#添加系统http_proxy和https_proxy环境变量"></a> 添加系统http_proxy和https_proxy环境变量</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.cloudfoundry.org/cf-cli/http-proxy.html">Using the cf CLI with a proxy server | Cloud Foundry Docs</a></li>
</ol>
</blockquote>
<h3 id="powertoys常见快捷键配置"><a class="markdownIt-Anchor" href="#powertoys常见快捷键配置"></a> PowerToys常见快捷键配置</h3>
<ul>
<li><code>Ctrl+j -&gt; downarrow</code></li>
<li><code>Ctrl+k -&gt; uparrow</code></li>
<li><code>F4 -&gt; Alt+F4</code>：关闭当前应用窗口</li>
<li><code>Shift+4 -&gt; F4</code>：在Alt-tab Terminal中关闭应用</li>
<li><code>Ctrl+Shift+j</code>：在VSCode中映射为<code>Ctrl+PageDown</code>，用于切换terminal tab</li>
<li><code>Ctrl+Shift+k</code>：在VSCode中映射为<code>Ctrl+PageUp</code>，用于切换terminal tab</li>
<li><code>Ctrl+Space</code>：用于预览文件，PowerToys中的Peek功能</li>
<li><code>Win+Shift+t</code>：用于框选屏幕并识别文字，PowerToys中的Text Extractor功能。</li>
</ul>
<h3 id="windows-10最小化和最大化当前窗口快捷键"><a class="markdownIt-Anchor" href="#windows-10最小化和最大化当前窗口快捷键"></a> Windows 10最小化和最大化当前窗口快捷键</h3>
<ul>
<li><code>Win + downarrow</code>：最小化当前窗口</li>
<li><code>Win + uparrow</code>：最大化当前窗口</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/189194/what-is-the-windows-hotkey-to-minimise-a-single-currently-active-window">What is the Windows hotkey to minimise a single, currently active window? - Super User</a></li>
</ol>
</blockquote>
<h3 id="命令行删除单词-整行"><a class="markdownIt-Anchor" href="#命令行删除单词-整行"></a> 命令行删除单词、整行</h3>
<p>通常我们使用<code>backspace</code>删除字母，但是我们可以删除单词或整行：</p>
<ol>
<li><code>Ctrl + w</code>：删除单词</li>
<li><code>Ctrl + u</code>：删除整行</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://unix.stackexchange.com/questions/94331/how-can-i-delete-a-word-backward-at-the-command-line-bash-and-zsh">keyboard shortcuts - How can I delete a word backward at the command line (bash and zsh)? - Unix &amp; Linux Stack Exchange</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10环境配置</title>
    <url>/2022/09/10/Windows10%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一些Windows10系统中的配置和对应工具：</p>
<span id="more"></span>
<h3 id="windows多屏使用技巧"><a class="markdownIt-Anchor" href="#windows多屏使用技巧"></a> Windows多屏使用技巧</h3>
<p>安装软件：</p>
<ol>
<li>PowerToys -&gt; FancyZones：屏幕分区</li>
<li>Twinkle Tray：多屏亮度调节</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://sspai.com/post/66381">在 Windows 下使用多块屏幕的你，可以收下这些建议</a></li>
</ol>
</blockquote>
<h3 id="sumatra-pdf和everything的冲突"><a class="markdownIt-Anchor" href="#sumatra-pdf和everything的冲突"></a> Sumatra PDF和Everything的冲突</h3>
<p>在使用Everything搜索pdf文件后，如果直接双击打开pdf文件，此时Sumatra PDF以管理员身份运行。如果直接在文件夹中双击pdf文件，此时会报错。<br />
解决方案：Everything -&gt; 工具 -&gt; 选项 -&gt; 取消勾选以管理员身份运行 -&gt; 启动Everything服务 -&gt; 重启Everything</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/sumatrapdfreader/sumatrapdf/discussions/2316">Why “SumatraPDF is running as admin and cannot open files from a non-admin process” error? · Discussion #2316 · sumatrapdfreader/sumatrapdf · GitHub</a></li>
<li><a href="https://www.voidtools.com/faq/#how_do_i_prevent_the_uac_prompt_when_running_everything">FAQ - voidtools</a></li>
</ol>
</blockquote>
<h3 id="golden配置屏幕取词"><a class="markdownIt-Anchor" href="#golden配置屏幕取词"></a> Golden配置屏幕取词</h3>
<p>安装AutoHotKey1.1</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/sangfengcn/article/details/75731410">GoldenDict和AutoHotKey的安装和使用_SANGF_的博客-CSDN博客</a></li>
<li><a href="https://blog.sina.com.cn/s/blog_797a6edf0102wteg.html">[转载]GoldenDict 上的那些精美版权词典（附下载地址）（英语、_细草_微风_新浪博客</a></li>
</ol>
</blockquote>
<h3 id="将任意键映射到shortcuts"><a class="markdownIt-Anchor" href="#将任意键映射到shortcuts"></a> 将任意键映射到Shortcuts</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.howtogeek.com/710290/how-to-remap-any-key-or-shortcut-on-windows-10/">How to Remap Any Key or Shortcut on Windows 10</a></li>
</ol>
</blockquote>
<h3 id="关闭特定快捷键-specific-shortkeys"><a class="markdownIt-Anchor" href="#关闭特定快捷键-specific-shortkeys"></a> 关闭特定快捷键 (specific shortkeys)</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.makeuseof.com/windows-10-disable-keyboard-shortcuts">How to Disable Keyboard Shortcuts on Windows 10</a></li>
<li><a href="https://www.top-password.com/blog/disable-specific-windows-key-shortcut/">How to Disable Specific Windows Key Shortcut in Windows | Password Recovery</a></li>
<li><a href="https://superuser.com/questions/1000678/disable-winspace-keyboard-layout-switch-in-windows-10#:~:text=go%20to%20Edit%20language%20and,Layout%22%20to%20%22Not%20Assigned%22">Disable Win+Space keyboard-layout switch in Windows 10 - Super User</a></li>
</ol>
</blockquote>
<h3 id="powertoys-keyboards-manager只在某些应用里生效"><a class="markdownIt-Anchor" href="#powertoys-keyboards-manager只在某些应用里生效"></a> PowerToys Keyboards Manager只在某些应用里生效</h3>
<p>参考资料1给出如何进行映射；参考资料2给出如何查看进程名（process name）</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://learn.microsoft.com/en-us/windows/powertoys/keyboard-manager">PowerToys Keyboard Manager utility for Windows | Microsoft Learn</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/finding-the-process-id">Finding the Process ID - Windows drivers | Microsoft Learn</a></li>
<li><a href="https://github.com/microsoft/PowerToys/issues/10800">Exclude Target apps for Keyboard Manager!!! · Issue #10800 · microsoft/PowerToys · GitHub</a></li>
</ol>
</blockquote>
<h3 id="谷歌浏览器chrome使用vimium技巧"><a class="markdownIt-Anchor" href="#谷歌浏览器chrome使用vimium技巧"></a> 谷歌浏览器（Chrome）使用Vimium技巧</h3>
<p><strong>指定搜索引擎搜索</strong></p>
<ol>
<li>按下<code>o</code>打开多功能搜索框。（<code>o</code>搜索内容在当前标签页，<code>O</code>在新标签页打开）</li>
<li>按下<code>b+空格</code>指定搜索引擎为百度（搜索引擎可以进行设置）</li>
<li>键入搜索内容即可用百度进行搜索。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230606104139.png" alt="" /></li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/hampeter/article/details/81940035">vimium插件设置快速搜索引擎_hampeter的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/30263616">vimium完全教程，各类技巧大全 - 知乎</a></li>
</ol>
</blockquote>
<h3 id="windows10查看所有环境变量和指定环境变量"><a class="markdownIt-Anchor" href="#windows10查看所有环境变量和指定环境变量"></a> Windows10查看所有环境变量和指定环境变量</h3>
<ul>
<li><strong>指定环境变量</strong>。<code>echo %VARIABLE%</code></li>
<li><strong>所有环境变量</strong>。<code>SET | more</code></li>
<li>使用配置文件配置环境变量</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/5327495/list-all-environment-variables-from-the-command-line">windows - List all environment variables from the command line - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/48607302/using-env-files-to-set-environment-variables-in-windows">go - Using .env files to set environment variables in Windows - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="vimium-c配置"><a class="markdownIt-Anchor" href="#vimium-c配置"></a> Vimium-C配置</h3>
<p>重新映射快捷键：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">map F LinkHints.activate
map f LinkHints.activateOpenInNewTab
map O Vomnibar.activate
map o Vomnibar.activateInNewTab
map B Vomnibar.activateBookmarks
map b Vomnibar.activateBookmarksInNewTab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/gdh1995/vimium-c">GitHub - gdh1995/vimium-c: A keyboard shortcut browser extension for keyboard-based navigation and tab operations with an advanced omnibar</a></li>
<li><a href="https://stackoverflow.com/questions/66280656/how-to-remap-a-key-to-another-key-in-vimium">shortcut - How to Remap a Key to Another Key in Vimium - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="powershell安装oh-my-posh"><a class="markdownIt-Anchor" href="#powershell安装oh-my-posh"></a> PowerShell安装oh-my-posh</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://juejin.cn/post/7210596158934433853">Oh My Posh：Windows 下的Oh my zsh - 掘金</a></li>
<li><a href="https://github.com/JanDeDobbeleer/oh-my-posh/issues/3756">I am not able to install a minimal theme for oh-my-posh · Issue #3756 · JanDeDobbeleer/oh-my-posh · GitHub</a></li>
<li><a href="https://ohmyposh.dev/">Home | Oh My Posh</a></li>
<li><a href="https://github.com/devblackops/Terminal-Icons">GitHub - devblackops/Terminal-Icons: A PowerShell module to show file and folder icons in the terminal</a></li>
<li><a href="https://github.com/PowerShell/PSReadLine#upgrading">GitHub - PowerShell/PSReadLine: A bash inspired readline implementation for PowerShell</a></li>
<li><a href="https://github.com/romkatv/powerlevel10k/issues/671">icons don’t display in VS code integrated terminal after setting terminal.integrated.fontFamily · Issue #671 · romkatv/powerlevel10k · GitHub</a></li>
</ol>
</blockquote>
<h3 id="starship"><a class="markdownIt-Anchor" href="#starship"></a> starship</h3>
<p>更好看的终端，适用于cmd</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/starship/starship">GitHub - starship/starship: ☄🌌️ The minimal, blazing-fast, and infinitely customizable prompt for any shell!</a></li>
</ol>
</blockquote>
<h3 id="windows中类似userprofile的环境变量"><a class="markdownIt-Anchor" href="#windows中类似userprofile的环境变量"></a> Windows中类似<code>%USERPROFILE</code>的环境变量</h3>
<p>GitHub Copilot: 在Windows中，除了<code>%USERPROFILE%</code>环境变量之外，还有许多其他类似的环境变量，用于访问系统和用户的各种目录和设置。以下是一些常用的环境变量：</p>
<ul>
<li><code>%APPDATA%</code>：该环境变量指向当前用户的应用程序数据文件夹，例如<code>C:\Users\username\AppData\Roaming</code>。</li>
<li><code>%LOCALAPPDATA%</code>：该环境变量指向当前用户的本地应用程序数据文件夹，例如<code>C:\Users\username\AppData\Local</code>。</li>
<li><code>%TEMP%</code>或<code>%TMP%</code>：这些环境变量指向当前用户的临时文件夹，例如<code>C:\Users\username\AppData\Local\Temp</code>。</li>
<li><code>%PROGRAMFILES%</code>：该环境变量指向安装32位程序的默认目录，例如<code>C:\Program Files</code>。</li>
<li><code>%PROGRAMFILES(X86)%</code>：该环境变量指向安装64位程序的默认目录，例如<code>C:\Program Files (x86)</code>。</li>
<li><code>%SYSTEMROOT%</code>：该环境变量指向Windows操作系统的安装目录，例如<code>C:\Windows</code>。</li>
<li><code>%PATH%</code>：该环境变量包含一组用分号分隔的目录路径，用于在命令行中查找可执行文件。<br />
这些环境变量可以在Windows操作系统中的任何位置使用，例如在命令提示符、批处理文件、PowerShell脚本和其他应用程序中。您可以使用这些环境变量来访问系统和用户的各种目录和设置，从而使您的脚本和应用程序更加灵活和可移植。</li>
</ul>
<h3 id="windows创建对file或者folder的link"><a class="markdownIt-Anchor" href="#windows创建对file或者folder的link"></a> Windows创建对file或者folder的link</h3>
<p>file的link可以通过mklink命令创建。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.howtogeek.com/16226/complete-guide-to-symbolic-links-symlinks-on-windows-or-linux/">The Complete Guide to Creating Symbolic Links (aka Symlinks) on Windows</a></li>
<li><a href="https://woshub.com/create-symlink-windows/">Creating Symbolic Links (Symlinks) in Windows | Windows OS Hub</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10系统配置</title>
    <url>/2022/05/21/Windows10%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在使用 Windows10 系统过程中的一些常见配置：</p>
<span id="more"></span>
<h2 id="powershell"><a class="markdownIt-Anchor" href="#powershell"></a> PowerShell</h2>
<h3 id="环境变量"><a class="markdownIt-Anchor" href="#环境变量"></a> 环境变量</h3>
<p><code>ls env:</code>：查看所有环境变量</p>
<p><code>ls env:NODE*</code>：搜索环境变量</p>
<p><code>$env:Path</code>：查看单个环境变量</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/liuyt/p/5677781.html">Powershell下设置环境变量</a></li>
<li><a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.2">关于环境变量 - PowerShell</a></li>
</ol>
</blockquote>
<h2 id="wsl"><a class="markdownIt-Anchor" href="#wsl"></a> WSL</h2>
<h3 id="安装流程"><a class="markdownIt-Anchor" href="#安装流程"></a> 安装流程</h3>
<h4 id="前置条件"><a class="markdownIt-Anchor" href="#前置条件"></a> 前置条件</h4>
<p>Windows 10 version 2004 and higher (Build 19041 and higher) or Windows 11</p>
<blockquote>
<p>可以 <a href="https://tom89757.github.io/2022/05/22/Windows10%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/#%E6%9F%A5%E7%9C%8B-windows%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF">查看 WIndows 版本信息</a></p>
</blockquote>
<h4 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h4>
<ul>
<li>
<p>以管理员身份运行 powershell 或 cmd</p>
</li>
<li>
<p>在打开的终端窗口中运行 <code>wsl --install</code>。</p>
<ul>
<li>当第一次使用wsl时运行该命令会默认安装 Ubuntu 系统。</li>
<li>已经安装过wsl时运行该命令会列出帮助信息</li>
</ul>
<blockquote>
<p>第一次打开新安装的 Linux distribution (即wsl系统)时会打开一个控制窗口，并需要等待文件解压和存储在本机上，等待即可</p>
</blockquote>
</li>
<li>
<p>可以通过<code>wsl --list --online</code>列出可以在线安装的wsl发行版本：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220522210152668.png" alt="image-20220522210152668" /></p>
</li>
<li>
<p>可以通过<code>wsl --install -d kali-linux</code>指定安装的wsl为kali发行版：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220522210402831.png" alt="image-20220522210402831" /></p>
</li>
</ul>
<h3 id="wsl代理配置"><a class="markdownIt-Anchor" href="#wsl代理配置"></a> WSL代理配置</h3>
<p>配置代理后测试代理不能使用ping，因为ping使用ICMP协议，而代理只支持TCP/UDP数据包。应该使用curl：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> https://www.youtube.com <span class="token operator">|</span> <span class="token function">head</span> -1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.microsoft.com/en-us/windows/wsl/install">Install Linux on Windows with WSL</a></li>
<li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/basic-commands">WSL的基本命令</a></li>
<li><a href="https://www.cnblogs.com/tuilk/p/16287472.html">WSL2配置代理 - Leaos - 博客园</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/153124468">为 WSL2 一键设置代理 - 知乎</a></li>
<li><a href="https://www.linuxidc.com/Linux/2016-05/131448.htm">httping：测量网站延迟_Linux教程_Linux公社-Linux系统门户网站</a></li>
<li><a href="https://blog.csdn.net/zhongliangtang/article/details/81280460">windows上使用代理，使用ping命令会超时</a></li>
<li><a href="https://blog.csdn.net/fur_pikachu/article/details/127973376">WSL2-解决无法ping通主机/配置使用主机代理_wsl 使用代理_会伏丘的博客-CSDN博客</a></li>
</ol>
</blockquote>
<h3 id="wsl普通用户无法登录"><a class="markdownIt-Anchor" href="#wsl普通用户无法登录"></a> WSL普通用户无法登录</h3>
<p><code>wsl -u root</code>：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/67261530/process-exited-with-code-1-cant-open-wsl-zsh">windows subsystem for linux - [process exited with code 1], can’t open WSL, zsh - Stack Overflow</a></li>
</ol>
</blockquote>
<h2 id="cmd"><a class="markdownIt-Anchor" href="#cmd"></a> cmd</h2>
<h3 id="别名设置"><a class="markdownIt-Anchor" href="#别名设置"></a> 别名设置</h3>
<p>在windows系统中可以使用类似Linux中<code>alias</code>的别名设置。</p>
<ul>
<li>编写<code>cmd_auto.bat</code>脚本文件，内容如下：</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@doskey <span class="token assign-left variable">javac</span><span class="token operator">=</span>javac -encoding utf8
@doskey <span class="token assign-left variable">ls</span><span class="token operator">=</span>dir /b
@doskey <span class="token assign-left variable">grep</span><span class="token operator">=</span>findstr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>@doskey</code>即等价于Linux中的<code>alias</code>。</p>
<ul>
<li>在注册表中的<code>Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor</code>添加<code>AutoRun</code>字符串项，并设置<code>cmd_auto.bat</code>的路径，其等价于Linux中的<code>/etc/profile/</code>或<code>~/.bashrc</code>文件设置，会在cmd启动时自动运行。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221014235536.png" alt="" /></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/fstang/archive/2013/04/06/3002006.html">在cmd中为命令设置别名以及启动cmd时自动执行bat</a></li>
<li><a href="https://www.cnblogs.com/onelikeone/p/10783497.html">window alias给cmd命令起别名</a></li>
<li><a href="https://blog.csdn.net/cyan20115/article/details/106551191">Windows版Grep – findstr示例</a></li>
</ol>
</blockquote>
<h3 id="cmd中文乱码"><a class="markdownIt-Anchor" href="#cmd中文乱码"></a> cmd中文乱码</h3>
<ul>
<li><code>chcp 65001</code>：临时改为UTF-8编码。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/lzmrex/articles/12553666.html">CMD中文乱码 - 码农在路上 - 博客园</a></li>
</ol>
</blockquote>
<h3 id="scoop"><a class="markdownIt-Anchor" href="#scoop"></a> Scoop</h3>
<p>Scoop是Windows系统下一款流行的包管理工具<br />
推荐包：</p>
<ol>
<li><a href="https://github.com/solidiquis/erdtree">GitHub - solidiquis/erdtree: A multi-threaded file-tree visualizer and disk usage analyzer.</a>：目录结构树状展示</li>
<li><a href="https://github.com/Slackadays/Clipboard">GitHub - Slackadays/Clipboard: Your external brain that remembers anything, anytime, anywhere. Save time and effort the 𝗲𝗮𝘀𝘆 way! 😄</a>：实现终端复制、剪切和粘贴。</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://scoop.sh/">Scoop</a></li>
</ol>
</blockquote>
<h3 id="cmd自动补全和命令高亮"><a class="markdownIt-Anchor" href="#cmd自动补全和命令高亮"></a> cmd自动补全和命令高亮</h3>
<p>clink用于替代cmd终端；starship用于定制shell。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/chrisant996/clink">GitHub - chrisant996/clink: Bash’s powerful command line editing in cmd.exe</a></li>
<li><a href="https://github.com/starship/starship">GitHub - starship/starship: ☄🌌️ The minimal, blazing-fast, and infinitely customizable prompt for any shell!</a></li>
</ol>
</blockquote>
<h3 id="cmd默认以管理员身份运行并关闭uac-prompt"><a class="markdownIt-Anchor" href="#cmd默认以管理员身份运行并关闭uac-prompt"></a> cmd默认以管理员身份运行并关闭UAC prompt</h3>
<p>主要参考资料2配置。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.intowindows.com/how-to-always-run-command-prompt-as-administrator/">How To Always Open Command Prompt As Administrator</a></li>
<li><a href="https://www.digitalcitizen.life/use-task-scheduler-launch-programs-without-uac-prompts/">Use the Windows Task Scheduler to run apps without UAC prompts, with admin rights</a></li>
<li><a href="https://www.winhelponline.com/blog/run-programs-elevated-without-getting-the-uac-prompt/">How to Run Programs as Administrator (Elevated) without UAC Prompt » Winhelponline</a></li>
</ol>
</blockquote>
<h3 id="cmd配置fira-code字体"><a class="markdownIt-Anchor" href="#cmd配置fira-code字体"></a> cmd配置Fira Code字体</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/1337310/font-not-in-windows-10-console-properties-list">Font not in Windows 10 console properties list - Super User</a></li>
<li><a href="https://github.com/tonsky/FiraCode/issues/941">Ligatures not working with Fira Code Light in console · Issue #941 · tonsky/FiraCode · GitHub</a></li>
<li><a href="https://github.com/tonsky/FiraCode/issues/431">cmd.exe support · Issue #431 · tonsky/FiraCode · GitHub</a></li>
<li><a href="https://superuser.com/questions/1658678/detect-path-of-font-on-windows">Detect path of font on Windows - Super User</a></li>
<li><a href="https://www.wikihow.com/Customize-the-Font-in-Windows-Command-Prompt#:~:text=Right%2Dclick%20on%20the%20top,%2C%20Font%2C%20Layout%2C%20Colors.&amp;text=When%20you%20open%20the%20%22Options,check%20%22Quick%20Edit%20Mode%22.">How to Customize the Font in Windows Command Prompt: 15 Steps</a></li>
</ol>
</blockquote>
<h3 id="在配置docker后-clash-for-windows中端口不能设为1080一直为0"><a class="markdownIt-Anchor" href="#在配置docker后-clash-for-windows中端口不能设为1080一直为0"></a> 在配置Docker后, Clash for Windows中端口不能设为1080，一直为0</h3>
<p>原因：<br />
Docker会用到wsl，wsl会用到hyper-V，hyper-V会让win10的动态端口变成1024开始的13977个端口，然后hyper-V会随机保留端口，大概2860个左右，刚好占用了clash端口。<br />
解决方法：<br />
一种是把动态端口改到更高的端口区域去，或者将使用的端口从hyper-V保留端口中排除。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/Fndroid/clash_for_windows_pkg/issues/671">WIN10更新后端口显示为0的解决方法 · Issue #671 · Fndroid/clash_for_windows_pkg · GitHub</a></li>
<li><a href="https://www.cnblogs.com/zsmumu/p/13389816.html">Win10 各种端口占用问题的解决办法 - hyuuko - 博客园</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/474392069">解决 Windows 10 端口被 Hyper-V 随机保留（占用）的问题 - 知乎</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>copilot资源整理</title>
    <url>/2023/04/24/copilot%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文整理一下收集到的copilot学习资料：</p>
<span id="more"></span>
<h3 id="工作流"><a class="markdownIt-Anchor" href="#工作流"></a> 工作流</h3>
<ol>
<li><a href="https://www.builder.io/blog/vscode-tips">Improve Your VSCode Workflow to the Max</a>：Copilot的高级用法</li>
<li><a href="https://docs.github.com/en/early-access/copilot/github-copilot-chat-transparency-note">GitHub Copilot Chat Transparency Note - GitHub Docs</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>chatGPT资源整理</title>
    <url>/2023/04/24/chatGPT%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文整理一下所收集的chatGPT学习资料：</p>
<span id="more"></span>
<h3 id="prompt-engineer-提示词工程"><a class="markdownIt-Anchor" href="#prompt-engineer-提示词工程"></a> Prompt Engineer (提示词工程)</h3>
<ol>
<li><a href="https://boostpixels.com/guide">Guide for prompt writing | BoostPixels</a>：如何写chatGPT prompt。</li>
<li><a href="https://www.ruxu.dev/articles/ai/maximizing-the-potential-of-llms/">Maximizing the Potential of LLMs: A Guide to Prompt Engineering</a></li>
<li><a href="https://catcoding.me/p/chatgpt-tools/">人类的终极工具 | 程序员的喵</a>：如何用chatGPT提问？</li>
<li><a href="https://app.gumroad.com/d/52391c67754c7f5c7814004307bc660a">The Art of ChatGPT Prompting: A Guide to Crafting Clear and Effective Prompts</a>：使用ChatGPT Prompting的艺术</li>
<li><a href="https://op7418.zhubai.love/posts/2264801966632763392">AIGC Weekly #19 | AIGC周刊</a></li>
</ol>
<h3 id="使用chatgpt完成项目"><a class="markdownIt-Anchor" href="#使用chatgpt完成项目"></a> 使用chatGPT完成项目</h3>
<ol>
<li><a href="https://www.youtube.com/watch?v=D6Xj_W4leu8&amp;ab_channel=freeCodeCamp.org">Use ChatGPT to Build a RegEx Generator – OpenAI API Low Code Course - YouTube</a>：使用chatGPT创建一个RegEx Generator</li>
<li><a href="https://www.youtube.com/watch?v=S3tqNPLnX6A&amp;ab_channel=MortenJust">Creating an iPhone app from scratch with gpt-4</a>：使用gpt-4从头创建一个iPhone app。</li>
<li><a href="https://lablab.ai/apps">Discover all the AI applications that have been built during lablab.ai hackathons using popular AI technologie like Transformers, GPT-3, Cohere and more</a>：使用各种AI平台搭建的各种工具</li>
<li><a href="https://learningprompt.wiki/">Hello from Learning Prompt | Learning Prompt</a>：使用chatGPT完成5个项目。</li>
<li><a href="https://www.bilibili.com/video/BV1DT411H7ph">格斗之王！AI写出来的AI竟然这么强_哔哩哔哩_bilibili</a>：使用chatGPT和copilot完成对街头霸王的改写，附带所有对话文件。</li>
</ol>
<h3 id="环境搭建"><a class="markdownIt-Anchor" href="#环境搭建"></a> 环境搭建</h3>
<ol>
<li><a href="https://time.geekbang.org/column/article/641742">01｜重新出发，让我们学会和AI说话-极客时间</a>：配置chatGPT的Anaconda环境</li>
</ol>
<h3 id="工具"><a class="markdownIt-Anchor" href="#工具"></a> 工具</h3>
<ol>
<li><a href="https://www.chatpdf.com/">https://www.chatpdf.com</a>：快速阅读pdf</li>
<li><a href="https://framergpt.framer.website/">FramerGPT</a>：快速生成code components</li>
<li><a href="https://chatdoc.com/chatdoc/#/upload">ChatDOC</a>：快速阅读文档</li>
<li></li>
</ol>
<h3 id="awesome-promts"><a class="markdownIt-Anchor" href="#awesome-promts"></a> Awesome Promts</h3>
<ol>
<li><a href="https://www.aishort.top/">ChatGPT Shortcut - 简单易用的 ChatGPT 快捷指令表，让生产力倍增！标签筛选、关键词搜索和一键复制 Prompts | Tag filtering, keyword search, and one-click copy prompts</a>：各种prompts</li>
<li><a href="https://www.awesomegptprompts.com/categories/coding">Categories</a>：各种prompts</li>
<li><a href="https://openprompt.co/#">Open Prompt</a> ：网友分享的各种prompts</li>
<li><a href="https://github.com/f/awesome-chatgpt-prompts">GitHub - f/awesome-chatgpt-prompts: This repo includes ChatGPT prompt curation to use ChatGPT better.</a>：github仓库，收集prompts</li>
</ol>
<h3 id="chatgpt替代"><a class="markdownIt-Anchor" href="#chatgpt替代"></a> chatGPT替代</h3>
<ol>
<li><a href="https://chatbot.theb.ai/#/chat/1002">BAI Chat</a>：BAI chat，更快的响应速度。</li>
<li><a href="https://www.aiyjs.com/">AI研究所 – 国内外AI工具资讯首发站</a>：国内外AI工具资讯</li>
<li></li>
</ol>
<h3 id="使用手册"><a class="markdownIt-Anchor" href="#使用手册"></a> 使用手册</h3>
<ol>
<li><a href="https://eibot3u32o.feishu.cn/docx/E7jodtO4fosu4SxdgCrcWF1Znvd">最全 ChatGPT 使用手册 - 飞书云文档</a></li>
<li><a href="https://learnprompting.org/zh-Hans/docs/intro">欢迎 | Learn Prompting</a>：系统学习Prompting</li>
<li><a href="https://learningprompt.wiki/">Hello from Learning Prompt | Learning Prompt</a>：系统学习Prompting</li>
</ol>
<h3 id="个人prompts"><a class="markdownIt-Anchor" href="#个人prompts"></a> 个人prompts</h3>
<p><strong>AI工程师</strong><br />
I want you to act as an AI Expert. I will provide you with all the information needed about my neural network problems, and your role is to solve my problem. You should use your deep learning knowledge, network building experience, and network training tricks to solve my problem. Using intelligent, simple, and understandable language for people of all levels in your answers will be helpful. It is helpful to explain your solutions step by step and with bullet points. Try to avoid too many technical details, but use them when necessary. I want you to reply with the solution, not write any explanations. My first problem is “I have 4 features, 4*128*56*56, 4*256*28*28,  4*512*14*14, 4*512*14*14, how to implement a unet-like decoder to get a 4*1*224*224 ouput”<br />
PS：效果并不佳，但可以学习有哪些操作</p>
<h3 id="使用技巧"><a class="markdownIt-Anchor" href="#使用技巧"></a> 使用技巧</h3>
<ol>
<li><a href="https://telegra.ph/ChatGPT-06-04-2">ChatGPT – Telegraph</a>：让ChatGPT发送图片和模拟GPT4</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>git文章整理</title>
    <url>/2022/09/19/git%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文整理一下网上比较好的介绍git用法和特性的文章：</p>
<span id="more"></span>
<ol>
<li><a href="https://sp19.datastructur.es/materials/guides/using-git">Using Git</a>：本教程需要你对命令行有基础的了解（未读）</li>
<li><a href="https://sp19.datastructur.es/materials/guides/git-wtfs">Git WTFS</a>：本文档旨在帮你解决你在使用git过程中频繁遇到的WTFS (weird technical failure scenarios)（未读）</li>
<li><a href="https://www.cnblogs.com/apocelipes/p/14491762.html">图解如何在Linux上配置git自动登录验证 - apocelipes - 博客园</a></li>
<li><a href="https://github.com/jawil/notes/issues/2">同一台电脑配置多个git账号 · Issue #2 · jawil/notes · GitHub</a>：同一主机配置多个git账号。</li>
<li><a href="https://www.freecodecamp.org/chinese/news/git-reverting-to-previous-commit-how-to-revert-to-last-commit/">Git 如何恢复到之前的提交</a></li>
<li><a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192">版本回退 - 廖雪峰的官方网站</a></li>
<li><a href="https://wiringbits.net/blog/github-repository-setup">Sane defaults for Github repositories | wiringbits</a>：调整git仓库的默认设置</li>
<li><a href="https://sites.google.com/a/chromium.org/dev/developers/fast-intro-to-git-internals">Fast Intro to Git Internals - The Chromium Projects</a>：Google浏览器工程师对git的快速介绍</li>
</ol>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>go语言笔记</title>
    <url>/2022/05/15/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文记录一下在学习 go 语言过程中遇到的问题。</p>
<span id="more"></span>
<p>1.下述代码中<code>_ &quot;github.com/go-sql-driver/mysql&quot;</code>中的<code>_</code>的作用。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;database/sql&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line">	_ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/21220077/what-does-an-underscore-in-front-of-an-import-statement-mean">What does an underscore in front of an import statement mean?</a></li>
<li><a href="https://go.dev/ref/spec#Import_declarations">Import declarations</a></li>
</ol>
</blockquote>
</br>
2.镜像源配置：
在`.bashrc`文件中写入：
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用 Go Modules 功能</span></span><br><span class="line">go <span class="built_in">env</span> -w GO111MODULE=on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 GOPROXY 环境变量，以下三选一</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 七牛 CDN</span></span><br><span class="line">go <span class="built_in">env</span> -w  GOPROXY=https://goproxy.cn,direct</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 阿里云</span></span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 官方</span></span><br><span class="line">go <span class="built_in">env</span> -w  GOPROXY=https://goproxy.io,direct</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [Go 国内加速：Go 国内加速镜像 | Go 技术论坛](https://learnku.com/go/wikis/38122)
</br>
3.Linux安装go
> 参考资料：
> 1. [Go 语言环境安装 | 菜鸟教程](https://www.runoob.com/go/go-environment.html)]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/05/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="hexo一篇文章指定多个categories"><a class="markdownIt-Anchor" href="#hexo一篇文章指定多个categories"></a> Hexo一篇文章指定多个categories</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://aiellochan.com/2018/02/13/hexo/Hexo-%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%A4%9A%E4%B8%AA-categories/">Hexo 一篇文章多个 categories</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客图床配置</title>
    <url>/2022/05/08/hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下如何将本地<code>.md</code>文件中图片上传到 github 仓库或腾讯云对象存储中，并在本地<code>.md</code>文件中将图片地址替换为对应的 github 或腾讯云存储链接。</p>
<span id="more"></span>
<h3 id="上传至-github-仓库"><a class="markdownIt-Anchor" href="#上传至-github-仓库"></a> 上传至 github 仓库</h3>
<p>该方法的思路是在 github 中新建一个仓库（必须为public仓库，否则无法访问）作为图床，并通过 PicGo 软件将本地图片上传至对应的 github 仓库。具体步骤如下：</p>
<h4 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h4>
<ul>
<li>Typora 0.11.18 (beta)：<a href="https://typora.en.uptodown.com/windows/versions">下载地址</a></li>
<li>PicGo 2.3.0：<a href="https://github.com/Molunerfinn/PicGo/releases">下载地址</a></li>
<li>nodejs v16.13.0</li>
</ul>
<h4 id="软件配置"><a class="markdownIt-Anchor" href="#软件配置"></a> 软件配置</h4>
<ul>
<li>
<p>打开 PicGo 在图床配置里选择 GitHub 图床进行配置，并设为默认图床</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220516220239293.png?token=AKWAGW46DCB4MTDZJIFCFR3CQJMZU" alt="image-20220516220239293" /></p>
</li>
<li>
<p>打开 Typora 偏好设置并进行图像设置：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220516220428369.png?token=AKWAGW6CJAWAMQRBNJQZ4RLCQJNAO" alt="image-20220516220428369" /></p>
</li>
<li>
<p>编辑 markdown 文档会发现插入文档的图片会自动上传至 github 仓库并将图片地址更新为对应 github 仓库地址。也可右键图像手动上传：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220516220638096.png?token=AKWAGW6R34UTLRBW7F5KINLCQJNIS" alt="image-20220516220638096" /></p>
</li>
</ul>
<p>由于使用github图床，有时上传时会发生如下的上传错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">------Error Stack Begin------</span><br><span class="line">RequestError: Error: read ECONNRESET</span><br><span class="line">at new RequestError (D:\Program Files\PicGo\resources\app.asar\node_modules\request-promise-core\lib\errors.js:<span class="number">14</span>:<span class="number">15</span>)</span><br><span class="line">at Request.plumbing.callback (D:\Program Files\PicGo\resources\app.asar\node_modules\request-promise-core\lib\plumbing.js:<span class="number">87</span>:<span class="number">29</span>)</span><br><span class="line">at Request.RP$callback [<span class="keyword">as</span> _callback] (D:\Program Files\PicGo\resources\app.asar\node_modules\request-promise-core\lib\plumbing.js:<span class="number">46</span>:<span class="number">31</span>)</span><br><span class="line">at self.callback (D:\Program Files\PicGo\resources\app.asar\node_modules\request\request.js:<span class="number">185</span>:<span class="number">22</span>)</span><br><span class="line">at Request.emit (events.js:<span class="number">200</span>:<span class="number">13</span>)</span><br><span class="line">at Request.onRequestError (D:\Program Files\PicGo\resources\app.asar\node_modules\request\request.js:<span class="number">881</span>:<span class="number">8</span>)</span><br><span class="line">at ClientRequest.emit (events.js:<span class="number">200</span>:<span class="number">13</span>)</span><br><span class="line">at TLSSocket.socketErrorListener (_http_client.js:<span class="number">402</span>:<span class="number">9</span>)</span><br><span class="line">at TLSSocket.emit (events.js:<span class="number">200</span>:<span class="number">13</span>)</span><br><span class="line">at emitErrorNT (internal/streams/destroy.js:<span class="number">91</span>:<span class="number">8</span>)</span><br><span class="line">-------Error Stack End-------</span><br></pre></td></tr></table></figure>
<p>其原因为无法请求github服务器。在使用V2rayN的情况下，直接在PicGO中配置如下代理和镜像地址：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220804212205450.png" alt="image-20220804212205450" /></p>
<p>会导致如下报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">------Error Stack Begin------</span><br><span class="line">RequestError: Error: tunneling socket could <span class="keyword">not</span> be established, cause=socket hang up</span><br><span class="line">    at new RequestError (D:\Develop\PicGo\resources\app.asar\node_modules\request-promise-core\lib\errors.js:<span class="number">14</span>:<span class="number">15</span>)</span><br><span class="line">    at Request.plumbing.callback (D:\Develop\PicGo\resources\app.asar\node_modules\request-promise-core\lib\plumbing.js:<span class="number">87</span>:<span class="number">29</span>)</span><br><span class="line">    at Request.RP$callback [<span class="keyword">as</span> _callback] (D:\Develop\PicGo\resources\app.asar\node_modules\request-promise-core\lib\plumbing.js:<span class="number">46</span>:<span class="number">31</span>)</span><br><span class="line">    at self.callback (D:\Develop\PicGo\resources\app.asar\node_modules\request\request.js:<span class="number">185</span>:<span class="number">22</span>)</span><br><span class="line">    at Request.emit (node:events:<span class="number">394</span>:<span class="number">28</span>)</span><br><span class="line">    at Request.onRequestError (D:\Develop\PicGo\resources\app.asar\node_modules\request\request.js:<span class="number">877</span>:<span class="number">8</span>)</span><br><span class="line">    at ClientRequest.emit (node:events:<span class="number">394</span>:<span class="number">28</span>)</span><br><span class="line">    at ClientRequest.onError (D:\Develop\PicGo\resources\app.asar\node_modules\tunnel-agent\index.js:<span class="number">179</span>:<span class="number">21</span>)</span><br><span class="line">    at Object.onceWrapper (node:events:<span class="number">514</span>:<span class="number">26</span>)</span><br><span class="line">    at ClientRequest.emit (node:events:<span class="number">394</span>:<span class="number">28</span>)</span><br><span class="line">-------Error Stack End------- </span><br><span class="line"><span class="number">2022</span>-08-04 <span class="number">21</span>:02:<span class="number">55</span> [PicGo ERROR] </span><br></pre></td></tr></table></figure>
<p>其原因在于PicGO只支持http协议的代理，而V2rayN只支持socks5协议代理。故应将代理软件替换为支持http协议的软件，有两种选择ShadowsocksR和Clash，我选择了Clash。更改代理软件并设置相应端口后会发现上传成功。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.jianshu.com/p/4740993c5843">为Typora配置图床,实现图片自动上传</a></li>
<li><a href="http://b.aksy.space/study-notes/514.html">PicGo+GitHub图床配置&amp;常见错误 - Eighty Percent</a></li>
</ol>
</blockquote>
<h3 id="上传至腾讯云对象存储"><a class="markdownIt-Anchor" href="#上传至腾讯云对象存储"></a> 上传至腾讯云对象存储</h3>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
      </tags>
  </entry>
  <entry>
    <title>kindle使用指南</title>
    <url>/2022/06/05/kindle%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录以下在使用kindle平台过程中积累的经验和工具：</p>
<span id="more"></span>
<h3 id="使用calibre推送电子书"><a class="markdownIt-Anchor" href="#使用calibre推送电子书"></a> 使用Calibre推送电子书</h3>
<p>建议直接留空邮箱服务器：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220707235743798.png" alt="image-20220707235743798" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/80604597">如何用Calibre将电子书转换成MOBI格式？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/65832237">进阶能力 | 将合集拆分为多本电子书</a></li>
<li><a href="https://bookfere.com/post/793.html">使用 Kindle 推送时为何会收到“验证请求”邮件？</a></li>
<li><a href="https://bookfere.com/post/11.html">Calibre 使用教程之邮件一键推送电子书</a></li>
</ol>
</blockquote>
<h3 id="破解cajviewer加密文件并打印出pdf"><a class="markdownIt-Anchor" href="#破解cajviewer加密文件并打印出pdf"></a> 破解CAJViewer加密文件并打印出pdf</h3>
<p>通过科学文库下载书籍，然后配合CAJViwer精简版进行打印。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1e741177s5">将加密的CAJ文件打印成PDF（请直接看2P，不用看1P）</a></li>
<li><a href="http://www.downcc.com/soft/6844.html">CAJViewer7.2精简绿色版下载</a></li>
<li><a href="https://book.sciencereading.cn/shop/main/Login/shopFrame.do">科学文库</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>kindle</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo配置指南</title>
    <url>/2022/05/11/hexo%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下通过官方文档从头搭建hexo博客的流程，也包括一些第三方服务的配置。</p>
<span id="more"></span>
<h3 id="bug记录"><a class="markdownIt-Anchor" href="#bug记录"></a> bug记录</h3>
<h3 id="百度收录"><a class="markdownIt-Anchor" href="#百度收录"></a> 百度收录</h3>
<h3 id="配置流程图和思维导图"><a class="markdownIt-Anchor" href="#配置流程图和思维导图"></a> 配置流程图和思维导图</h3>
<h3 id="配置明亮暗黑主题切换"><a class="markdownIt-Anchor" href="#配置明亮暗黑主题切换"></a> 配置明亮/暗黑主题切换</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.techgrow.cn/posts/abf4aee1.html">Hexo Next 8.x 主题添加可切换的暗黑模式 | Clay 的技术博客</a></li>
</ol>
</blockquote>
<h3 id="配置代码高亮和显示语言类型"><a class="markdownIt-Anchor" href="#配置代码高亮和显示语言类型"></a> 配置代码高亮和显示语言类型</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://hexo.io/zh-cn/docs/syntax-highlight.html">代码高亮 | Hexo</a></li>
<li><a href="https://theme-next.js.org/highlight/">Highlight</a></li>
<li><a href="https://theme-next.js.org/docs/index.html?highlight=highligh">Documentation | NexT</a></li>
</ol>
</blockquote>
<h3 id="配置指南"><a class="markdownIt-Anchor" href="#配置指南"></a> 配置指南</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://theme-next.js.org/docs/getting-started/configuration.html?highlight=config.next.">Configuration | NexT</a></li>
<li><a href="https://hexo.io/docs/configuration.html#Using-an-Alternate-Config">Configuration | Hexo</a></li>
</ol>
</blockquote>
<ol>
<li><a href="https://zhuqiaolun.github.io/2020/05/1590766728000/1590766728000/">如何让hexo博客被百度收录</a></li>
<li><a href="https://liukun.site/post/d17f3bc0-e1a6-11ec-8be6-8bfaf164b008/">在 hexo 的 next 主题中使用流程图和思维导图</a></li>
</ol>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
      </tags>
  </entry>
  <entry>
    <title>kornia中知识点01</title>
    <url>/2023/03/07/kornia%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文介绍一下在PyTorch基础上实现的扩展张量操作的仓库<a href="https://github.com/kornia/kornia">kornia</a>中对张量的进阶操作：</p>
<span id="more"></span>
<p>1.对张量进行膨胀(dilation)和腐蚀(erosion)操作：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://kornia.readthedocs.io/en/latest/morphology.html">kornia.morphology - Kornia</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode刷题技巧</title>
    <url>/2022/11/02/leetcode%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>本文记录一下在刷leetcode算法题过程中积累的一些技巧和方法：</p>
<span id="more"></span>
<h3 id="java本地调试"><a class="markdownIt-Anchor" href="#java本地调试"></a> Java本地调试</h3>
<ul>
<li>以<code>81.搜索旋转排序数组-ii.java</code>为例，其代码如下：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @lc app=leetcode.cn id=81 lang=java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [81] 搜索旋转排序数组 II</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @lc code=start</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">first</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">last</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span> mid;</span><br><span class="line">        <span class="keyword">while</span> (first != last) &#123;</span><br><span class="line">            mid = (first+last)&gt;&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[first] &lt; nums[mid]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[first] &lt;= target &amp;&amp; target &lt; nums[mid]) &#123;</span><br><span class="line">                    last = mid;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    first = mid + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[first] &gt; nums[mid]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; target &lt;= nums[last - <span class="number">1</span>]) &#123;</span><br><span class="line">                    first = mid + <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    last = mid;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// nums[first]==nums[mid]，由于有重复元素存在，不能判断增减性，first加1</span></span><br><span class="line">                first++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @lc code=end</span></span><br></pre></td></tr></table></figure>
<ul>
<li>在上述文件夹下新键<code>Test</code>类即<code>Test.java</code>文件用于测试，并将上述<code>Solution</code>类名改为<code>S</code>避免冲突：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">S</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">S</span>();</span><br><span class="line">        <span class="type">int</span>[] nums = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">target</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(s1.search(nums, target));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>以上述<code>S</code>类和<code>Test</code>类为例，由于在debug时实在本地查找相应的<code>.class</code>文件，所以需要在本地编译得到<code>S.class</code>和<code>Test.class</code>后再调试（下述<code>S.class</code>可以由其他文件名的<code>.java</code>文件编译得到，如<code>18.四数之和.java</code>：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221105152720.png" alt="" /></li>
<li>在下述位置打断点并点击<code>Debug</code>按钮进入调试：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221102180444.png" alt="" /></li>
<li>注意需要安装<code>Extension Pack for Java</code>以及<code>Code Runner</code>等插件，系统里需要安装java jdk。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1qL4y1q7bY">免费 Leetcode Debug？教你用VSCode优雅的刷算法题！！！_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
<h3 id="c本地调试"><a class="markdownIt-Anchor" href="#c本地调试"></a> C++本地调试</h3>
<ul>
<li>同样以<code>81.cpp</code>为例，注意进行C++调试时<code>.cpp</code>文件和路径名中不要含有中文。<code>81.cpp</code>代码如下：</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @lc app=leetcode.cn id=81 lang=cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [81] 搜索旋转排序数组 II</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @lc code=start</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//代码</span></span><br><span class="line"><span class="comment">//分析：允许重复元素，33题中如果 A[mid]&gt;=A[first]，则[first, mid]为递增序列不再成立。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">search</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> first =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> last = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> mid;</span><br><span class="line">        <span class="keyword">while</span>(first!=last)&#123;</span><br><span class="line">            mid = first + (last-first)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]==target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[first]&lt;nums[mid])&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[first]&lt;=target &amp;&amp; target&lt;nums[mid])&#123;</span><br><span class="line">                    last=mid;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    first=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[first]&gt;nums[mid])&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[mid]&lt;target &amp;&amp; target&lt;=nums[last<span class="number">-1</span>])&#123;</span><br><span class="line">                    first=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    last=mid;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//nums[first]==nums[mid]，因为有重复元素的存在，不能判断增减性，first++</span></span><br><span class="line">                first++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// @lc code=end</span></span><br></pre></td></tr></table></figure>
<ul>
<li>直接在上述文件中添加<code>main</code>函数作为调试入口：</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line">    nums=&#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="type">int</span> target = <span class="number">0</span>;</span><br><span class="line">    Solution s;</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">search</span>(nums, target) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>在下述位置打断点并点击右上角<code>Debug C/C++ File</code>进行调试：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221102183138.png" alt="" /></li>
<li>注意在调试之前，需要配置好C++环境（即<code>.vscode</code>文件夹），并安装<code>C/C++</code>和<code>Code Runner</code>等插件。</li>
</ul>
<blockquote>
<p>参考资料：<br />
<a href="https://blog.songjiahao.com/archives/362">leetcode刷题本地调试模板（C++） – SAquariusの梦想屋</a><br />
<a href="https://www.jianshu.com/p/2524c34511f3">C++ <code>vector&lt;int&gt;&amp;nums</code> 用法总结 </a></p>
</blockquote>
<h3 id="康托展开和逆康托展开"><a class="markdownIt-Anchor" href="#康托展开和逆康托展开"></a> 康托展开和逆康托展开</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/wbin233/article/details/72998375">康托展开和逆康托展开_wbin233的博客-CSDN博客_逆康托展开</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>matplotlib中知识点01</title>
    <url>/2022/06/03/matplotlib%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下在实现 <a href="https://link.springer.com/article/10.1007/s11042-016-3392-4">DDRQM</a> 过程中的一些 matplotlib 包和 python 相关知识点。</p>
<span id="more"></span>
<p>1.<code>matplotlib.pyplot.hist</code>或<code>plt.hist</code>：用于绘制直方图。</p>
</br>
<p>2.<code>matplotlib.pyplot.show</code>或<code>plt.show</code>：用于展示所有打开的图片。完整调用形式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.show(*, block=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>block</code>：布尔类型，可选。表示在返回之前是否等待所有figures关闭。默认为True，通常在非交互模式使用；交互模式通常设为False。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.show.html">matplotlib.pyplot.show</a></li>
</ol>
</blockquote>
</br>
<p>3.<code>matplotlib.pyplot.imshow</code>或<code>plt.imshow</code>：用于将数据作为图像展示，例如以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>∗</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2*2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>的形式展示4张图片。输入要么是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>G</mi><mi>B</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RGB(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>数据，要么是二维的标量数据，后者将被渲染成一张具有伪颜色的图像。显示灰度图时可以设置参数<code>cmap='gray'</code>。完整调用形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.imshow(X, cmap=<span class="literal">None</span>, norm=<span class="literal">None</span>, *, aspect=<span class="literal">None</span>, interpolation=<span class="literal">None</span>, alpha=<span class="literal">None</span>, vmin=<span class="literal">None</span>, vmax=<span class="literal">None</span>, origin=<span class="literal">None</span>, extent=<span class="literal">None</span>, interpolation_stage=<span class="literal">None</span>, filternorm=<span class="literal">True</span>, filterrad=<span class="number">4.0</span>, resample=<span class="literal">None</span>, url=<span class="literal">None</span>, data=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>X</code>：数组形式或者PIL图像。支持的数组类型有：</p>
<ul>
<li>(M, N)，具有标量数据的图像</li>
<li>(M, N, 3)，具有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>G</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">RGB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>值的图像</li>
<li>(M, N, 4)，具有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>G</mi><mi>B</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">RGBA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">A</span></span></span></span>值的图像，包括透明度</li>
</ul>
</li>
<li>
<p><code>cmap</code>：用于将标量数据映射为colors，对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>G</mi><mi>B</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RGB(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>数据该参数无效</p>
</li>
<li>
<p>略</p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.imshow.html">matplotlib.pyplot.imshow</a></li>
</ol>
</blockquote>
</br>
<p>4.当使用matplotlib画有很多subplots的图时，改善subplots布局：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/6541123/improve-subplot-size-spacing-with-many-subplots-in-matplotlib">Improve subplot size/spacing with many subplots in matplotlib</a></li>
</ol>
</blockquote>
</br>
5.使用matplot画散点图，利用scipy计算相关系数并利用sklearn计算回归：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> pearsonr</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">point_plot</span>(<span class="params">model, dataset, size=<span class="number">0.1</span></span>):</span><br><span class="line">    score_avgf_file = model + <span class="string">&#x27;_&#x27;</span> + dataset + <span class="string">&#x27;.txt&#x27;</span></span><br><span class="line">    score_avgf_pair = <span class="built_in">open</span>(<span class="string">&#x27;./txt/&#x27;</span> + score_avgf_file).read().splitlines()</span><br><span class="line">    score = []</span><br><span class="line">    avgf = []</span><br><span class="line">    <span class="keyword">for</span> pair <span class="keyword">in</span> score_avgf_pair:</span><br><span class="line">        score.append(<span class="built_in">float</span>(pair.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]))</span><br><span class="line">        avgf.append(<span class="built_in">float</span>(pair.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">1</span>]))</span><br><span class="line">    </span><br><span class="line">    scores = np.array(score)</span><br><span class="line">    avgfs = np.array(avgf)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># plt.plot(scores, avgfs, &#x27;o&#x27;)</span></span><br><span class="line">    <span class="comment"># corrco = np.corrcoef(scores, avgfs)</span></span><br><span class="line">    corrco = pearsonr(scores, avgfs)</span><br><span class="line">    plt.scatter(scores, avgfs, s=size)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;image complexity&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;avg F&#x27;</span>)</span><br><span class="line">    title = model + <span class="string">&#x27; on &#x27;</span> + dataset + <span class="string">&#x27;, correlation coefficient=&#x27;</span> + <span class="built_in">str</span>(corrco[<span class="number">0</span>])</span><br><span class="line">    plt.title(title)</span><br><span class="line">    save_fig = model + <span class="string">&#x27;_&#x27;</span> + dataset + <span class="string">&#x27;.png&#x27;</span></span><br><span class="line"></span><br><span class="line">    reg = LinearRegression().fit(scores.reshape(-<span class="number">1</span>,<span class="number">1</span>), avgfs)</span><br><span class="line">    pred = reg.predict(scores.reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">    plt.plot(scores, pred,linewidth=<span class="number">2</span>, color=<span class="string">&#x27;red&#x27;</span>, label=<span class="string">&#x27;回归线&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.savefig(<span class="string">&#x27;./fig/&#x27;</span> + save_fig)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [从零开始学Python【15】--matplotlib(散点图) - 天善智能：专注于商业智能BI和数据分析、大数据领域的垂直社区平台](https://ask.hellobi.com/blog/lsxxx2011/10243)
> 2. [如何在 Matplotlib 中设置散点图的标记大小](https://www.delftstack.com/zh/howto/matplotlib/how-to-set-marker-size-of-scatter-plot-in-matplotlib/)
> 3. [Matplotlib 散点图 | 菜鸟教程](https://www.runoob.com/matplotlib/matplotlib-scatter.html)
> 4. [Python三种方法计算皮尔逊相关系数](https://blog.csdn.net/qq_40260867/article/details/90667462)
</br>
5.由于OpenCV读取的图片默认三通道顺序为BGR，所以在使用matplotlib进行画图时，需要对其通道顺序进行调整：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">plt.imshow(result[:, :, [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]])</span><br><span class="line">plt.title(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>ohmyzsh使用指南</title>
    <url>/2023/04/19/ohmyzsh%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文介绍一下ohmyzsh的学习和使用过程：</p>
<span id="more"></span>
<p>参考资料6和7为主要配置流程：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li>[GitHub - ohmyzsh/ohmyzsh: 🙃 A delightful community-driven (with 2,100+ contributors) framework for managing your zsh configuration)</li>
<li><a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH">Installing ZSH · ohmyzsh/ohmyzsh Wiki · GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/67261530/process-exited-with-code-1-cant-open-wsl-zsh">windows subsystem for linux - [process exited with code 1], can’t open WSL, zsh - Stack Overflow</a></li>
<li><a href="https://www.cnblogs.com/matytan/p/16684665.html">优雅简洁的zim美化你的zsh终端，媲美甚至超越 ohmyzsh - 勒勒乐了 - 博客园</a></li>
<li><a href="https://www.bilibili.com/video/BV1Bg411m7ND">优雅简洁的zim美化你的zsh终端，媲美甚至超越 ohmyzsh_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1C7411V7M8">终端神器ohmyzsh_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.sunhanwu.top/archives/ohmyzsh">Linux/Mac OS下安装并配置oh my zsh | SunPages</a>：<strong>重点参考</strong></li>
<li><a href="https://github.com/unixorn/awesome-zsh-plugins">GitHub - unixorn/awesome-zsh-plugins: A collection of ZSH frameworks, plugins, themes and tutorials.</a></li>
<li><a href="https://juejin.cn/post/6844903939121348616">oh-my-zsh让终端好用到飞起~ - 掘金</a></li>
</ol>
</blockquote>
<h3 id="将bashrc中的alias迁移到zshrc"><a class="markdownIt-Anchor" href="#将bashrc中的alias迁移到zshrc"></a> 将.bashrc中的alias迁移到.zshrc</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://apple.stackexchange.com/questions/371867/easiest-way-to-migrate-aliases-from-bash-to-zsh">macos - Easiest way to migrate aliases from bash to zsh - Ask Different</a></li>
</ol>
</blockquote>
<h3 id="zsh在mnt目录中的git仓库中prompt很慢"><a class="markdownIt-Anchor" href="#zsh在mnt目录中的git仓库中prompt很慢"></a> zsh在/mnt/…目录中的git仓库中prompt很慢</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/hsab/WSL-config/issues/1">Slow prompt command (oh-my-zsh) · Issue #1 · hsab/WSL-config · GitHub</a></li>
</ol>
</blockquote>
<h3 id="代理配置"><a class="markdownIt-Anchor" href="#代理配置"></a> 代理配置</h3>
<p>配置完成后：</p>
<ul>
<li><code>proxy set</code>：开启代理</li>
<li><code>proxy unset</code>：关闭代理</li>
<li><code>proxy test</code>：查看代理状态</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/tuilk/p/16287472.html">WSL2配置代理 - Leaos - 博客园</a></li>
</ol>
</blockquote>
<h3 id="为指定用户安装zsh-不需要root权限"><a class="markdownIt-Anchor" href="#为指定用户安装zsh-不需要root权限"></a> 为指定用户安装zsh (不需要root权限)</h3>
<p>下述安装过程主要参考资料5和资料6：</p>
<ol>
<li>从源码安装<code>zsh</code>的依赖包<code>ncurses</code>：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> ftp://ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz <span class="token function">tar</span> xf ncurses-6.1.tar.gz 
<span class="token builtin class-name">cd</span> ncurses-6.1 ./configure --prefix<span class="token operator">=</span><span class="token environment constant">$HOME</span>/local <span class="token assign-left variable">CXXFLAGS</span><span class="token operator">=</span><span class="token string">"-fPIC"</span> <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-fPIC"</span> 
<span class="token function">make</span> -j <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>构建并安装<code>zsh</code>（将下述命令写入脚本<code>zsh.sh</code>并运行<code>sh zsh.sh</code>：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">ZSH_SRC_NAME</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/packages/zsh.tar.xz
<span class="token assign-left variable">ZSH_PACK_DIR</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/packages/zsh
<span class="token assign-left variable">ZSH_LINK</span><span class="token operator">=</span><span class="token string">"https://sourceforge.net/projects/zsh/files/latest/download"</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token string">"<span class="token variable">$ZSH_PACK_DIR</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"Creating zsh directory under packages directory"</span>
    <span class="token function">mkdir</span> -p <span class="token string">"<span class="token variable">$ZSH_PACK_DIR</span>"</span>
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> -f <span class="token variable">$ZSH_SRC_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">curl</span> -Lo <span class="token string">"<span class="token variable">$ZSH_SRC_NAME</span>"</span> <span class="token string">"<span class="token variable">$ZSH_LINK</span>"</span>
<span class="token keyword">fi</span>

<span class="token function">tar</span> xJvf <span class="token string">"<span class="token variable">$ZSH_SRC_NAME</span>"</span> -C <span class="token string">"<span class="token variable">$ZSH_PACK_DIR</span>"</span> --strip-components <span class="token number">1</span>
<span class="token builtin class-name">cd</span> <span class="token string">"<span class="token variable">$ZSH_PACK_DIR</span>"</span>

./configure --prefix<span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/local"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">CPPFLAGS</span><span class="token operator">=</span><span class="token string">"-I<span class="token environment constant">$HOME</span>/local/include"</span> <span class="token punctuation">\</span>
    <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-L<span class="token environment constant">$HOME</span>/local/lib"</span>
<span class="token function">make</span> -j <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>设置默认shell为<code>zsh</code>。创建<code>~/.bash_profile</code>文件并写入：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/local/bin:<span class="token environment constant">$PATH</span> 
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">which</span> <span class="token function">zsh</span><span class="token variable">`</span></span> 
<span class="token punctuation">[</span> -f <span class="token string">"<span class="token environment constant">$SHELL</span>"</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">exec</span> <span class="token string">"<span class="token environment constant">$SHELL</span>"</span> -l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li>运行<code>source ~/.bash_profile</code>启动<code>zsh</code>。选择<code>q</code>选项暂不进行配置，此时位于zsh shell。</li>
<li>直接采用资料6中的配置（可以将<code>ohmyzsh.sh</code>下载到本地运行<code>sh ohmyzsh.sh</code></li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -fsSL https://www.sunhanwu.top/upload/2022/12/ohmyzsh.sh<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="6">
<li>安装第三方插件：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-syntax-highlighting

<span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-autosuggestions<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="7">
<li>在<code>.zshrc</code>中配置所需要的插件（功能介绍见资料6）：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span> <span class="token function">git</span> extract fzf z zsh-autosuggestions zsh-syntax-highlighting wd <span class="token function">sudo</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="8">
<li>将原本<code>.bashrc</code>中的<code>alias</code>和<code>export</code>配置写入<code>~/.bash_aliases</code>和<code>~/.bash_path</code>文件。然后在<code>.zshrc</code>文件中写入生效：</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> -f ~/.bash_aliases <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token builtin class-name">.</span> ~/.bash_aliases
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> -f ~/.bash_path <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token builtin class-name">.</span> ~/.bash_path
<span class="token keyword">fi</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>运行<code>source ~/.zshrc</code>即可生效。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/zsh-users/zsh/blob/master/INSTALL">zsh/INSTALL at master · zsh-users/zsh · GitHub</a></li>
<li><a href="https://unix.stackexchange.com/questions/673669/installing-zsh-from-source-file-without-root-user-access">software installation - Installing zsh from source file without root user access - Unix &amp; Linux Stack Exchange</a></li>
<li><a href="https://zsh.sourceforge.io/FAQ/zshfaq01.html#l7">Z-Shell Frequently-Asked Questions</a></li>
<li><a href="https://stackoverflow.com/questions/15293406/install-zsh-without-root-access">linux - Install zsh without root access? - Stack Overflow</a></li>
<li><a href="https://jdhao.github.io/2018/10/13/centos_zsh_install_use/">Building Zsh from Source and Configuring It on CentOS - jdhao’s digital space</a></li>
<li><a href="https://www.sunhanwu.top/archives/ohmyzsh">Linux/Mac OS下安装并配置oh my zsh | SunPages</a></li>
</ol>
</blockquote>
<h3 id="git-bash中安装zsh和ohmyzsh"><a class="markdownIt-Anchor" href="#git-bash中安装zsh和ohmyzsh"></a> git bash中安装zsh和ohmyzsh</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://gist.github.com/fworks/af4c896c9de47d827d4caa6fd7154b6b">Zsh / Oh-my-zsh on Windows Git Bash · GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/64036536/strange-characters-for-ohmyz-in-vscode">git - Strange characters for ohmyz in vscode - Stack Overflow</a></li>
<li><a href="https://github.com/microsoft/vscode/issues/120004">Weird letter spacing in Integrated Terminal for VS Code · Issue #120004 · microsoft/vscode · GitHub</a></li>
<li><a href="https://github.com/microsoft/vscode/issues/67789">weird cursor-word space issue with zsh, oh-my-zsh · Issue #67789 · microsoft/vscode · GitHub</a></li>
</ol>
</blockquote>
<h3 id="安装autojump插件实现目录跳转"><a class="markdownIt-Anchor" href="#安装autojump插件实现目录跳转"></a> 安装autojump插件实现目录跳转</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/wting/autojump">GitHub - wting/autojump: A cd command that learns - easily navigate directories from the command line</a></li>
</ol>
</blockquote>
<h3 id="安装powerlevel10k主题"><a class="markdownIt-Anchor" href="#安装powerlevel10k主题"></a> 安装powerlevel10k主题</h3>
<ul>
<li>重置配置：<code>p10k configure</code></li>
<li>在git bash和MobaTermX中会出现某些配置直接被跳过的情况，其原因为这些终端不支持256colors，</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/romkatv/powerlevel10k">GitHub - romkatv/powerlevel10k: A Zsh theme</a></li>
<li><a href="https://github.com/romkatv/powerlevel10k/issues/214">How to reset the settings? · Issue #214 · romkatv/powerlevel10k · GitHub</a></li>
<li><a href="https://github.com/romkatv/powerlevel10k/issues/1840">Configuration wizard missing · Issue #1840 · romkatv/powerlevel10k · GitHub</a></li>
</ol>
</blockquote>
<h3 id="vscode-icons图标显示"><a class="markdownIt-Anchor" href="#vscode-icons图标显示"></a> VSCode Icons图标显示</h3>
<p>方案一： 安装<code>MesloLGS NF</code>字体并设置。<br />
方案二：下载参考资料2中的扩展<code>Fira Code</code>字体。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/romkatv/powerlevel10k/issues/671">icons don’t display in VS code integrated terminal after setting terminal.integrated.fontFamily · Issue #671 · romkatv/powerlevel10k · GitHub</a></li>
<li><a href="https://github.com/tonsky/FiraCode/discussions/1285">Missing icons for oh-my-zsh · tonsky/FiraCode · Discussion #1285 · GitHub</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>ohmyzsh学习笔记</title>
    <url>/2023/04/20/ohmyzsh%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文记录一下在使用ohmyzsh过程中碰到的问题：</p>
<span id="more"></span>
<h3 id="报错job-table-full-or-recursion-limit-exceeded"><a class="markdownIt-Anchor" href="#报错job-table-full-or-recursion-limit-exceeded"></a> 报错<code>job table full or recursion limit exceeded</code>：</h3>
<p>原因：在<code>.bash_aliases</code>中出现了如下代码，导致循环导入：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> -f ~/.bash_aliases <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
 <span class="token builtin class-name">.</span> ~/.bash_aliases
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>解决方案：注释掉即可</p>
<h3 id="报错process-exited-with-code-11-0x0000000b"><a class="markdownIt-Anchor" href="#报错process-exited-with-code-11-0x0000000b"></a> 报错<code>[process exited with code 11 (0x0000000b)]</code></h3>
<p>原因：<code>.bashrc</code>中出现了问题，暂未排查出来<br />
解决方案：将<code>.bashrc</code>被分为<code>.bashrc.bak</code>，新建<code>.bashrc</code>文件并写入配置。（建议直接使用zsh替代bash）。</p>
<h3 id="查看commands历史并使用"><a class="markdownIt-Anchor" href="#查看commands历史并使用"></a> 查看commands历史并使用</h3>
<ul>
<li><code>history</code>：查看commands历史</li>
<li><code>!!</code>：选择最近命令</li>
<li><code>!12</code>：选择<code>history</code>中的第12条命令</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://linuxhint.com/search-in-my-zsh-history/">How to Search in My ZSH History</a></li>
</ol>
</blockquote>
<h3 id="one-word-accept"><a class="markdownIt-Anchor" href="#one-word-accept"></a> One word accept</h3>
<ul>
<li><code>Ctrl+down</code> / <code>Ctrl+j</code>：接受建议</li>
<li><code>Ctrl+right</code>：接受一个work</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/zsh-users/zsh-autosuggestions/issues/627">One word accept · Issue #627 · zsh-users/zsh-autosuggestions · GitHub</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>python中知识点01</title>
    <url>/2022/07/05/python%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下python中常用的知识点：</p>
<span id="more"></span>
<p>1.在Python shell中清屏。在Windows和Linux中的实现原理均为调用os.system提供的清屏函数。</p>
<ul>
<li>
<p>Windows：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os
clear <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cls'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后调用<code>clear()</code>即可。也可以直接运行<code>os.system('cls')</code>。</p>
</li>
<li>
<p>Linux：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os
clear <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'clear'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后调用<code>clear()</code>即可。也可以直接运行<code>os.system('clear')</code>。</p>
</li>
</ul>
<p>为了避免每次启动Python shell后都需要重新定义<code>clear</code>函数。可以设置如下脚本：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">if</span> os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">'nt'</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">cls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		_ <span class="token operator">=</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cls'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		_ <span class="token operator">=</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'clear'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>并使得上述脚本在启动Python shell时自动运行。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.tutorialspoint.com/how-to-clear-python-shell#">How to clear Python shell?</a></li>
</ol>
</blockquote>
</br>
<p>2.设置在Python shell启动时自动执行某个脚本。</p>
<p>下面记录在Ubuntu系统中的设置：</p>
<ul>
<li>
<p>创建脚本并写入想要执行的命令，例如创建<code>startup.py</code>并写入：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">if</span> os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">'nt'</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">cls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		_ <span class="token operator">=</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cls'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		_ <span class="token operator">=</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'clear'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>该脚本在打开Python shell中创建了函数<code>clear()</code>，可以通过执行<code>clear()</code>实现清屏。</p>
</li>
<li>
<p>在当前Ubuntu系统中使得环境变量<code>PYTHONSTARTUP</code>指向上述脚本对应的路径，假设上述脚本路径为<code>/home/FT/scripts/startup.py</code>。则可以通过在bash中执行</p>
<p><code>export PYTHONSTARTUP=/home/FT/scripts/startup.py</code></p>
<p>创建临时环境变量，也可以在<code>~/.bashrc</code>中添加该命令使其永久化。</p>
</li>
<li>
<p>此时在bash中打开python shell（包括Anaconda中的python shell），可直接通过<code>clear()</code>实现清屏。</p>
</li>
</ul>
<p>下面记录在Windows系统中的设置：</p>
<ul>
<li>
<p>创建脚本并写入想要执行的命令，例如上述的<code>startup.py</code>。</p>
</li>
<li>
<p>添加用户环境变量<code>PYTHONSTARTUP</code>：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220707103000076.png" alt="image-20220707103000076" /></p>
</li>
<li>
<p>打开cmd，运行<code>refreshenv</code>（需安装Chocolatey）更新环境变量。</p>
</li>
<li>
<p>运行<code>python</code>，会发现<code>startup.py</code>中的命令已生效。</p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP">PYTHONSTARTUP</a></li>
<li><a href="https://www.cnblogs.com/zkwarrior/p/9374302.html">win10 python3.5 自动补全设置</a></li>
</ol>
</blockquote>
</br>
<p>3.Python中的metaclass。</p>
<p><strong>类也是对象</strong><br />
Python关于类是什么这个问题有古怪的答案，它借鉴了来自Smalltalk语言的设计。</p>
<p>在大多数语言中，类只是描述如何生成一个对象的代码段。在Python中差不多也是这样的：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">class</span> <span class="token class-name">ObjectCreator</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token keyword">pass</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token operator">>></span><span class="token operator">></span> my_object <span class="token operator">=</span> ObjectCreator<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>my_object<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>ObjectCreator <span class="token builtin">object</span> at <span class="token number">0x8974f2c</span><span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>但是类在Python中意味着更多。类本身也是对象。</p>
<p>只要你使用关键字<code>class</code>，Python就会执行它并创建一个对象。以下的指令：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">class</span> <span class="token class-name">ObjectCreator</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token keyword">pass</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>在内存中创建了一个名为<code>ObjectCreator</code>的对象。</p>
<p>这个对象（即这个类）它自身具有可以创建对象（即实例）的能力，这就是为什么它是一个类。</p>
<p>但是，它仍然是一个对象，因此：</p>
<ul>
<li>你可以将它赋值给一个变量</li>
<li>你可以打印它</li>
<li>你可以复制它</li>
<li>你可以给它添加属性</li>
<li>你可以把它作为函数参数传递</li>
</ul>
<p>例如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">)</span> <span class="token comment"># you can print a class because it's an object</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.ObjectCreator'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">echo</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token keyword">print</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">>></span><span class="token operator">></span> echo<span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">)</span> <span class="token comment"># you can pass a class as a parameter</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.ObjectCreator'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hasattr</span><span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">,</span> <span class="token string">'new_attribute'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token boolean">False</span>
<span class="token operator">>></span><span class="token operator">></span> ObjectCreator<span class="token punctuation">.</span>new_attribute <span class="token operator">=</span> <span class="token string">'foo'</span> <span class="token comment"># you can add attributes to a class</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hasattr</span><span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">,</span> <span class="token string">'new_attribute'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token boolean">True</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">.</span>new_attribute<span class="token punctuation">)</span>
foo
<span class="token operator">>></span><span class="token operator">></span> ObjectCreatorMirror <span class="token operator">=</span> ObjectCreator <span class="token comment"># you can assign a class to a variable</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>ObjectCreatorMirror<span class="token punctuation">.</span>new_attribute<span class="token punctuation">)</span>
foo
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>ObjectCreatorMirror<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>ObjectCreator <span class="token builtin">object</span> at <span class="token number">0x8997b4c</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>动态地创建类</strong></p>
<p>因为类是对象，所以你可以像任何对象那样自由地创建他们。</p>
<p>首先，你可以在一个函数中使用<code>class</code>创建一个类：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">choose_class</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'foo'</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">class</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">pass</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">return</span> Foo <span class="token comment"># return the class, not an instance</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">class</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">pass</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">return</span> Bar
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">>></span><span class="token operator">></span> MyClass <span class="token operator">=</span> choose_class<span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>MyClass<span class="token punctuation">)</span> <span class="token comment"># the function returns a class, not an instance</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.Foo'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>MyClass<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># you can create an object from this class</span>
<span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>Foo <span class="token builtin">object</span> at <span class="token number">0x89c6d4c</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>但是它不够动态，因为你仍然需要自己写整个类。</p>
<p>因为类是对象，它们必须被某个东西生成。</p>
<p>当你使用<code>class</code>关键字的时候，Python自动地创建了这个对象。但是和在Python中的大多数东西一样，它给了你手动来做这件事的方法。</p>
<p>记得函数<code>type</code>吗？这个好的古老的函数让你知道一个对象是什么类型。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'int'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'str'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'type'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>ObjectCreator<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.ObjectCreator'</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其实，<code>type</code>还有一个完全不同的能力，它也能够自由地创建类。<code>type</code>可以将一个类的描述作为参数，然后返回一个类。</p>
<p>（注：虽然相同的函数根据传给它参数的不同有两种完全不同的用途看起来很蠢。但是<code>type</code>的这种情况是由于Python向后兼容所导致的问题）</p>
<p><code>type</code>以下面的方式起作用：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">type</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> bases<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中：</p>
<ul>
<li><code>name</code>：类名</li>
<li><code>bases</code>：父类的元组（用于继承，可以为空）</li>
<li><code>attr</code>：字典，包含属性名和属性值</li>
</ul>
<p>例如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">class</span> <span class="token class-name">MyShinyClass</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>可以通过以下的方式手动创建：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> MyShinyClass <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">'MyShinyClass'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment"># returns a class object</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>MyShinyClass<span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.MyShinyClass'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>MyShinyClass<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># create an instance with the class</span>
<span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>MyShinyClass <span class="token builtin">object</span> at <span class="token number">0x8997cec</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以注意到我们同时使用<code>MyShinyClass</code>作为类名并且作为变量来做类引用。它们可以不同，但是没有必要使问题复杂化。</p>
<p><code>type</code>接受一个字典来定义类的属性。所以：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">class</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       bar <span class="token operator">=</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>也能被翻译为：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> Foo <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">'Foo'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'bar'</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>并且作为一个普通类使用：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.Foo'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>Foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>
<span class="token boolean">True</span>
<span class="token operator">>></span><span class="token operator">></span> f <span class="token operator">=</span> Foo<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>Foo <span class="token builtin">object</span> at <span class="token number">0x8a9b84c</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>
<span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>当然，你也可以从<code>Foo</code>继承它，所以：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span>   <span class="token keyword">class</span> <span class="token class-name">FooChild</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>将会是：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> FooChild <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">'FooChild'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>Foo<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>FooChild<span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'__main__.FooChild'</span><span class="token operator">></span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>FooChild<span class="token punctuation">.</span>bar<span class="token punctuation">)</span> <span class="token comment"># bar is inherited from Foo</span>
<span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最后，你想向你的类中添加方法。只需定义一个具有合适标识的函数并且将其作为一个属性给它赋值。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">echo_bar</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">>></span><span class="token operator">></span> FooChild <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">'FooChild'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>Foo<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'echo_bar'</span><span class="token punctuation">:</span> echo_bar<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>Foo<span class="token punctuation">,</span> <span class="token string">'echo_bar'</span><span class="token punctuation">)</span>
<span class="token boolean">False</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>FooChild<span class="token punctuation">,</span> <span class="token string">'echo_bar'</span><span class="token punctuation">)</span>
<span class="token boolean">True</span>
<span class="token operator">>></span><span class="token operator">></span> my_foo <span class="token operator">=</span> FooChild<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> my_foo<span class="token punctuation">.</span>echo_bar<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python">What are metaclasses in Python?</a></li>
</ol>
</blockquote>
</br>
<p>4.目前<code>pip</code>已经不提供<code>pip search &lt;package name&gt;</code>的服务，运行后会出现以下报错：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220717103944297.png" alt="image-20220717103944297" /></p>
<p>此时，可以通过在 <a href="https://duckduckgo.com/">duckduckgo</a> 搜索 <code>!pip &lt;package name&gt;</code>来获得相关的package信息。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/17373473/how-do-i-search-for-an-available-python-package-using-pip">How do I search for an available Python package using pip?</a></li>
<li><a href="https://www.reddit.com/r/Python/comments/kfxibk/pypi_xmlrpc_search_api_has_been_disabled_due_to/">PyPI XMLRPC search API has been disabled due to flood of requests. <code>pip search</code> may be deprecated.</a></li>
<li><a href="https://github.com/pypa/pip/issues/5216">Remove the pip search command #5216</a></li>
</ol>
</blockquote>
</br>
<p>5.<code>pip</code>安装指定版本package：<code>pip install Package_name==version</code>。例如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">pip install mmdet<span class="token operator">==</span><span class="token number">2.12</span><span class="token number">.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.google.com/search?q=pip+install+specific+version&amp;oq=pip+install+specivi&amp;aqs=chrome.1.69i57j0i512l9.4361j0j7&amp;sourceid=chrome&amp;ie=UTF-8">pip install specific version</a></li>
</ol>
</blockquote>
</br>
<p>6.Python中两个有用的函数：</p>
<ul>
<li><code>dir()</code>：</li>
<li><code>help()</code>：</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="http://net-informations.com/python/iq/help.htm">Difference between dir() and help()</a></li>
</ol>
</blockquote>
</br>
<p>7.根据字符串常量动态创建以字符串命名的变量：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://segmentfault.com/a/1190000018534188">Python进阶：如何将字符串常量转化为变量？</a></li>
</ol>
</blockquote>
</br>
<p>8.当通过<code>socket</code>创建本地服务器时：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> socket

HOST<span class="token punctuation">,</span> PORT <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">8888</span>

listen_socket <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
listen_socket<span class="token punctuation">.</span>setsockopt<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>SOL_SOCKET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SO_REUSEADDR<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
listen_socket<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>HOST<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span><span class="token punctuation">)</span>
listen_socket<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Serving HTTP on port %s ...'</span> <span class="token operator">%</span> PORT<span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    client_connection<span class="token punctuation">,</span> client_address <span class="token operator">=</span> listen_socket<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>
    request <span class="token operator">=</span> client_connection<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    http_response <span class="token operator">=</span> <span class="token triple-quoted-string string">"""\
HTTP/1.1 200 OK

Hello, World!
"""</span>
    client_connection<span class="token punctuation">.</span>sendall<span class="token punctuation">(</span>http_response<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    client_connection<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>运行该脚本可能发生以下情况：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727134014236.png" alt="image-20220727134014236" /></p>
<p>其原因为本地端口<code>8888</code>被其他的应用占用（本例中其被Charles占用），解决方法为使用其他的端口。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/35318041">Python实现简单的web服务器</a></li>
<li>[socket.error: <a href="https://stackoverflow.com/questions/2778840/socket-error-errno-10013-an-attempt-was-made-to-access-a-socket-in-a-way-forb">Errno 10013] An attempt was made to access a socket in a way forbidden by its access permissions</a></li>
</ol>
</blockquote>
</br>
<p>8.如下，构建本地代理服务器来请求<code>https://www.baidu.com</code>：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 代理</span>
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>error <span class="token keyword">import</span> URLError
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> ProxyHandler<span class="token punctuation">,</span> Request<span class="token punctuation">,</span> build_opener

proxy_handler <span class="token operator">=</span> ProxyHandler<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token string">'http'</span><span class="token punctuation">:</span> <span class="token string">'http://127.0.0.1:9743'</span><span class="token punctuation">,</span>
    <span class="token string">'https'</span><span class="token punctuation">:</span> <span class="token string">'https://127.0.0.1:10000'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
url <span class="token operator">=</span> <span class="token string">"https://www.baidu.com"</span>
<span class="token comment"># request = Request(url)</span>
opener <span class="token operator">=</span> build_opener<span class="token punctuation">(</span>proxy_handler<span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token comment"># response = opener.open(request)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> URLError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>运行后会出现如下情况：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727140934265.png" alt="image-20220727140934265" /></p>
<p>此时注释掉构建的<code>https</code>代理服务器：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 'https': 'https://127.0.0.1:10000'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>运行正常：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220727141031507.png" alt="image-20220727141031507" /></p>
<p>故推测是构建的<code>https</code>型代理服务器出现问题，有待探究。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/huangguifeng/p/7635512.html">urllib，request 设置代理</a></li>
<li><a href="https://stackoverflow.com/questions/12993276/errno-10061-no-connection-could-be-made-because-the-target-machine-actively-re">Errno 10061 : No connection could be made because the target machine actively refused it ( client - server )</a></li>
</ol>
</blockquote>
</br>
9.下面两段代码的区别：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> a<span class="token operator">></span>b<span class="token punctuation">:</span>
		<span class="token keyword">return</span> a
	<span class="token keyword">return</span> b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> a<span class="token operator">></span>b<span class="token punctuation">:</span>
		<span class="token keyword">return</span> a
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [It is more efficient to use if-return-return or if-else-return?](https://stackoverflow.com/questions/9191388/it-is-more-efficient-to-use-if-return-return-or-if-else-return)
</br>
10.Python中星号*(asterisk)的各种用法总结
> 参考资料：
> 1. [All you need to know about Asterisks in Python](https://bas.codes/posts/python-asterisks)
</br>
11.python语法：判断字符串中是否包含某子字符串
<pre class="line-numbers language-python" data-language="python"><code class="language-python">test_str <span class="token operator">=</span> <span class="token string">'helloworld'</span>

<span class="token keyword">if</span> <span class="token string">'world'</span> <span class="token keyword">in</span> test_str<span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'yes'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'no'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Python判断字符串是否包含特定子串的7种方法](https://cloud.tencent.com/developer/article/1699719)
</br>
11.格式化字符串：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">TAG <span class="token operator">=</span> <span class="token string">'scwssod'</span>
<span class="token builtin">id</span> <span class="token operator">=</span> <span class="token number">30</span>
filename <span class="token operator">=</span> <span class="token string">'mytest_%s_model-%d.log'</span><span class="token operator">%</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</br>
12.查看函数的类汇编代码：
可以通过python的`dis`库查看函数的类汇编形式的代码，如下图所示：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016154442.png)
同样，可以通过其`ast`库查看代码会被转换为怎样的语法树（python=3.10.6，python3.8输出或打印的语法树没有换行）：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016161921.png)
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016161739.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016161809.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016161809.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li>《代码之髓》3.2节</li>
<li><a href="https://docs.python.org/3.10/library/ast.html#module-ast" title="ast: Abstract Syntax Tree classes and manipulation."><code>ast</code></a> — Abstract Syntax Trees</li>
</ol>
</blockquote>
</br>
13.Python按键 (key) 或值 (value) 对字典进行排序
- 按键排序：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 声明字典</span>
key_value <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>     

<span class="token comment"># 初始化</span>
key_value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">56</span>       
key_value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span> 
key_value<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span> 
key_value<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">24</span>
key_value<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">18</span>      
key_value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">323</span> 

<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"按键(key)排序:"</span><span class="token punctuation">)</span>   

<span class="token comment"># sorted(key_value) 返回重新排序的列表</span>
<span class="token comment"># 字典按键排序</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">sorted</span> <span class="token punctuation">(</span>key_value<span class="token punctuation">)</span> <span class="token punctuation">:</span> 
	<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> key_value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end <span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
- 按值排序：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 声明字典</span>
key_value <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>     

<span class="token comment"># 初始化</span>
key_value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">56</span>       
key_value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span> 
key_value<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span> 
key_value<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">24</span>
key_value<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">18</span>      
key_value<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">323</span> 


<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"按值(value)排序:"</span><span class="token punctuation">)</span>   
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>key_value<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token keyword">lambda</span> kv<span class="token punctuation">:</span><span class="token punctuation">(</span>kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Python 按键(key)或值(value)对字典进行排序 | 菜鸟教程](https://www.runoob.com/python3/python-sort-dictionaries-by-key-or-value.html)
> 2. [python字典按照key,value进行排序的几种方法_51CTO博客_python 对字典按照value进行排序](https://blog.51cto.com/hzf16321/2721549)
> 3. [python笔记17-字典如何按value排序 - 上海-悠悠 - 博客园](https://www.cnblogs.com/yoyoketang/p/9147052.html)
</br>
14.Python中创建包和导入包的操作
> 参考资料：
> 1. [Python创建包，导入包（入门必读）](http://c.biancheng.net/view/4669.html)
> 2. [Distutils/Tutorial - Python Wiki](https://wiki.python.org/moin/Distutils/Tutorial?highlight=%28setup.py%29)
</br>
15.Python中清空txt文件
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
	<span class="token builtin">file</span><span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [python如何清空txt文件 - 问答 - 亿速云](https://www.yisu.com/ask/6997.html)
</br>
16.pip、setuptools、python环境变量、python命令行参数等
- [pip指南 · January Star](http://chenjiee815.github.io/pipzhi-nan.html)
- [setuptools指南：未完待续 · January Star](http://chenjiee815.github.io/setuptoolszhi-nan-wei-wan-dai-xu.html)
- [Python环境变量 · January Star](http://chenjiee815.github.io/pythonhuan-jing-bian-liang.html)
- [Python命令行参数 · January Star](http://chenjiee815.github.io/pythonming-ling-xing-can-shu.html)
>参考资料：
>1. [All Posts · January Star](http://chenjiee815.github.io/archives.html)
</br>
17.Python中的正则表达式匹配：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/liao392781/article/details/80181088">用python正则表达式提取字符串_猪笨是念来过倒的博客-CSDN博客_python正则表达式提取字符串</a></li>
<li><a href="https://www.cnblogs.com/ljhdo/p/10678281.html">正则表达式 第三篇：分组和捕获 - 悦光阴 - 博客园</a></li>
</ol>
</blockquote>
</br>
18.Python中的`next()`函数：
- 描述：`next()`函数返回iterator的下一个项目，主要和生成迭代器的`iter()`一起使用
- 语法：`next(iterable[,defaulat]`
- 参数说明：iterable为可迭代对象，default可选，用于设置在没有下一个元素时返回该默认值，如果不设置又没有下一个元素，会触发`StopIteration`异常
- 返回值：返回下一个item。
- 实例：对于一个pytorch中的`DataLoader`对象，可以如下使用：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> Dataset<span class="token punctuation">,</span> DataLoader
<span class="token keyword">class</span> <span class="token class-name">myDataset</span><span class="token punctuation">(</span>Dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
dataset <span class="token operator">=</span> myDataset<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> num_workers<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>
iter_loader <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>loader<span class="token punctuation">)</span> <span class="token comment"># 生成迭代器</span>
next_input<span class="token punctuation">,</span> next_target<span class="token punctuation">,</span> _ <span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>iter_loader<span class="token punctuation">)</span> <span class="token comment"># 访问迭代器下一个item</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Python next() 函数 | 菜鸟教程](https://www.runoob.com/python/python-func-next.html)
> 2. [python - What does next() and iter() do in PyTorch's DataLoader() - Stack Overflow](https://stackoverflow.com/questions/62549990/what-does-next-and-iter-do-in-pytorchs-dataloader)
> 3. [torch.utils.data.DataLoader "next" function? - PyTorch Forums](https://discuss.pytorch.org/t/torch-utils-data-dataloader-next-function/87270/2)
</br>
19.python中的`enumerate`的用法：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> seasons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Spring'</span><span class="token punctuation">,</span> <span class="token string">'Summer'</span><span class="token punctuation">,</span> <span class="token string">'Fall'</span><span class="token punctuation">,</span> <span class="token string">'Winter'</span><span class="token punctuation">]</span>  
<span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">enumerate</span><span class="token punctuation">(</span>seasons<span class="token punctuation">)</span><span class="token punctuation">)</span>  
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'Spring'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'Summer'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'Fall'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'Winter'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  
<span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">enumerate</span><span class="token punctuation">(</span>seasons<span class="token punctuation">,</span> start<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment"># 下标从 1 开始  </span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'Spring'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'Summer'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'Fall'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'Winter'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token operator">>></span><span class="token operator">></span> seq <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'one'</span><span class="token punctuation">,</span> <span class="token string">'two'</span><span class="token punctuation">,</span> <span class="token string">'three'</span><span class="token punctuation">]</span>  
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> element <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">:</span>  
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span> i<span class="token punctuation">,</span> element  
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  
<span class="token number">0</span> one  
<span class="token number">1</span> two  
<span class="token number">2</span> three<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Python enumerate() 函数 | 菜鸟教程](https://www.runoob.com/python/python-func-enumerate.html)
</br>
20.安装`pip install albumentations`时报错：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Could not <span class="token function">install</span> packages due to an OSError: <span class="token punctuation">[</span>WinError <span class="token number">5</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
解决方案：添加`--user`选项
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> --upgrade albumentations --user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [tensorflow - Could not install packages due to an EnvironmentError: [WinError 5] Access is denied: - Stack Overflow](https://stackoverflow.com/questions/51912999/could-not-install-packages-due-to-an-environmenterror-winerror-5-access-is-de)
</br>
21.`pip install package`时出现如下Warning:
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230217212259.png)
原因：对应包损坏
解决方案：在对应路径下`d:\ml\anaconda3\envs\testenv\lib\site-packages`找到名字前缀为`~ip`的文件夹并删除。
> 参考资料：
> 1. [Found Solution to: WARNING: Ignoring invalid distribution -{packageName} ({pathToIssue}) : Python](https://www.reddit.com/r/Python/comments/x70edr/found_solution_to_warning_ignoring_invalid/)
</br>
22.pip更新：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python -m pip <span class="token function">install</span> --upgrade pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [python - There was an error checking the latest version of pip - Stack Overflow](https://stackoverflow.com/questions/72439001/there-was-an-error-checking-the-latest-version-of-pip)
</br>
23.python中`import`相关的路径问题：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/16981921/relative-imports-in-python-3">Relative imports in Python 3 - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/34753206/init-py-cant-find-local-modules">python - <strong>init</strong>.py can’t find local modules - Stack Overflow</a></li>
<li><a href="https://www.bilibili.com/video/BV1K24y1k7XA/?spm_id_from=333.999.0.0&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">【python】关于import你需要知道的一切！一个视频足够了_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
</br>
24.导出pip list到`requirements.txt`文件在另一个环境中安装：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## 导出</span>
pip freeze <span class="token operator">></span>requirements.txt
<span class="token comment">## 安装</span>
pip <span class="token function">install</span> -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [pip requirements导出当前项目所用的包list列表_苦咖啡's运维之路的技术博客_51CTO博客](https://blog.51cto.com/alsww/1893100)
</br>
15.在Python中只声明变量而不赋值：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">result <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
		result <span class="token operator">=</span> i 
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		result <span class="token operator">+=</span> i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [在Python中是否可以只声明变量而不赋值？ - 问答 - 腾讯云开发者社区-腾讯云](https://cloud.tencent.com/developer/ask/sof/28703)
</br>
16.Python中`dict` vs `collections.OrderedDict`：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># A Python program to demonstrate working of OrderedDict  </span>
<span class="token keyword">from</span> collections <span class="token keyword">import</span> OrderedDict

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"This is a Dict:n"</span><span class="token punctuation">)</span>  
d <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  
d<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>  
d<span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>  
d<span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>  
d<span class="token punctuation">[</span><span class="token string">'d'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>

<span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> d<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  
<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"nThis is an Ordered Dict:n"</span><span class="token punctuation">)</span>  
od <span class="token operator">=</span> OrderedDict<span class="token punctuation">(</span><span class="token punctuation">)</span>  
od<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>  
od<span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>  
od<span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>  
od<span class="token punctuation">[</span><span class="token string">'d'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>

<span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> od<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  
<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>  
Output<span class="token punctuation">:</span>

This <span class="token keyword">is</span> a Dict<span class="token punctuation">:</span>  
<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  
<span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  
<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  
<span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

This <span class="token keyword">is</span> an Ordered Dict<span class="token punctuation">:</span>  
<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  
<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  
<span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  
<span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [OrderedDict in Python](https://prutor.ai/ordereddict-in-python/#:~:text=The%20only%20difference%20between%20dict,inserted%20is%20remembered%20by%20OrderedDict.)
> 2. [python - Difference between dictionary and OrderedDict - Stack Overflow](https://stackoverflow.com/questions/34305003/difference-between-dictionary-and-ordereddict)
</br>
17.遍历argparse的`parse_args()`：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> argparse

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--a'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">55</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--b'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">66</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--c'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">77</span><span class="token punctuation">)</span>

args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
<span class="token comment"># vars() 函数返回对象object的属性和属性值的字典对象。</span>
<span class="token keyword">for</span> arg <span class="token keyword">in</span> <span class="token builtin">vars</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> <span class="token string">':'</span><span class="token punctuation">,</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># getattr() 函数是获取args中arg的属性值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [python遍历argparse的parse_args()_python 遍历args_集电极的博客-CSDN博客](https://blog.csdn.net/qq_38463737/article/details/121103702)
</br>
18.python代码可以正常运行，但是debug时出现`No Module named 'mmseg'`。
原因：在代码文件开头添加了上层路径
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># test.py</span>
<span class="token keyword">import</span> sys
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">".."</span><span class="token punctuation">)</span>
<span class="token keyword">import</span> mmseg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
在代码直接运行时，运行`python test.py`，可以从上层路径直接导入`mmseg`；但是在进行debug时，运行`pythn tools/test.py`，路径相对关系发生变化。无法正常导入`mmseg`。
解决方案：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># test.py</span>
<span class="token keyword">import</span> sys 
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">".."</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">)</span> <span class="token comment"># 添加本地路径</span>
<span class="token keyword">import</span> mmseg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [https://youtrack.jetbrains.com/issue/PY-43911/run-my-python-code-works-but-debugging-has-problems-ModuleNotFoundError-No-module-named-MaryPackage](https://youtrack.jetbrains.com/issue/PY-43911/run-my-python-code-works-but-debugging-has-problems-ModuleNotFoundError-No-module-named-MaryPackage)
</br>
19.在对python文件进行调试时，有将下面的字典类型变量复制、保存到txt文件并转为更易读的json格式的需求：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230304125946.png)
步骤：
1. 右键上述cfg局部变量，并copy value，保存到txt文件`cfg.txt`。
2. 从txt文件中读取，或者直接复制给变量赋值
3. 使用`json`库将其保存至`.json`文件：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> json

x <span class="token operator">=</span> txt_content <span class="token comment"># 复制赋值或从txt读取</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"cfg.json"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> outfile<span class="token punctuation">:</span>
	json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>x<span class="token punctuation">,</span> outfile<span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [python - How to Format dict string outputs nicely - Stack Overflow](https://stackoverflow.com/questions/3733554/how-to-format-dict-string-outputs-nicely)
> 2. [python - How do I write JSON data to a file? - Stack Overflow](https://stackoverflow.com/questions/12309269/how-do-i-write-json-data-to-a-file)
</br>
20.在python中，有时有对tuple或list中的元素值进行逐个比较（不是引用）的需求，此时需要引入`operator`模块，并调用`eq`函数：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span> <span class="token keyword">import</span> operator
<span class="token operator">>></span> operator<span class="token punctuation">.</span>eq<span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">)</span>
<span class="token boolean">False</span>
<span class="token operator">>></span> operator<span class="token punctuation">.</span>eq<span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token string">'hello'</span><span class="token punctuation">)</span>
<span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
`operator`中还存在其它对象比较函数：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">operator<span class="token punctuation">.</span>lt<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>le<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>eq<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>ne<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>ge<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>gt<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>__lt__<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>__le__<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>__eq__<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>__ne__<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>__ge__<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
operator<span class="token punctuation">.</span>__gt__<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Python Tuple(元组) cmp()方法 | 菜鸟教程](https://www.runoob.com/python/att-tuple-cmp.html)
</br>
21.在Python中获取当前运行文件所在路径：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>expanduser<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
PS：直接在python interpreter中运行该命令会报错如下错误
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407165649.png)
</br>
<p>22.Python中的<code>*</code>号。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
ValueError<span class="token punctuation">:</span> too many values to unpack <span class="token punctuation">(</span>expected <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token operator">>></span><span class="token operator">></span> x<span class="token punctuation">,</span> <span class="token operator">*</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span>
<span class="token operator">>></span><span class="token operator">></span> x
<span class="token number">1</span> 
<span class="token operator">>></span><span class="token operator">></span> y 
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token operator">>></span><span class="token operator">></span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span>     <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

<span class="token operator">>></span><span class="token operator">></span>foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token number">1</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token operator">>></span><span class="token operator">></span> names <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"Jack"</span><span class="token punctuation">,</span> <span class="token string">"Johnson"</span><span class="token punctuation">,</span> <span class="token string">"Senior"</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> fist_name<span class="token punctuation">,</span> <span class="token operator">*</span>surnames <span class="token operator">=</span>  names
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>surnames<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">"Johnson"</span><span class="token punctuation">,</span> <span class="token string">"Senior"</span><span class="token punctuation">]</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/57814195/what-does-for-x-y-in-list-mean-in-python">What does for x, *y in list mean in python - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
23.Python中tuple实现和list相似的`append`操作：
<pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">>></span> a
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
b <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
<span class="token operator">>></span> b
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>

c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
<span class="token operator">>></span> c
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
c <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
<span class="token operator">>></span> c
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
>参考资料：
>1. [Site Unreachable](https://www.tutorialspoint.com/How-to-append-elements-in-Python-tuple)
</br>
24.报错`inconsistent use of tabs and spaces in indentation`
问题：缩进问题（tab和空格）
解决方案1：命令行运行`autopep8 -i my_file.py`。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/5685406/inconsistent-use-of-tabs-and-spaces-in-indentation">python - “inconsistent use of tabs and spaces in indentation” - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
25.使用smtplib发送邮件：
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> smtplib
<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText
<span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header

sender <span class="token operator">=</span> <span class="token string">'tom89757@outlook.com'</span>
receivers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2689980244@qq.com'</span><span class="token punctuation">]</span>
<span class="token comment"># smtp = smtplib.SMTP()</span>
<span class="token comment"># smtp.connect('smtp-mail.outlook.com', 587)</span>
<span class="token comment"># smtp.login('tom89757@outlook.com', 'QmB2/!D4J.vr3t2')</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    message <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span><span class="token string">'Python 邮件发送测试...'</span><span class="token punctuation">,</span> <span class="token string">'plain'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>
    message<span class="token punctuation">[</span><span class="token string">'From'</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"菜鸟教程"</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>
    message<span class="token punctuation">[</span><span class="token string">'To'</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"测试"</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>

    subject <span class="token operator">=</span> <span class="token string">'Python SMTP 邮件测试'</span>
    message<span class="token punctuation">[</span><span class="token string">'Subject'</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span>subject<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>
    
    <span class="token keyword">try</span><span class="token punctuation">:</span>  
        smtpObj <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span><span class="token punctuation">)</span>
        smtpObj<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'smtp-mail.outlook.com'</span><span class="token punctuation">,</span> <span class="token number">587</span><span class="token punctuation">)</span>
        smtpObj<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token string">'emal_address'</span><span class="token punctuation">,</span> <span class="token string">'email_password'</span><span class="token punctuation">)</span>
        smtpObj<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>sender<span class="token punctuation">,</span> receivers<span class="token punctuation">,</span> message<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"邮件发送成功"</span><span class="token punctuation">)</span>
    
    <span class="token keyword">except</span> smtplib<span class="token punctuation">.</span>SMTPException<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Error: 无法发送邮件"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Python SMTP发送邮件 | 菜鸟教程](https://www.runoob.com/python/python-email.html)
> 2. [Python SMTP发送邮件-smtplib模块 - 知乎](https://zhuanlan.zhihu.com/p/318387004)
> 3. [解决Python通过STMP发送邮件出现 TimeoutError: [WinError 10060]_Tech_April的博客-CSDN博客](https://blog.csdn.net/Tech_April/article/details/106257696)
> 4. [SMTP/IMAP服务](https://wx.mail.qq.com/list/readtemplate?name=app_intro.html#/agreement/authorizationCode)
</br>
26.获取变量名，例如从变量`foo`中获取其变量名`'foo'`。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/18425225/getting-the-name-of-a-variable-as-a-string">python - Getting the name of a variable as a string - Stack Overflow</a></li>
<li><a href="https://www.tutorialspoint.com/How-to-get-a-variable-name-as-a-string-in-Python">How to get a variable name as a string in Python?</a></li>
</ol>
</blockquote>
</br>
27.将dotfiles中pip的配置文件`pip.int`链接到：
<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">mklink C:\Users\26899\AppData\Roaming\pip\pip.ini D:\Desktop\dotfiles\python\pip.ini

mklink %APPDATA%\pip\pip.ini D:\Desktop\dotfiles\python\pip.ini<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</br>
28.安装包时出现如下报错
<pre class="line-numbers language-pip" data-language="pip"><code class="language-pip">&#96;&#96;&#96;py
WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ProxyError(&#39;Cannot connect to proxy.&#39;, NewConnection
Error(&#39;&lt;pip._vendor.urllib3.connection.HTTPSConnection object at 0x0000026F50B448C8&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made
 because the target machine actively refused it&#39;))&#39;: &#x2F;simple&#x2F;pytest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
原因：打开了代理
解决方案：管理代理，重新安装
</br>
报错`RequestsDependencyWarning: urllib3 (1.26.9) or chardet (5.0.0)/charset_normalizer (2.0.12) doesn't match a supported version!`
解决方案：更新requests，`pip3 install --upgrade requests`
> 参考资料：
> 1. [python - RequestsDependencyWarning: urllib3 (1.25.2) or chardet (3.0.4) doesn't match a supported version! Fix - Stack Overflow](https://stackoverflow.com/questions/56155627/requestsdependencywarning-urllib3-1-25-2-or-chardet-3-0-4-doesnt-match-a-s)
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>tmux学习笔记</title>
    <url>/2023/04/23/tmux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文记录一下学习tmux过程中的经验和总结：</p>
<span id="more"></span>
<h3 id="alias配置"><a class="markdownIt-Anchor" href="#alias配置"></a> alias配置</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> tl=<span class="string">&#x27;tmux list-sessions&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> tkss=<span class="string">&#x27;tmux kill-session -t&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ta=<span class="string">&#x27;tmux attach -t&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> td=<span class="string">&#x27;tmux detach&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ts=<span class="string">&#x27;tmux new-session -s&#x27;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/49284484">mac上使用oh my zsh有哪些必备的插件推荐？ - 知乎</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>tmux使用指南</title>
    <url>/2023/04/19/tmux%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下tmux的学习和使用过程：</p>
<span id="more"></span>
<h3 id="基础使用"><a class="markdownIt-Anchor" href="#基础使用"></a> 基础使用</h3>
<p>主要参考资料4，资料5中包含了较多进阶配置。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://tmuxcheatsheet.com/">Tmux Cheat Sheet &amp; Quick Reference</a></li>
<li><a href="https://www.bilibili.com/video/BV1KW411Z7W3">手把手教你使用终端复用神器 tmux_哔哩哔哩_bilibili</a></li>
<li><a href="https://github.com/tmux/tmux">GitHub - tmux/tmux: tmux source code</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">Tmux 使用教程 - 阮一峰的网络日志</a></li>
<li><a href="http://louiszhai.github.io/2017/09/30/tmux/">Tmux使用手册 | louis blog</a></li>
</ol>
</blockquote>
<h3 id="报错sessions-should-be-nested-with-care-unset-tmux-to-force"><a class="markdownIt-Anchor" href="#报错sessions-should-be-nested-with-care-unset-tmux-to-force"></a> 报错<code>sessions should be nested with care, unset $TMUX to force</code></h3>
<p>tmux布建议在一个已经active的tmux session嵌套另一个session。</p>
<blockquote>
<p><a href="https://koenwoortman.com/tmux-sessions-should-be-nested-with-care-unset-tmux-to-force/">Tmux sessions should be nested with care, unset $TMUX to force</a></p>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么Python中列表不能用作字典的key</title>
    <url>/2022/06/30/%E4%B8%BA%E4%BB%80%E4%B9%88Python%E4%B8%AD%E5%88%97%E8%A1%A8%E4%B8%8D%E8%83%BD%E7%94%A8%E4%BD%9C%E5%AD%97%E5%85%B8%E7%9A%84key/</url>
    <content><![CDATA[<p>本文是对 <a href="https://wiki.python.org/moin/DictionaryKeys">Why Lists Can’t Be Dictionary Keys</a> 一文的翻译。</p>
<span id="more"></span>
<p><strong>Valid Python dictionary keys</strong></p>
<p>对python字典的键(key)的唯一要求是key是hashable。可变类型像列表，字典和集合不能满足要求，将会导致错误<code>TypeError: unhashable type: 'list'</code>。</p>
<p><strong>Why Lists Can’t Be Dictionary Keys</strong></p>
<p>在python中字典也称为mappings，因为字典将key对象映射或关联到value对象。正因为此，python mappings必须满足，对给定的一个key对象，能够决定哪个value对象与之关联。</p>
<p>一种简单的实现方法是存储一个(key, value) pairs的列表，然后每次根据key请求值时对列表进行线性搜索。但是，这种实现方法在有大量(key, value) pairs时非常低效——从复杂性上看，算法复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>为元素个数。</p>
<p>python字典的实现通过要求key对象提供一个&quot;hash&quot; function将查找元素的复杂度降到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。这样一个hash function读取key对象的信息并通过它生成一个整数，称为hash值。hash值被用来确定对应的(key, value) pair应该放入哪个&quot;bucket&quot;。这个查找函数的伪代码看起来像下面这样：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">lookup</span>(<span class="params">d, key</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;dictionary lookup is done in three steps:</span></span><br><span class="line"><span class="string">       1. A hash value of the key is computed using a hash function.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       2. The hash value addresses a location in d.data which is</span></span><br><span class="line"><span class="string">          supposed to be an array of &quot;buckets&quot; or &quot;collision lists&quot;</span></span><br><span class="line"><span class="string">          which contain the (key,value) pairs.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       3. The collision list addressed by the hash value is searched</span></span><br><span class="line"><span class="string">          sequentially until a pair is found with pair[0] == key. The</span></span><br><span class="line"><span class="string">          return value of the lookup is then pair[1].</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    h = <span class="built_in">hash</span>(key)                  <span class="comment"># step 1</span></span><br><span class="line">    cl = d.data[h]                 <span class="comment"># step 2</span></span><br><span class="line">    <span class="keyword">for</span> pair <span class="keyword">in</span> cl:                <span class="comment"># step 3</span></span><br><span class="line">        <span class="keyword">if</span> key == pair[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">return</span> pair[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> KeyError, <span class="string">&quot;Key %s not found.&quot;</span> % key</span><br></pre></td></tr></table></figure>
<p>这样的一个查找算法要想正确工作，hash function必须提供保证：当两个key生成不同的hash值时，这两个key不等价。即：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">all</span> i1, i2, <span class="keyword">if</span> <span class="built_in">hash</span>(i1) != <span class="built_in">hash</span>(i2), then i1 != i2</span><br></pre></td></tr></table></figure>
<p>否则，一个key对象的hash值可能使我们在错误的bucket中查找，因此永远找不到关联的value。</p>
<p>这样的一个查找算法要想高效工作，大多数的bucket应该只有少量的元素（最好是一个）。考虑使用下面的hash function会发生什么：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hash</span>(<span class="params">obj</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>注意该函数满足一个hash function的需求——每当两个key有不同的hash值时，它们代表不同的对象。但是这是一个很糟糕的hash function，因为它意味着所有的(key, value) pairs将被放入一个列表中，所以每次查找都会查找整个列表。因此一个最理想的hash function具有的属性是，如果两个key生成相同的hash value，那么两个key对象是等价的，即：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">all</span> i1, i2, <span class="keyword">if</span> <span class="built_in">hash</span>(i1) == <span class="built_in">hash</span>(i2), then i1 == i2</span><br></pre></td></tr></table></figure>
<p>能够近似具有该属性的hash function会将(key, value) pairs平均的分配在各个bucket中，使查找时间减少。</p>
<p><strong>Types Usable as Dictionary Keys</strong></p>
<p>以上的讨论应该可以解释为什么Python要求：</p>
<p><em>要能被用作字典的key，一个车对象必须支持hash function(如通过__hash__)，相等比较(如通过__eq__或__cmp__)，并且必须满足上述的正确性条件</em></p>
<p><strong>Lists as Dictionary Keys</strong></p>
<p>简单来说，列表不能作为字典key是因为列表不能提供一个有效的__hash__方法，当然，一个很显然的问题是，为什么列表不提供。</p>
<p>考虑能够为列表提供哪些hash function。</p>
<p>如果列表通过id实现hash，根据hash function的定义这当然是有效的——有不同hash值的列表将有不同的id。但是列表是容器，并且大多数在列表上的操作也把它们当作容器处理。所以通过列表id实现hash可能会产生以下不期望的行为：</p>
<ul>
<li>查找具有相同内容的不同列表可能会得到不同的结果，尽管比较具有相同内容的列表时会认为它们等价。</li>
<li>照字面意义在字典查找中使用列表将是pointless——这会导致<code>KeyError</code>。</li>
</ul>
<p>如果列表通过内容实现hash(和元组一样)，也将是一个有效的hash function——具有不同hash值的列表有不同的内容。会再一次出现问题，但问题不在hash function的定义上。考虑当一个列表被用作一个字典的key，当这个列表被更改时会发生什么？如果这个更改改变了列表的hash值（因为它改变了列表内容），那么列表将在字典错误的&quot;bucket&quot;中。这会导致以下不期望的错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>l = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[l] = <span class="number">42</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.append(<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[l]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;interactive input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> ?</span><br><span class="line">KeyError: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[[<span class="number">1</span>, <span class="number">2</span>]]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;interactive input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> ?</span><br><span class="line">KeyError: [<span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure>
<p>因为字典不知道key对象被修改，这样的errors只会在进行key查找时出现，而不是在key对象被更改时发现，这会导致这样的错误非常难以调试。</p>
<p>已经发现这两种hash列表的方法是都会有不期望的副作用，Python采取以下的特性也就很明显：</p>
<p><strong>内置的列表类型不应该作为字典key来使用</strong></p>
<p>注意到因为元组是不可变的，它们不会遭遇和列表相同的问题——它们可以通过内容进行hash而不需要担心内容修改。因此，在Python中，它们提供了一个有效的__hash__方法，因此也能作为字典key。</p>
<p><strong>User Defined Types as Dictionary Keys</strong></p>
<p>那有没有关于用户自定义的key类型的例子呢？</p>
<p>默认，所有用户自定义的类型当具有<code>hash(object)</code>方法（默认为<code>id(hash)</code>）和<code>cmp(object1, object2)</code>（默认为<code>cmp(id(object1), id(object2)</code>）时，可以作为字典key。以上对列表的讨论考虑了相同的要求，发现列表并不满足。为什么用户自定义类型不一样呢？</p>
<ol>
<li>在那些对象必须被放入一个mapping的情况中，object identity通常比object content更为重要。</li>
<li>在那些对象内容真的很重要的情况下，默认设置可以通过重写__hash__和__cmp__或者__eq__来重定义。</li>
</ol>
<p>注意当对象和一个值关联时，简单地将值作为对象的属性之一是更好的实践方式。</p>
<p><strong>Tutorials on Python’s dictionaries</strong></p>
<p>下面是一些解释字典的常见用法和细节的教程：</p>
<ol>
<li><a href="https://docs.python.org/3/tutorial/datastructures.html">The official manual on data structures</a></li>
<li><a href="https://wiki.python.org/moin/DictionaryKeys">Python Dictionary : How To Create And Use them, With Examples</a></li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://wiki.python.org/moin/DictionaryKeys">Why Lists Can’t Be Dictionary Keys</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>写给程序员的范畴论资料索引</title>
    <url>/2022/08/15/%E5%86%99%E7%BB%99%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%8C%83%E7%95%B4%E8%AE%BA%E8%B5%84%E6%96%99%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<p>本文为<a href="https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/">《category-theory-for-programmers》</a>一书对应的资料索引：</p>
<span id="more"></span>
<h3 id="译文part-one"><a class="markdownIt-Anchor" href="#译文part-one"></a> 译文(Part One)</h3>
<p><a href="https://segmentfault.com/a/1190000003882331">&lt;译&gt; 写给程序猿的范畴论 · 序</a></p>
<ol>
<li><a href="https://segmentfault.com/a/1190000003883257">&lt;译&gt; 范畴：复合的本质</a></li>
<li><a href="https://segmentfault.com/a/1190000003888544">&lt;译&gt; 类型与函数</a></li>
<li><a href="https://segmentfault.com/a/1190000003894116">&lt;译&gt; 范畴，可大可小</a></li>
<li><a href="https://segmentfault.com/a/1190000003898795">&lt;译&gt; Kleisli 范畴</a></li>
<li><a href="https://segmentfault.com/a/1190000003913079">&lt;译&gt; 积与余积</a></li>
<li><a href="https://segmentfault.com/a/1190000003943687">&lt;译&gt; 简单的代数数据类型</a></li>
<li><a href="https://segmentfault.com/a/1190000003954370">&lt;译&gt; 函子</a></li>
<li><a href="https://segmentfault.com/a/1190000003993662">&lt;译&gt; 函子性</a></li>
<li><a href="https://segmentfault.com/a/1190000004631638">&lt;译&gt; 函数类型</a></li>
<li><a href="https://segmentfault.com/a/1190000012381561">&lt;译&gt; 自然变换</a></li>
</ol>
<h3 id="github仓库"><a class="markdownIt-Anchor" href="#github仓库"></a> GitHub仓库</h3>
<p><a href="https://github.com/hmemcpy/milewski-ctfp-pdf">milewski-ctfp-pdf</a></p>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>范畴论</tag>
      </tags>
  </entry>
  <entry>
    <title>免费书籍、文档和教程</title>
    <url>/2022/05/09/%E5%85%8D%E8%B4%B9%E4%B9%A6%E7%B1%8D%E3%80%81%E6%96%87%E6%A1%A3%E5%92%8C%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>本文转载自 github 项目 <a href="https://github.com/EbookFoundation/free-programming-books">free-programming-books</a>，放于博客上便于查看。</p>
<span id="more"></span>
<p>## 目录</p>
<ul>
<li><a href="#%E8%AF%AD%E8%A8%80%E6%97%A0%E5%85%B3">语言无关</a>
<ul>
<li><a href="#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">版本控制</a></li>
<li><a href="#%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF">编程艺术</a></li>
<li><a href="#%E7%BC%96%E8%BE%91%E5%99%A8">编辑器</a></li>
<li><a href="#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86">编译原理</a></li>
<li><a href="#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F">操作系统</a></li>
<li><a href="#%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9D%82%E8%B0%88">程序员杂谈</a></li>
<li><a href="#%E5%A4%A7%E6%95%B0%E6%8D%AE">大数据</a></li>
<li><a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F">分布式系统</a></li>
<li><a href="#%E7%AE%A1%E7%90%86%E5%92%8C%E7%9B%91%E6%8E%A7">管理和监控</a></li>
<li><a href="#%E5%87%BD%E6%95%B0%E5%BC%8F%E6%A6%82%E5%BF%B5">函数式概念</a></li>
<li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6">计算机图形学</a></li>
<li><a href="#%E5%85%B6%E5%AE%83">其它</a></li>
<li><a href="#%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95">软件开发方法</a></li>
<li><a href="#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">设计模式</a></li>
<li><a href="#%E6%95%B0%E6%8D%AE%E5%BA%93">数据库</a></li>
<li><a href="#%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3">项目相关</a></li>
<li><a href="#%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2">在线教育</a></li>
<li><a href="#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F">正则表达式</a></li>
<li><a href="#%E6%99%BA%E8%83%BD%E7%B3%BB%E7%BB%9F">智能系统</a></li>
<li><a href="#ide">IDE</a></li>
<li><a href="#web">Web</a></li>
<li><a href="#web%E6%9C%8D%E5%8A%A1%E5%99%A8">WEB服务器</a></li>
</ul>
</li>
<li><a href="#%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3">语言相关</a>
<ul>
<li><a href="#android">Android</a></li>
<li><a href="#assembly">Assembly</a></li>
<li><a href="#awk">AWK</a></li>
<li><a href="#c">C</a></li>
<li><a href="#csharp">C#</a></li>
<li><a href="#cpp">C++</a></li>
<li><a href="#coffeescript">CoffeeScript</a></li>
<li><a href="#dart">Dart</a></li>
<li><a href="#elasticsearch">Elasticsearch</a></li>
<li><a href="#elixir">Elixir</a></li>
<li><a href="#erlang">Erlang</a></li>
<li><a href="#fortran">Fortran</a></li>
<li><a href="#golang">Golang</a></li>
<li><a href="#haskell">Haskell</a></li>
<li><a href="#html--css">HTML / CSS</a></li>
<li><a href="#http">HTTP</a></li>
<li><a href="#ios">iOS</a></li>
<li><a href="#java">Java</a></li>
<li><a href="#javascript">JavaScript</a>
<ul>
<li><a href="#angularjs">AngularJS</a></li>
<li><a href="#backbonejs">Backbone.js</a></li>
<li><a href="#d3js">D3.js</a></li>
<li><a href="#electronjs">Electron.js</a></li>
<li><a href="#extjs">ExtJS</a></li>
<li><a href="#impressjs">impress.js</a></li>
<li><a href="#jquery">jQuery</a></li>
<li><a href="#nodejs">Node.js</a></li>
<li><a href="#reactjs">React.js</a></li>
<li><a href="#vuejs">Vue.js</a></li>
<li><a href="#zeptojs">Zepto.js</a></li>
</ul>
</li>
<li><a href="#latex">LaTeX</a></li>
<li><a href="#lisp">LISP</a></li>
<li><a href="#lua">Lua</a></li>
<li><a href="#markdown">Markdown</a></li>
<li><a href="#mysql">MySQL</a></li>
<li><a href="#nosql">NoSQL</a></li>
<li><a href="#perl">Perl</a></li>
<li><a href="#php">PHP</a>
<ul>
<li><a href="#laravel">Laravel</a></li>
<li><a href="#symfony">Symfony</a></li>
</ul>
</li>
<li><a href="#postgresql">PostgreSQL</a></li>
<li><a href="#python">Python</a>
<ul>
<li><a href="#django">Django</a></li>
</ul>
</li>
<li><a href="#r">R</a></li>
<li><a href="#restructuredtext">reStructuredText</a></li>
<li><a href="#ruby">Ruby</a></li>
<li><a href="#rust">Rust</a></li>
<li><a href="#scala">Scala</a></li>
<li><a href="#scheme">Scheme</a></li>
<li><a href="#scratch">Scratch</a></li>
<li><a href="#shell">Shell</a></li>
<li><a href="#swift">Swift</a></li>
<li><a href="#typescript">TypeScript</a>
<ul>
<li><a href="#angular">Angular</a></li>
<li><a href="#deno">Deno</a></li>
</ul>
</li>
<li><a href="#vba-microsoft-visual-basic-applications">VBA</a></li>
<li><a href="#vim">Vim</a></li>
<li><a href="#visual-prolog">Visual Prolog</a></li>
</ul>
</li>
</ul>
<h2 id="语言无关"><a class="markdownIt-Anchor" href="#语言无关"></a> 语言无关</h2>
<h3 id="版本控制"><a class="markdownIt-Anchor" href="#版本控制"></a> 版本控制</h3>
<ul>
<li><a href="https://web.archive.org/web/20191004044726/http://igit.linuxtoy.org:80/index.html">沉浸式学 Git</a></li>
<li><a href="http://backlogtool.com/git-guide/cn/">猴子都能懂的GIT入门</a></li>
<li><a href="https://learngitbranching.js.org">学习 Git 分支</a></li>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html">Git - 简易指南</a></li>
<li><a href="http://gitref.justjavac.com">Git 参考手册</a></li>
<li><a href="https://github.com/flyhigher139/Git-Cheat-Sheet">Git-Cheat-Sheet</a> - flyhigher139</li>
<li><a href="http://gitbook.liuhui998.com">Git Community Book 中文版</a></li>
<li><a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html">git-flow 备忘清单</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/">Git magic</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/">Git Magic</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a> - 廖雪峰</li>
<li><a href="https://github.com/waylau/github-help">Github帮助文档</a></li>
<li><a href="https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/">GitHub秘籍</a></li>
<li><a href="https://github.com/gotgit/gotgithub">Got GitHub</a></li>
<li><a href="http://www.worldhello.net/gotgithub/index.html">GotGitHub</a></li>
<li><a href="https://zh-hginit.readthedocs.io/en/latest/">HgInit (中文版)</a></li>
<li><a href="https://www.mercurial-scm.org/wiki/ChineseTutorial">Mercurial 使用教程</a></li>
<li><a href="https://git-scm.com/book/zh/v2">Pro Git</a></li>
<li><a href="https://bingohuang.gitbooks.io/progit2/content">Pro Git 第二版 中文版</a> - Bingo Huang</li>
<li><a href="http://svnbook.red-bean.com/nightly/zh/index.html">svn 手册</a></li>
</ul>
<h3 id="编程艺术"><a class="markdownIt-Anchor" href="#编程艺术"></a> 编程艺术</h3>
<ul>
<li><a href="http://www.kancloud.cn/kancloud/intro-to-prog/52592">编程入门指南</a></li>
<li><a href="https://github.com/julycoding/The-Art-Of-Programming-by-July">程序员编程艺术</a></li>
<li><a href="http://www.oschina.net/translate/what-every-programmer-should-know-about-memory-part1">每个程序员都应该了解的内存知识 (第一部分)</a></li>
</ul>
<h3 id="编辑器"><a class="markdownIt-Anchor" href="#编辑器"></a> 编辑器</h3>
<ul>
<li><a href="http://learnvimscriptthehardway.onefloweroneworld.com">笨方法学Vimscript 中译本</a></li>
<li><a href="https://github.com/yangyangwithgnu/use_vim_as_ide">所需即所获：像 IDE 一样使用 vim</a></li>
<li><a href="http://exvim.github.io/docs-zh/intro/">exvim–vim 改良成IDE项目</a></li>
<li><a href="https://github.com/vimcn/vimcdoc">Vim中文文档</a></li>
</ul>
<h3 id="编译原理"><a class="markdownIt-Anchor" href="#编译原理"></a> 编译原理</h3>
<ul>
<li><a href="https://github.com/DeathKing/Learning-SICP">《计算机程序的结构和解释》公开课 翻译项目</a></li>
</ul>
<h3 id="操作系统"><a class="markdownIt-Anchor" href="#操作系统"></a> 操作系统</h3>
<ul>
<li><a href="http://i.linuxtoy.org/docs/guide/index.html">开源世界旅行手册</a></li>
<li><a href="https://github.com/tobegit3hub/understand_linux_process">理解Linux进程</a></li>
<li><a href="https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md">命令行的艺术</a></li>
<li><a href="http://cn.linux.vbird.org/linux_server/">鸟哥的 Linux 私房菜 服务器架设篇</a></li>
<li><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php">鸟哥的 Linux 私房菜 基础学习篇</a></li>
<li><a href="https://tinylab.gitbooks.io/elinux/content/zh/">嵌入式 Linux 知识库 (eLinux.org 中文版)</a></li>
<li><a href="https://github.com/yeasy/docker_practice">Docker — 从入门到实践</a></li>
<li><a href="http://yuedu.baidu.com/ebook/d817967416fc700abb68fca1">Docker入门实战</a></li>
<li><a href="https://github.com/widuu/chinese_docker">Docker中文指南</a></li>
<li><a href="http://www.freebsd.org/doc/zh_CN.UTF-8/books/handbook/">FreeBSD 使用手册</a></li>
<li><a href="http://works.jinbuguo.com/lfs/lfs62/index.html">Linux 构建指南</a></li>
<li><a href="http://sourceforge.net/projects/elpi/">Linux 系统高级编程</a></li>
<li><a href="https://tinylab.gitbooks.io/linux-doc/content/zh-cn/">Linux Documentation (中文版)</a></li>
<li><a href="http://happypeter.github.io/LGCB/book/">Linux Guide for Complete Beginners</a></li>
<li><a href="https://github.com/me115/linuxtools_rst">Linux工具快速教程</a></li>
<li><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/">Mac 开发配置手册</a></li>
<li><a href="http://pages.cs.wisc.edu/~remzi/OSTEP/">Operating Systems: Three Easy Pieces</a></li>
<li><a href="http://billie66.github.io/TLCL/index.html">The Linux Command Line</a></li>
<li><a href="http://wiki.ubuntu.org.cn/UbuntuManual">Ubuntu 参考手册</a></li>
<li><a href="https://www.gitbook.com/book/objectkuan/ucore-docs/details">uCore Lab: Operating System Course in Tsinghua University</a></li>
<li><a href="http://cb.vu/unixtoolbox_zh_CN.xhtml">UNIX TOOLBOX</a></li>
</ul>
<h3 id="程序员杂谈"><a class="markdownIt-Anchor" href="#程序员杂谈"></a> 程序员杂谈</h3>
<ul>
<li><a href="http://www.kancloud.cn/kancloud/a-programmer-prepares">程序员的自我修养</a></li>
</ul>
<h3 id="大数据"><a class="markdownIt-Anchor" href="#大数据"></a> 大数据</h3>
<ul>
<li><a href="http://dataminingguide.books.yourtion.com">面向程序员的数据挖掘指南</a></li>
<li><a href="https://github.com/linyiqun/DataMiningAlgorithm">数据挖掘中经典的算法实现和详细的注释</a></li>
<li><a href="https://aiyanbo.gitbooks.io/spark-programming-guide-zh-cn/content/">Spark 编程指南简体中文版</a></li>
</ul>
<h3 id="分布式系统"><a class="markdownIt-Anchor" href="#分布式系统"></a> 分布式系统</h3>
<ul>
<li><a href="http://dcaoyuan.github.io/papers/pdfs/Scalability.pdf">走向分布式</a> (PDF)</li>
</ul>
<h3 id="管理和监控"><a class="markdownIt-Anchor" href="#管理和监控"></a> 管理和监控</h3>
<ul>
<li><a href="https://www.gitbook.com/book/fuxiaopang/learnelasticsearch/details">ElasticSearch 权威指南</a></li>
<li><a href="http://es.xiaoleilu.com">Elasticsearch 权威指南（中文版）</a></li>
<li><a href="http://kibana.logstash.es">ELKstack 中文指南</a></li>
<li><a href="https://github.com/chenryn/logstash-best-practice-cn">Logstash 最佳实践</a></li>
<li><a href="http://udn.yyuap.com/doc/mastering-elasticsearch/">Mastering Elasticsearch(中文版)</a></li>
<li><a href="https://www.gitbook.com/book/wizardforcel/puppet-27-cookbook/details">Puppet 2.7 Cookbook 中文版</a></li>
</ul>
<h3 id="函数式概念"><a class="markdownIt-Anchor" href="#函数式概念"></a> 函数式概念</h3>
<ul>
<li><a href="https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn">傻瓜函数编程</a></li>
</ul>
<h3 id="计算机图形学"><a class="markdownIt-Anchor" href="#计算机图形学"></a> 计算机图形学</h3>
<ul>
<li><a href="https://learnopengl-cn.github.io">LearnOpenGL CN</a></li>
<li><a href="https://github.com/zilongshanren/opengl-tutorials">OpenGL 教程</a></li>
</ul>
<h3 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h3>
<ul>
<li><a href="http://ifeve.com/perfbook/">深入理解并行编程</a></li>
<li><a href="https://community.emc.com/docs/DOC-16067">SAN 管理入门系列</a></li>
<li><a href="http://sketchcn.com/sketch-chinese-user-manual.html#introduce">Sketch 中文手册</a></li>
</ul>
<h3 id="软件开发方法"><a class="markdownIt-Anchor" href="#软件开发方法"></a> 软件开发方法</h3>
<ul>
<li><a href="https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn">傻瓜函数编程</a> (《Functional Programming For The Rest of Us》中文版)</li>
<li><a href="http://www.infoq.com/cn/minibooks/scrum-xp-from-the-trenches">硝烟中的 Scrum 和 XP</a></li>
</ul>
<h3 id="设计模式"><a class="markdownIt-Anchor" href="#设计模式"></a> 设计模式</h3>
<ul>
<li><a href="https://refactoringguru.cn/design-patterns">深入设计模式</a></li>
<li><a href="http://blog.csdn.net/lovelion/article/details/17517213">史上最全设计模式导学目录</a></li>
<li><a href="https://github.com/me115/design_patterns">图说设计模式</a></li>
</ul>
<h3 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h3>
<!-- Waiting to add in -->
<h3 id="项目相关"><a class="markdownIt-Anchor" href="#项目相关"></a> 项目相关</h3>
<ul>
<li><a href="https://github.com/ecomfe/spec">编码规范</a></li>
<li><a href="http://www.ituring.com.cn/book/1143">开源软件架构</a></li>
<li><a href="https://wizardforcel.gitbooks.io/ibm-j-ap">让开发自动化系列专栏</a></li>
<li><a href="https://wizardforcel.gitbooks.io/ibm-j-cq">追求代码质量</a></li>
<li><a href="http://docs.huihoo.com/gnu/linux/gmake.html">GNU make 指南</a></li>
<li><a href="https://github.com/waylau/Gradle-2-User-Guide">Gradle 2 用户指南</a></li>
<li><a href="http://yuedu.baidu.com/ebook/f23af265998fcc22bcd10da2">Gradle 中文使用文档</a></li>
<li><a href="https://web.archive.org/web/20170616013024/http://local.joelonsoftware.com/wiki/Chinese_(Simplified)">Joel谈软件</a></li>
<li><a href="https://github.com/fool2fish/selenium-doc">selenium 中文文档</a></li>
</ul>
<h3 id="在线教育"><a class="markdownIt-Anchor" href="#在线教育"></a> 在线教育</h3>
<ul>
<li><a href="http://edu.51cto.com">51CTO学院</a></li>
<li><a href="http://yun.itheima.com">黑马程序员</a></li>
<li><a href="http://www.hubwiz.com">汇智网</a></li>
<li><a href="http://www.jikexueyuan.com">极客学院</a></li>
<li><a href="http://www.jisuanke.com">计蒜客</a></li>
<li><a href="http://www.imooc.com/course/list">慕课网</a></li>
<li><a href="https://www.codecademy.com/?locale_code=zh">Codecademy</a></li>
<li><a href="https://www.codeschool.com">CodeSchool</a></li>
<li><a href="https://www.coursera.org/courses?orderby=upcoming&amp;lngs=zh">Coursera</a></li>
<li><a href="https://learnxinyminutes.com">Learn X in Y minutes</a></li>
<li><a href="https://www.shiyanlou.com">shiyanlou</a></li>
<li><a href="https://teamtreehouse.com">TeamTreeHouse</a></li>
<li><a href="https://www.udacity.com">Udacity</a></li>
<li><a href="https://www.xuetangx.com">xuetangX</a></li>
</ul>
<h3 id="正则表达式"><a class="markdownIt-Anchor" href="#正则表达式"></a> 正则表达式</h3>
<ul>
<li><a href="http://www.runoob.com/regexp/regexp-tutorial.html">正则表达式-菜鸟教程</a></li>
<li><a href="https://web.archive.org/web/20161119141236/http://deerchao.net:80/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></li>
</ul>
<h3 id="智能系统"><a class="markdownIt-Anchor" href="#智能系统"></a> 智能系统</h3>
<ul>
<li><a href="https://github.com/phodal/designiot">一步步搭建物联网系统</a></li>
</ul>
<h3 id="ide"><a class="markdownIt-Anchor" href="#ide"></a> IDE</h3>
<ul>
<li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">IntelliJ IDEA 简体中文专题教程</a></li>
</ul>
<h3 id="web"><a class="markdownIt-Anchor" href="#web"></a> Web</h3>
<ul>
<li><a href="https://www.gitbook.com/book/juntao/3-web-designs-in-3-weeks/details">3 Web Designs in 3 Weeks</a></li>
<li><a href="http://www.20thingsilearned.com/zh-CN/home">关于浏览器和网络的 20 项须知</a></li>
<li><a href="http://jinlong.github.io/2013/08/29/devtoolsecrets/">浏览器开发工具的秘密</a></li>
<li><a href="http://coderlmn.github.io/code-standards/">前端代码规范 及 最佳实践</a></li>
<li><a href="https://github.com/fouber/blog/issues/2">前端开发体系建设日记</a></li>
<li><a href="https://github.com/hacke2/hacke2.github.io/issues/3">前端资源分享（二）</a></li>
<li><a href="https://github.com/hacke2/hacke2.github.io/issues/1">前端资源分享（一）</a></li>
<li><a href="https://community.emc.com/thread/194901">一站式学习Wireshark</a></li>
<li><a href="https://github.com/hoosin/mobile-web-favorites">移动前端开发收藏夹</a></li>
<li><a href="https://github.com/AlloyTeam/Mars">移动Web前端知识库</a></li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></li>
<li><a href="https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools">Chrome 开发者工具中文手册</a></li>
<li><a href="http://www.ituring.com.cn/minibook/950">Chrome扩展及应用开发</a></li>
<li><a href="http://open.chrome.360.cn/extension_dev/overview.html">Chrome扩展开发文档</a></li>
<li><a href="https://github.com/phodal/growth-ebook">Growth: 全栈增长工程师指南</a></li>
<li><a href="http://www.gruntjs.net">Grunt中文文档</a></li>
<li><a href="https://github.com/nimojs/gulp-book">Gulp 入门指南</a></li>
<li><a href="http://www.gulpjs.com.cn/docs/">gulp中文文档</a></li>
<li><a href="https://github.com/bolasblack/http-api-guide">HTTP 接口设计指北</a></li>
<li><a href="http://yuedu.baidu.com/ebook/478d1a62376baf1ffc4fad99?pn=1">HTTP/2.0 中文翻译</a></li>
<li><a href="https://www.gitbook.com/book/ye11ow/http2-explained/details">http2讲解</a></li>
<li><a href="https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md">JSON风格指南</a></li>
<li><a href="https://web.archive.org/web/20200415002730/http://man.lupaworld.com/content/network/wireshark/index.html">Wireshark用户手册</a></li>
</ul>
<h3 id="web服务器"><a class="markdownIt-Anchor" href="#web服务器"></a> WEB服务器</h3>
<ul>
<li><a href="http://works.jinbuguo.com/apache/menu22/index.html">Apache 中文手册</a></li>
<li><a href="http://www.ttlsa.com/nginx/nginx-stu-pdf/">Nginx教程从入门到精通</a> - 运维生存时间 (PDF)</li>
<li><a href="http://tengine.taobao.org/book/index.html">Nginx开发从入门到精通</a> - 淘宝团队</li>
</ul>
<h2 id="语言相关"><a class="markdownIt-Anchor" href="#语言相关"></a> 语言相关</h2>
<h3 id="android"><a class="markdownIt-Anchor" href="#android"></a> Android</h3>
<ul>
<li><a href="http://www.apkbus.com/design/index.html">Android Design(中文版)</a></li>
<li><a href="https://github.com/CharonChui/AndroidNote">Android Note(开发过程中积累的知识点)</a></li>
<li><a href="http://leanote.com/blog/post/561658f938f41126b2000298">Android6.0新特性详解</a></li>
<li><a href="https://github.com/bboyfeiyu/android-tech-frontier">Android开发技术前线(android-tech-frontier)</a></li>
<li><a href="http://hukai.me/android-training-course-in-chinese/index.html">Google Android官方培训课程中文版</a></li>
<li>Google Material Design 正體中文版 (<a href="https://wcc723.gitbooks.io/google_design_translate/content/style-icons.html">译本一</a>，<a href="https://github.com/1sters/material_design_zh">译本二</a>)</li>
<li><a href="http://wiki.jikexueyuan.com/project/material-design/">Material Design 中文版</a></li>
<li><a href="https://github.com/FX-Max/Point-of-Android">Point-of-Android</a></li>
</ul>
<h3 id="assembly"><a class="markdownIt-Anchor" href="#assembly"></a> Assembly</h3>
<ul>
<li>逆向工程权威指南 《Reverse Engineering for Beginners》 - Dennis Yurichev, Antiy Labs, Archer
<ul>
<li><a href="https://beginners.re/RE4B-CN-vol1.pdf">逆向工程权威指南 《Reverse Engineering for Beginners》 Vol.1</a> - Dennis Yurichev, Antiy Labs, Archer (PDF)</li>
<li><a href="https://beginners.re/RE4B-CN-vol2.pdf">逆向工程权威指南 《Reverse Engineering for Beginners》 Vol.2</a> - Dennis Yurichev, Antiy Labs, Archer (PDF)</li>
</ul>
</li>
<li><a href="https://github.com/3dgen/cppwasm-book/tree/master/zh">C/C++面向WebAssembly编程</a> - Ending, Chai Shushan (HTML, <a href="https://github.com/3dgen/cppwasm-book/tree/master/examples">📦 examples</a>)</li>
</ul>
<h3 id="awk"><a class="markdownIt-Anchor" href="#awk"></a> AWK</h3>
<ul>
<li><a href="https://github.com/wuzhouhui/awk">awk程序设计语言</a></li>
<li><a href="http://awk.readthedocs.org/en/latest/index.html">awk中文指南</a></li>
</ul>
<h3 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h3>
<ul>
<li><a href="https://github.com/limingth/NCCL">新概念 C 语言教程</a></li>
<li><a href="https://firebasestorage.googleapis.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-ME5zR-03ZEHgp2kv7bW%2F-MF9EIY-s19_w19_Unae%2F-MF9F-HCs1nLOkY1mLVi%2FBeej-cn-20140429.zip?alt=media&amp;token=de27f96b-2aed-4c97-8879-649638c7559f">Beej’s Guide to Network Programming 簡體中文版</a> - Brian “Beej Jorgensen” Hall, 廖亚伦译 (PDF)</li>
<li><a href="http://c-faq-chn.sourceforge.net/ccfaq/ccfaq.html">C 语言常见问题集</a></li>
<li><a href="http://docs.linuxtone.org/ebooks/C&amp;CPP/c/">Linux C 编程一站式学习</a></li>
</ul>
<h3 id="a-idcsharpac"><a class="markdownIt-Anchor" href="#a-idcsharpac"></a> <a id="csharp"></a>C#</h3>
<ul>
<li><a href="http://book.douban.com/subject/24827879/">精通C#(第6版)</a></li>
</ul>
<h3 id="a-idcppac"><a class="markdownIt-Anchor" href="#a-idcppac"></a> <a id="cpp"></a>C++</h3>
<ul>
<li><a href="https://github.com/hellogcc/100-gcc-tips/blob/master/src/index.md">100个gcc小技巧</a></li>
<li><a href="https://github.com/hellogcc/100-gdb-tips/blob/master/src/index.md">100个gdb小技巧</a></li>
<li><a href="http://www.nowamagic.net/librarys/books/contents/c">简单易懂的C魔法</a></li>
<li><a href="http://www.ituring.com.cn/book/1203">像计算机科学家一样思考（C++版)</a> (《How To Think Like a Computer Scientist: C++ Version》中文版)</li>
<li><a href="https://tinylab.gitbooks.io/cbook/content/">C 语言编程透视</a></li>
<li><a href="https://github.com/andycai/cprimer">C/C++ Primer</a> - andycai</li>
<li><a href="https://github.com/forhappy/Cplusplus-Concurrency-In-Practice">C++ 并发编程指南</a></li>
<li><a href="http://www.sunistudio.com/cppfaq/">C++ FAQ LITE(中文版)</a></li>
<li><a href="https://github.com/Mooophy/Cpp-Primer">C++ Primer 5th Answers</a></li>
<li><a href="https://github.com/wuye9036/CppTemplateTutorial">C++ Template 进阶指南</a></li>
<li><a href="https://github.com/leeyiw/cgdb-manual-in-chinese">CGDB中文手册</a></li>
<li><a href="https://web.archive.org/web/20170615174144/http://sewm.pku.edu.cn/src/paradise/reference/CMake%20Practice.pdf">Cmake 实践</a> (PDF)</li>
<li><a href="http://docs.huihoo.com/gnu/linux/gmake.html">GNU make 指南</a></li>
<li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-cpp-styleguide/contents/">Google C++ 风格指南</a></li>
<li><a href="https://github.com/anjuke/zguide-cn">ZMQ 指南</a></li>
</ul>
<h3 id="coffeescript"><a class="markdownIt-Anchor" href="#coffeescript"></a> CoffeeScript</h3>
<ul>
<li><a href="https://github.com/elrrrrrrr/coffeescript-style-guide/blob/master/README-ZH.md">CoffeeScript 编程风格指南</a></li>
<li><a href="https://github.com/geekplux/coffeescript-style-guide">CoffeeScript 编码风格指南</a></li>
<li><a href="http://coffee-script.org">CoffeeScript 中文</a></li>
</ul>
<h3 id="dart"><a class="markdownIt-Anchor" href="#dart"></a> Dart</h3>
<ul>
<li><a href="http://dart.lidian.info/wiki/Language_Tour">Dart 语言导览</a></li>
</ul>
<h3 id="elasticsearch"><a class="markdownIt-Anchor" href="#elasticsearch"></a> Elasticsearch</h3>
<ul>
<li><a href="https://github.com/looly/elasticsearch-definitive-guide-cn">Elasticsearch 权威指南</a> （《Elasticsearch the definitive guide》中文版）</li>
<li><a href="http://udn.yyuap.com/doc/mastering-elasticsearch/">Mastering Elasticsearch(中文版)</a></li>
</ul>
<h3 id="elixir"><a class="markdownIt-Anchor" href="#elixir"></a> Elixir</h3>
<ul>
<li><a href="https://elixirschool.com/cn/">Elixir 编程语言教程</a> (Elixir School)</li>
<li><a href="https://github.com/Ljzn/ElixrGettingStartedChinese">Elixir Getting Started 中文翻译</a></li>
<li><a href="https://github.com/Ljzn/MetaProgrammingInElixirChinese">Elixir元编程与DSL 中文翻译</a></li>
<li><a href="https://mydearxym.gitbooks.io/phoenix-doc-in-chinese/content/">Phoenix 框架中文文档</a></li>
</ul>
<h3 id="erlang"><a class="markdownIt-Anchor" href="#erlang"></a> Erlang</h3>
<ul>
<li><a href="https://github.com/liancheng/cpie-cn">Erlang 并发编程</a> (《Concurrent Programming in Erlang (Part I)》中文版)</li>
</ul>
<h3 id="fortran"><a class="markdownIt-Anchor" href="#fortran"></a> Fortran</h3>
<ul>
<li><a href="http://micro.ustc.edu.cn/Fortran/ZJDing/">Fortran77和90/95编程入门</a></li>
</ul>
<h3 id="golang"><a class="markdownIt-Anchor" href="#golang"></a> Golang</h3>
<ul>
<li><a href="https://tiancaiamao.gitbooks.io/go-internals/content/zh">深入解析 Go</a> - tiancaiamao</li>
<li><a href="http://go.ctolib.com/docs/read/magical-go-c-index.html">神奇的 Go 语言</a></li>
<li><a href="http://mikespook.com/learning-go/">学习Go语言</a></li>
<li><a href="https://github.com/Unknwon/go-fundamental-programming">Go 编程基础</a></li>
<li><a href="https://github.com/golang-china/golangdoc.translations">Go 官方文档翻译</a></li>
<li><a href="https://github.com/songleo/the-little-go-book_ZH_CN">Go 简易教程</a> - Song Song Li (《<a href="https://github.com/karlseguin/the-little-go-book">The Little Go Book</a> - Karl Seguin》中文版)</li>
<li><a href="https://github.com/hyper-carrot/go_command_tutorial">Go 命令教程</a></li>
<li><a href="https://github.com/Unknwon/the-way-to-go_ZH_CN">Go 入门指南</a> (《The Way to Go》中文版)</li>
<li><a href="https://github.com/chai2010/go-ast-book">Go 语法树入门</a></li>
<li><a href="https://github.com/polaris1119/The-Golang-Standard-Library-by-Example">Go 语言标准库</a></li>
<li><a href="https://github.com/chai2010/advanced-go-programming-book">Go 语言高级编程（Advanced Go Programming）</a></li>
<li><a href="https://draveness.me/golang">Go 语言设计与实现</a> - draveness</li>
<li><a href="https://github.com/rujews/go-in-action-notes">Go 语言实战笔记</a></li>
<li><a href="https://tour.go-zh.org/list">Go 指南</a> (《A Tour of Go》中文版)</li>
<li><a href="https://github.com/astaxie/build-web-application-with-golang">Go Web 编程</a></li>
<li><a href="https://github.com/astaxie/go-best-practice">Go实战开发</a></li>
<li><a href="https://github.com/achun/Go-Blog-In-Action">Go语言博客实践</a></li>
<li><a href="http://blog.csdn.net/dc_726/article/details/46565241">Java程序员的Golang入门指南</a></li>
<li><a href="https://github.com/astaxie/NPWG_zh">Network programming with Go 中文翻译版本</a></li>
<li><a href="http://gorevel.cn/docs/manual/index.html">Revel 框架手册</a></li>
<li><a href="https://github.com/kevingo/the-little-go-book">The Little Go Book 繁體中文翻譯版</a> - Karl Seguin, KevinGo, Jie Peng (<a href="https://kevingo.gitbooks.io/the-little-go-book/">HTML</a>)</li>
</ul>
<h3 id="groovy"><a class="markdownIt-Anchor" href="#groovy"></a> Groovy</h3>
<ul>
<li><a href="https://www.w3cschool.cn/groovy">Groovy 教程</a> - W3Cschool</li>
</ul>
<h3 id="haskell"><a class="markdownIt-Anchor" href="#haskell"></a> Haskell</h3>
<ul>
<li><a href="https://learnyouahaskell.mno2.org">Haskell 趣学指南</a></li>
<li><a href="http://cnhaskell.com">Real World Haskell 中文版</a></li>
</ul>
<h3 id="html-css"><a class="markdownIt-Anchor" href="#html-css"></a> HTML / CSS</h3>
<ul>
<li><a href="http://alloyteam.github.io/CodeGuide/">前端代码规范</a> - 腾讯AlloyTeam团队</li>
<li><a href="https://github.com/chadluo/CSS-Guidelines/blob/master/README.md">通用 CSS 笔记、建议与指导</a></li>
<li><a href="http://zh.learnlayout.com">学习CSS布局</a></li>
<li><a href="https://bootstrap.hexschool.com">Bootstrap 4 繁體中文手冊</a> - 六角學院</li>
<li><a href="https://bootstrap5.hexschool.com">Bootstrap 5 繁體中文手冊</a> - 六角學院</li>
<li><a href="https://github.com/waylau/css3-tutorial">CSS3 Tutorial 《CSS3 教程》</a></li>
<li><a href="http://css.doyoe.com">CSS参考手册</a></li>
<li><a href="http://yanxyz.github.io/emmet-docs/">Emmet 文档</a></li>
<li><a href="http://www.w3school.com.cn/html5/index.asp">HTML5 教程</a></li>
<li><a href="http://codeguide.bootcss.com">HTML和CSS编码规范</a></li>
<li><a href="http://sass-guidelin.es/zh/">Sass Guidelines 中文</a></li>
</ul>
<h3 id="ios"><a class="markdownIt-Anchor" href="#ios"></a> iOS</h3>
<ul>
<li><a href="https://github.com/jkyin/Subtitle">网易斯坦福大学公开课：iOS 7应用开发字幕文件</a></li>
<li><a href="http://nilsun.github.io/apple-watch/">Apple Watch开发初探</a></li>
<li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-objc-styleguide/">Google Objective-C Style Guide 中文版</a></li>
<li><a href="http://isux.tencent.com/ios-human-interface-guidelines-ui-design-basics-ios7.html">iOS7人机界面指南</a></li>
<li><a href="https://github.com/qinjx/30min_guides/blob/master/ios.md">iOS开发60分钟入门</a></li>
<li><a href="http://wileam.com/iphone-6-screen-cn/">iPhone 6 屏幕揭秘</a></li>
</ul>
<h3 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h3>
<ul>
<li><a href="https://github.com/alibaba/p3c/blob/master/Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E5%B5%A9%E5%B1%B1%E7%89%88%EF%BC%89.pdf">阿里巴巴 Java 开发手册</a> (PDF)</li>
<li><a href="https://github.com/waylau/RestDemo">用jersey构建REST服务</a></li>
<li><a href="https://github.com/waylau/activiti-5.x-user-guide">Activiti 5.x 用户指南</a></li>
<li><a href="https://github.com/waylau/apache-mina-2.x-user-guide">Apache MINA 2 用户指南</a></li>
<li><a href="https://github.com/waylau/apache-shiro-1.2.x-reference">Apache Shiro 用户指南</a></li>
<li><a href="http://hawstein.com/2014/01/20/google-java-style/">Google Java编程风格指南</a></li>
<li><a href="https://github.com/waylau/h2-database-doc">H2 Database 教程</a></li>
<li><a href="https://java.quanke.name">Java 编程思想</a> - quanke</li>
<li><a href="https://github.com/waylau/java-code-conventions">Java 编码规范</a></li>
<li><a href="https://github.com/waylau/servlet-3.1-specification">Java Servlet 3.1 规范</a></li>
<li><a href="https://github.com/waylau/Jersey-2.x-User-Guide">Jersey 2.x 用户指南</a></li>
<li><a href="https://github.com/waylau/jsse-reference-guide">JSSE 参考指南</a></li>
<li><a href="http://mybatis.github.io/mybatis-3/zh/index.html">MyBatis中文文档</a></li>
<li><a href="https://github.com/waylau/netty-4-user-guide">Netty 4.x 用户指南</a></li>
<li><a href="https://github.com/waylau/essential-netty-in-action">Netty 实战(精髓)</a></li>
<li><a href="http://nutzbook.wendal.net">Nutz-book Nutz烹调向导</a></li>
<li><a href="https://nutzam.com/core/nutz_preface.html">Nutz文档</a></li>
<li><a href="https://github.com/waylau/rest-in-action">REST 实战</a></li>
<li><a href="https://github.com/qibaoguang/Spring-Boot-Reference-Guide">Spring Boot参考指南</a> (🚧 <em>翻译中</em>)</li>
<li><a href="https://github.com/waylau/spring-framework-4-reference">Spring Framework 4.x参考文档</a></li>
</ul>
<h3 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> JavaScript</h3>
<ul>
<li><a href="http://justjavac.com/named-function-expressions-demystified.html">命名函数表达式探秘</a> - kangax、为之漫笔(翻译) (原始地址无法打开，所以此处地址为justjavac博客上的备份)</li>
<li><a href="https://github.com/getify/You-Dont-Know-JS/tree/1ed-zh-CN">你不知道的Javascript</a></li>
<li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html">深入理解JavaScript系列</a></li>
<li><a href="https://zh.javascript.info">现代 JavaScript 教程</a> - Ilya Kantor</li>
<li><a href="http://www.oschina.net/translate/learning-javascript-design-patterns">学用 JavaScript 设计模式</a> - 开源中国</li>
<li><a href="https://github.com/adamlu/javascript-style-guide">Airbnb JavaScript 规范</a></li>
<li><a href="http://es6.ruanyifeng.com">ECMAScript 6 入门</a> - 阮一峰</li>
<li><a href="http://bq69.com/blog/articles/script/868/google-javascript-style-guide.html">Google JavaScript 代码风格指南</a></li>
<li><a href="http://javascript.ruanyifeng.com">JavaScript 标准参考教程（alpha）</a></li>
<li><a href="https://github.com/justjavac/12-javascript-quirks">javascript 的 12 个怪癖</a></li>
<li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/">JavaScript 秘密花园</a></li>
<li><a href="https://github.com/jayli/javascript-patterns">《JavaScript 模式》</a> (《JavaScript patterns》译本)</li>
<li><a href="https://web.archive.org/web/20170112164945/http://typeof.net/s/jsmech/">Javascript 原理</a></li>
<li><a href="http://liubin.github.io/promises-book/">JavaScript Promise迷你书</a></li>
<li><a href="http://pij.robinqu.me">Javascript编程指南</a> (<a href="https://github.com/RobinQu/Programing-In-Javascript">源码</a>)</li>
<li><a href="http://icodeit.org/jsccp/">JavaScript核心概念及实践</a> (PDF)</li>
</ul>
<h4 id="angularjs"><a class="markdownIt-Anchor" href="#angularjs"></a> AngularJS</h4>
<blockquote>
<p>ℹ️ See also … <a href="#angular">Angular</a></p>
</blockquote>
<ul>
<li><a href="https://github.com/xufei/Make-Your-Own-AngularJS/blob/master/01.md">构建自己的AngularJS</a> - Xu Fei (HTML)</li>
<li><a href="http://www.waylau.com/build-angularjs-app-with-yeoman-in-windows/">在Windows环境下用Yeoman构建AngularJS项目</a> - Way Lau (HTML)</li>
<li><a href="https://github.com/zensh/AngularjsTutorial_cn">AngularJS入门教程</a> - Yan Qing, Hou Zhenyu, 速冻沙漠 (HTML) (🗃 <em>archived</em>)</li>
<li><a href="https://github.com/mgechev/angularjs-style-guide/blob/master/README-zh-cn.md">AngularJS最佳实践和风格指南</a> - Minko Gechev, Xuefeng Zhu, Shintaro Kaneko et al. (HTML)</li>
</ul>
<h4 id="backbonejs"><a class="markdownIt-Anchor" href="#backbonejs"></a> Backbone.js</h4>
<ul>
<li><a href="http://www.the5fire.com/backbone-js-tutorials-pdf-download.html">Backbone.js入门教程</a> (PDF)</li>
<li><a href="https://github.com/the5fire/backbonejs-learning-note">Backbone.js入门教程第二版</a></li>
<li><a href="http://www.css88.com/doc/backbone/">Backbone.js中文文档</a></li>
</ul>
<h4 id="d3js"><a class="markdownIt-Anchor" href="#d3js"></a> D3.js</h4>
<ul>
<li><a href="http://www.cnblogs.com/winleisure/tag/D3.js/">楚狂人的D3教程</a></li>
<li><a href="https://github.com/mbostock/d3/wiki/API--%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C">官方API文档</a></li>
<li><a href="http://blog.csdn.net/zhang__tianxu/article/category/1623437">张天旭的D3教程</a></li>
<li><a href="http://d3.decembercafe.org">Learning D3.JS</a> - 十二月咖啡馆</li>
</ul>
<h4 id="electronjs"><a class="markdownIt-Anchor" href="#electronjs"></a> Electron.js</h4>
<ul>
<li><a href="https://wizardforcel.gitbooks.io/electron-doc/content">Electron 中文文档</a> - WizardForcel</li>
<li><a href="https://www.w3cschool.cn/electronmanual">Electron 中文文档</a> - W3Cschool</li>
</ul>
<h4 id="extjs"><a class="markdownIt-Anchor" href="#extjs"></a> ExtJS</h4>
<ul>
<li><a href="http://extjs-doc-cn.github.io/ext4api/">Ext4.1.0 中文文档</a></li>
</ul>
<h4 id="impressjs"><a class="markdownIt-Anchor" href="#impressjs"></a> impress.js</h4>
<ul>
<li><a href="https://github.com/kokdemo/impress.js-tutorial-in-Chinese">impress.js的中文教程</a></li>
</ul>
<h4 id="jquery"><a class="markdownIt-Anchor" href="#jquery"></a> jQuery</h4>
<ul>
<li><a href="http://www.nowamagic.net/librarys/books/contents/jquery">简单易懂的JQuery魔法</a></li>
<li><a href="http://i5ting.github.io/How-to-write-jQuery-plugin/build/jquery.plugin.html">How to write jQuery plugin</a></li>
</ul>
<h4 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> Node.js</h4>
<ul>
<li><a href="http://nqdeng.github.io/7-days-nodejs/">七天学会NodeJS</a> - 阿里团队</li>
<li><a href="https://github.com/nswbmw/N-blog">使用 Express + MongoDB 搭建多人博客</a></li>
<li><a href="http://expressjs.jser.us">express.js 中文文档</a></li>
<li><a href="http://javascript.ruanyifeng.com/nodejs/express.html">Express框架</a></li>
<li><a href="http://nodejs.ctolib.com/docs/sfile/jstraining/engineering.html">JavaScript全栈工程师培训材料</a></li>
<li><a href="https://github.com/guo-yu/koa-guide">koa 中文文档</a></li>
<li><a href="https://www.npmjs.com/package/learnyounode-zh-cn">Learn You The Node.js For Much Win! (中文版)</a></li>
<li><a href="http://i5ting.github.io/node-debug-tutorial/">Node debug 三法三例</a></li>
<li><a href="https://github.com/alsotang/node-lessons">Node.js 包教不包会</a></li>
<li><a href="https://github.com/jollen/nodejs-fullstack-lessons">Node.js Fullstack《從零到一的進撃》</a></li>
<li><a href="http://www.nodebeginner.org/index-zh-cn.html">Node入门</a></li>
<li><a href="https://github.com/nodejs-tw/nodejs-wiki-book">Nodejs Wiki Book</a> (繁体中文)</li>
<li><a href="https://www.gitbook.com/book/0532/nodejs/details">nodejs中文文档</a></li>
<li><a href="https://www.gitbook.com/book/0532/nodejs/details">The NodeJS 中文文档</a> - 社区翻译</li>
</ul>
<h4 id="reactjs"><a class="markdownIt-Anchor" href="#reactjs"></a> React.js</h4>
<ul>
<li><a href="https://github.com/theJian/build-a-hn-front-page">Learn React &amp; Webpack by building the Hacker News front page</a></li>
<li><a href="https://github.com/hateonion/react-bits-CN">React-Bits 中文文档</a></li>
<li><a href="http://wiki.jikexueyuan.com/project/react-native/">React Native 中文文档(含最新Android内容)</a></li>
<li><a href="https://github.com/fakefish/react-webpack-cookbook">React webpack-cookbook</a></li>
<li><a href="http://fraserxu.me/intro-to-react/">React.js 入门教程</a></li>
<li><a href="https://discountry.github.io/react/">React.js 中文文档</a></li>
</ul>
<h4 id="vuejs"><a class="markdownIt-Anchor" href="#vuejs"></a> Vue.js</h4>
<ul>
<li><a href="https://cn.vuejs.org/v2/guide/">Vue.js中文文档</a></li>
<li><a href="https://vue3.chengpeiquan.com">Vue3.0学习教程与实战案例</a> - chengpeiquan</li>
</ul>
<h4 id="zeptojs"><a class="markdownIt-Anchor" href="#zeptojs"></a> Zepto.js</h4>
<ul>
<li><a href="http://css88.com/doc/zeptojs_api">Zepto.js 中文文档</a></li>
</ul>
<h3 id="latex"><a class="markdownIt-Anchor" href="#latex"></a> LaTeX</h3>
<ul>
<li><a href="https://github.com/49951331/graduate-project-102pj/blob/master/docs/latex123.pdf">大家來學 LaTeX</a> (PDF)</li>
<li><a href="http://ctan.org/pkg/lshort-zh-cn">一份不太简短的 LaTeX2ε 介绍</a></li>
<li><a href="http://www.dralpha.com/zh/tech/tech.htm">LaTeX 笔记</a></li>
</ul>
<h3 id="lisp"><a class="markdownIt-Anchor" href="#lisp"></a> LISP</h3>
<ul>
<li><a href="http://acl.readthedocs.org/en/latest/">ANSI Common Lisp 中文翻译版</a></li>
<li><a href="http://www.ituring.com.cn/minibook/862">Common Lisp 高级编程技术</a> (《On Lisp》中文版)</li>
</ul>
<h3 id="lua"><a class="markdownIt-Anchor" href="#lua"></a> Lua</h3>
<ul>
<li><a href="http://www.w3cschool.cc/manual/lua53doc/contents.html">Lua 5.3 参考手册</a></li>
</ul>
<h3 id="markdown"><a class="markdownIt-Anchor" href="#markdown"></a> Markdown</h3>
<ul>
<li><a href="http://www.jianshu.com/p/q81RER">献给写作者的 Markdown 新手指南</a></li>
<li><a href="https://markdown.tw">Markdown 語法說明</a></li>
</ul>
<h3 id="mysql"><a class="markdownIt-Anchor" href="#mysql"></a> MySQL</h3>
<ul>
<li><a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html">21分钟MySQL入门教程</a></li>
<li><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">MySQL索引背后的数据结构及算法原理</a></li>
</ul>
<h3 id="nosql"><a class="markdownIt-Anchor" href="#nosql"></a> NoSQL</h3>
<ul>
<li><a href="https://github.com/huangz1990/annotated_redis_source">带有详细注释的 Redis 2.6 代码</a></li>
<li><a href="https://github.com/huangz1990/redis-3.0-annotated">带有详细注释的 Redis 3.0 代码</a></li>
<li><a href="http://disque.huangz.me">Disque 使用教程</a></li>
<li><a href="http://redisdoc.com">Redis 命令参考</a></li>
<li><a href="http://redisbook.com">Redis 设计与实现</a></li>
<li><a href="https://github.com/justinyhuang/the-little-mongodb-book-cn/blob/master/mongodb.md">The Little MongoDB Book</a></li>
<li><a href="https://github.com/JasonLai256/the-little-redis-book/blob/master/cn/redis.md">The Little Redis Book</a></li>
</ul>
<h3 id="perl"><a class="markdownIt-Anchor" href="#perl"></a> Perl</h3>
<ul>
<li><a href="https://github.com/fayland/chinese-perl-book">Master Perl Today</a></li>
<li><a href="https://web.archive.org/web/20150326073235/http://net.pku.edu.cn/~yhf/tutorial/perl/perl.html">Perl 5 教程</a></li>
<li><a href="http://www.yiibai.com/perl">Perl 教程</a></li>
</ul>
<h3 id="php"><a class="markdownIt-Anchor" href="#php"></a> PHP</h3>
<ul>
<li><a href="http://www.php-internals.com/book/">深入理解 PHP 内核</a></li>
<li><a href="https://codeigniter.org.tw/userguide3">CodeIgniter 使用手冊</a></li>
<li><a href="http://docs.phpcomposer.com">Composer中文文档</a></li>
<li><a href="http://www.myleftstudio.com">Phalcon7中文文档</a></li>
<li><a href="http://wulijun.github.io/php-the-right-way/">PHP 之道</a></li>
<li><a href="https://psr.phphub.org">PHP标准规范中文版</a></li>
<li><a href="http://php.net/manual/zh/">PHP中文手册</a></li>
<li><a href="http://www.yiichina.com/doc/guide/2.0">Yii2中文文档</a></li>
</ul>
<h4 id="laravel"><a class="markdownIt-Anchor" href="#laravel"></a> Laravel</h4>
<ul>
<li><a href="http://d.laravel-china.org/docs/5.4">Laravel 5.4 中文文档</a></li>
<li><a href="https://learnku.com/docs/laravel/6.x">Laravel 6 中文文档</a></li>
<li><a href="https://learnku.com/docs/laravel/7.x">Laravel 7 中文文档</a></li>
<li><a href="https://learnku.com/docs/laravel/8.x">Laravel 8 中文文档</a></li>
</ul>
<h4 id="symfony"><a class="markdownIt-Anchor" href="#symfony"></a> Symfony</h4>
<ul>
<li><a href="https://wusuopu.gitbooks.io/symfony2_tutorial/content">Symfony 2 实例教程</a></li>
<li><a href="https://symfony.com/doc/current/the-fast-track/zh_CN/index.html">Symfony 5 快速开发</a></li>
</ul>
<h3 id="postgresql"><a class="markdownIt-Anchor" href="#postgresql"></a> PostgreSQL</h3>
<ul>
<li><a href="http://works.jinbuguo.com/postgresql/menu823/index.html">PostgreSQL 8.2.3 中文文档</a></li>
<li><a href="http://www.postgres.cn/docs/9.3/index.html">PostgreSQL 9.3.1 中文文档</a></li>
<li><a href="http://www.postgres.cn/docs/9.4/index.html">PostgreSQL 9.4.4 中文文档</a></li>
<li><a href="http://www.postgres.cn/docs/9.5/index.html">PostgreSQL 9.5.3 中文文档</a></li>
<li><a href="http://www.postgres.cn/docs/9.6/index.html">PostgreSQL 9.6.0 中文文档</a></li>
</ul>
<h3 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h3>
<ul>
<li><a href="https://bop.molun.net">简明 Python 教程</a> - Swaroop C H、沈洁元(翻译)、漠伦(翻译)</li>
<li><a href="https://www.cnblogs.com/derek1184405959/p/8579428.html">人生苦短，我用python</a> - (内含丰富的笔记以及各类教程)</li>
<li><a href="https://github.com/jiechic/diveintopython3">深入 Python 3</a></li>
<li><a href="https://www.ctolib.com/docs/sfile/think-python-2e/0.html">像计算机科学家一样思考Python</a> - Allen B. Downey、大胖哥(翻译)</li>
<li><a href="http://www.osgeo.cn/matplotlib/">Matplotlib 3.0.3 中文文档</a> - (Online)</li>
<li><a href="http://www.osgeo.cn/numpy/">Numpy 1.16 中文文档</a> - (Online)</li>
<li><a href="http://docspy3zh.readthedocs.org/en/latest/">Python 3 文档(简体中文) 3.2.2 documentation</a></li>
<li><a href="http://www.osgeo.cn/cpython/">Python 3.8.0a3中文文档</a> - (目前在线最全的中文文档了，Online)</li>
<li><a href="http://www.pythondoc.com">Python 中文学习大本营</a></li>
<li><a href="https://pythonguidecn.readthedocs.io/zh/latest/">Python 最佳实践指南</a></li>
<li><a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/">Python Cookbook第三版</a> - David Beazley、Brian K.Jones、熊能(翻译)</li>
<li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000">Python教程 - 廖雪峰的官方网站</a></li>
<li><a href="https://interpy.eastlakeside.com">Python进阶</a> - eastlakeside</li>
<li><a href="http://funhacks.net/explore-python">Python之旅</a> - Ethan</li>
<li><a href="http://www.osgeo.cn/tornado/">Tornado 6.1 中文文档</a> - (网络上其他的都是较旧版本的，Online)</li>
</ul>
<h4 id="django"><a class="markdownIt-Anchor" href="#django"></a> Django</h4>
<ul>
<li><a href="https://www.yiyibooks.cn/xx/Django_1.11.6/index.html">Django 1.11.6 中文文档</a></li>
<li><a href="http://www.osgeo.cn/django/">Django 2.2.1 中文文档</a> - (这个很新，也很全，Online)</li>
<li><a href="https://www.dusaiphoto.com/article/detail/2">Django 搭建个人博客教程 (2.1)</a> - (杜赛) (HTML)</li>
<li><a href="http://djangobook.py3k.cn/2.0/">Django book 2.0</a></li>
<li><a href="https://tutorial.djangogirls.org/zh/">Django Girls 教程 (1.11)</a> (HTML)</li>
</ul>
<h3 id="r"><a class="markdownIt-Anchor" href="#r"></a> R</h3>
<ul>
<li><a href="http://cran.r-project.org/doc/contrib/Liu-FAQ.pdf">153分钟学会 R</a> (PDF)</li>
<li><a href="http://cran.r-project.org/doc/contrib/Xu-Statistics_and_R.pdf">统计学与 R 读书笔记</a> (PDF)</li>
<li><a href="http://yanping.me/shiny-tutorial/">用 R 构建 Shiny 应用程序</a> (《Building ‘Shiny’ Applications with R》中文版)</li>
<li><a href="http://cran.r-project.org/doc/contrib/Ding-R-intro_cn.pdf">R 导论</a> (《An Introduction to R》中文版) (PDF)</li>
</ul>
<h3 id="restructuredtext"><a class="markdownIt-Anchor" href="#restructuredtext"></a> reStructuredText</h3>
<ul>
<li><a href="http://www.pythondoc.com/sphinx/rest.html">reStructuredText 入门</a></li>
</ul>
<h3 id="ruby"><a class="markdownIt-Anchor" href="#ruby"></a> Ruby</h3>
<ul>
<li><a href="http://lrthw.github.io">笨方法学 Ruby</a></li>
<li><a href="https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhCN.md">Rails 风格指南</a></li>
<li><a href="https://github.com/JuanitoFatas/ruby-style-guide/blob/master/README-zhCN.md">Ruby 风格指南</a></li>
<li><a href="https://ihower.tw/rails4/">Ruby on Rails 实战圣经</a></li>
<li><a href="http://guides.ruby-china.org">Ruby on Rails 指南</a></li>
<li><a href="http://www.sinatrarb.com/intro-zh.html">Sinatra</a></li>
</ul>
<h3 id="rust"><a class="markdownIt-Anchor" href="#rust"></a> Rust</h3>
<ul>
<li><a href="https://github.com/rustcc/rust-by-example/">通过例子学习 Rust</a></li>
<li><a href="https://github.com/KaiserY/rust-book-chinese">Rust 官方教程</a></li>
<li><a href="https://github.com/photino/rust-notes">Rust 语言学习笔记</a></li>
<li><a href="https://github.com/rustcc/RustPrimer">RustPrimer</a></li>
<li><a href="https://tourofrust.com/00_zh-cn.html">Tour of Rust</a></li>
</ul>
<h3 id="scala"><a class="markdownIt-Anchor" href="#scala"></a> Scala</h3>
<ul>
<li><a href="http://twitter.github.io/effectivescala/index-cn.html">Effective Scala</a></li>
<li><a href="https://www.gitbook.com/book/windor/beginners-guide-to-scala/details">Scala 初学者指南</a> (《The Neophyte’s Guide to Scala》中文版)</li>
<li><a href="http://twitter.github.io/scala_school/zh_cn/index.html">Scala 课堂</a> (Twitter的Scala中文教程)</li>
</ul>
<h3 id="scheme"><a class="markdownIt-Anchor" href="#scheme"></a> Scheme</h3>
<ul>
<li><a href="http://deathking.github.io/yast-cn/">Scheme 入门教程</a> (《Yet Another Scheme Tutorial》中文版)</li>
</ul>
<h3 id="scratch"><a class="markdownIt-Anchor" href="#scratch"></a> Scratch</h3>
<ul>
<li><a href="http://cccgchinese.strikingly.com">创意计算课程指南</a></li>
</ul>
<h3 id="shell"><a class="markdownIt-Anchor" href="#shell"></a> Shell</h3>
<ul>
<li><a href="https://tinylab.gitbooks.io/shellbook/content">Shell 编程范例</a> - 泰晓科技</li>
<li><a href="http://wiki.ubuntu.org.cn/Shell%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80">Shell 编程基础</a></li>
<li><a href="https://github.com/qinjx/30min_guides/blob/master/shell.md">Shell 脚本编程30分钟入门</a></li>
<li><a href="http://me.52fhy.com/shell-book/">shell-book</a></li>
<li><a href="http://billie66.github.io/TLCL/book/">The Linux Command Line 中文版</a></li>
</ul>
<h3 id="swift"><a class="markdownIt-Anchor" href="#swift"></a> Swift</h3>
<ul>
<li><a href="https://www.gitbook.com/book/numbbbbb/-the-swift-programming-language-/details">《The Swift Programming Language》中文版</a></li>
</ul>
<h3 id="typescript"><a class="markdownIt-Anchor" href="#typescript"></a> TypeScript</h3>
<ul>
<li><a href="https://www.runoob.com/typescript/ts-tutorial.html">TypeScript 教程</a> - runoob (HTML)</li>
<li><a href="https://www.runoob.com/w3cnote/getting-started-with-typescript.html">TypeScript 入门教程</a> - runoob (HTML)</li>
<li><a href="https://www.tslang.cn">TypeScript 中文网</a> (HTML)</li>
<li><a href="https://github.com/jkchao/typescript-book-chinese">TypeScript Deep Dive 中文版</a> - 三毛 (HTML)</li>
<li><a href="https://www.runoob.com/manual/gitbook/TypeScript/_book/">TypeScript Handbook（中文版）</a> - Patrick Zhong (HTML)</li>
</ul>
<h4 id="angular"><a class="markdownIt-Anchor" href="#angular"></a> Angular</h4>
<blockquote>
<p>ℹ️ See also … <a href="#angularjs">AngularJS</a></p>
</blockquote>
<ul>
<li><a href="https://angular.cn/docs">Angular 文档简介</a> - Wang Zhicheng, Ye Zhimin, Yang Lin et al. (HTML)</li>
<li><a href="https://material.angular.cn">Angular Material 组件库</a> - Wang Zhicheng, Ye Zhimin, Yang Lin et al. (HTML)</li>
<li><a href="https://angular.cn/tutorial">Angular Tutorial (教程：英雄之旅)</a> - Wang Zhicheng, Ye Zhimin, Yang Lin et al. (HTML)</li>
</ul>
<h4 id="deno"><a class="markdownIt-Anchor" href="#deno"></a> Deno</h4>
<ul>
<li><a href="https://deno-tutorial.js.org">Deno 钻研之术</a></li>
<li><a href="https://chenshenhai.com/deno_note">Deno进阶开发笔记</a> - 大深海</li>
</ul>
<h3 id="vba-microsoft-visual-basic-applications"><a class="markdownIt-Anchor" href="#vba-microsoft-visual-basic-applications"></a> VBA (Microsoft Visual Basic Applications)</h3>
<ul>
<li><a href="https://github.com/Youchien/concise-excel-vba">简明Excel VBA</a></li>
</ul>
<h3 id="vim"><a class="markdownIt-Anchor" href="#vim"></a> Vim</h3>
<ul>
<li><a href="http://www.study-area.org/tips/vim/index.html">大家來學 VIM</a></li>
</ul>
<h3 id="visual-prolog"><a class="markdownIt-Anchor" href="#visual-prolog"></a> Visual Prolog</h3>
<ul>
<li><a href="http://wiki.visual-prolog.com/index.php?title=Visual_Prolog_for_Tyros_in_Chinese">Visual Prolog 7边练边学</a></li>
<li><a href="http://wiki.visual-prolog.com/index.php?title=A_Beginners_Guide_to_Visual_Prolog_in_Chinese">Visual Prolog 7初学指南</a></li>
</ul>
]]></content>
      <categories>
        <category>资料</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title>前端文章汇总</title>
    <url>/2023/02/19/%E5%89%8D%E7%AB%AF%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>本文收集一些较新的关于前端的文章或资料：</p>
<span id="more"></span>
<ol>
<li><a href="https://www.twilio.com/blog/comparing-nextjs-nestjs-nuxt-gatsby">Next, Nest, Nuxt… Nust?</a>：比较Express, Next.js, Nest, Gatsby, Nuxt等前端框架</li>
<li><a href="https://blog.5bang.top/2023/04/21/2023_state_of_web_component">2023 Web Components 现状 | Silas’s Blog</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing/Understanding_client-side_tools">理解客户端 web 开发工具 - 学习 Web 开发 | MDN</a>：MDN出品的客户端web开发工具介绍。</li>
<li><a href="https://www.sitepoint.com/how-to-migrate-a-react-app-to-typescript/">How to Migrate a React App to TypeScript — SitePoint</a>：如何将一个React App迁移到TypeScript。</li>
<li><a href="https://support.google.com/cloud/answer/6158849#authorized-domains&amp;zippy=%2Cauthorized-domains%2Cstep-configure-your-app-to-use-the-new-secret%2Cuser-consent%2Cweb-applications">Setting up OAuth 2.0 - Google Cloud Platform Console Help</a>：Google OAuth 2.0配置</li>
<li><a href="https://www.joshwcomeau.com/css/color-formats/">Color Formats in CSS - hex, rgb, hsl, lab</a>：CSS的颜色格式，内置各种格式颜色的选择工具</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>别人的收藏-01</title>
    <url>/2022/05/09/%E5%88%AB%E4%BA%BA%E7%9A%84%E6%94%B6%E8%97%8F-01/</url>
    <content><![CDATA[<p>本文转载自别人收藏的好的文章和资料（QAQ，找不到原始出处），放在博客上便于查看。</p>
<span id="more"></span>
<ul>
<li><a href="https://jsonnet.org/">Jsonnet - The Data Templating Language</a> 扩展 JSON，用于生成配置文件 #tools</li>
<li><a href="https://www.justindfuller.com/2022/02/embracing-impostor-syndrome/">Embracing Impostor Syndrome</a> #read#tips</li>
<li><a href="https://abarrak.gitbook.io/linux-sysops-handbook/#table-of-content">Linux SysOps Handbook - Linux SysOps Handbook</a> 常见管理类命令速查 #books</li>
<li><a href="https://monorepo.tools/">Monorepo Explained</a> #books</li>
<li><a href="https://devopedia.org/linux-signals">Linux Signals</a> Signal Handler, Signal Mask, 128+sigint #read#kernel</li>
<li><a href="https://vielhuber.de/en/blog/google-translation-api-hacking/">Google Translation API Hacking &gt; Vielhuber David</a> 用 Chrome 翻译网页的 API Key #read</li>
<li><a href="https://minitokyo3d.com">Mini Tokyo 3D</a> 东京地下铁实时地图 #web#visual</li>
<li><a href="https://www.waynerv.com/posts/how-linux-process-input-frames/">浅析 Linux 如何接收网络帧</a> 通知手段、软中断、NAPI #read#kernel#network</li>
<li><a href="https://jvns.ca/blog/2022/04/12/a-list-of-new-ish--command-line-tools/">A list of new(ish) command line tools</a> #read#tips</li>
<li><a href="https://www.bmpi.dev/dev/deep-in-program-language/how-to-implement-concurrency/os-scheduling/">编程语言是如何实现并发的之操作系统篇</a> 调度、线程模型、IO模型 #read#backend#core#language</li>
<li><a href="https://www.aakashg.com/2022/01/18/netflix-experimentation/">Netflix: Lessons in Experimentation - Product Growth Deep Dive</a> #read</li>
<li><a href="https://disneyanimation.com/process/">Filmmaking Process - Walt Disney Animation Studios</a> #read#misc</li>
<li><a href="https://simplecss.org/demo">Simple.css</a> 不用 class 而是直接对 html 元素加样式的简单 CSS 框架（模板？） #css#frontend</li>
<li><a href="https://shkspr.mobi/blog/2021/12/quick-and-dirty-way-to-rip-an-ebook-from-android/">Quick and dirty way to rip an eBook from Android</a> ADB 点击 &amp; 截图，裁剪，转换到 PDF，最后加 OCR 层 #read#tips</li>
<li><a href="https://1linelayouts.glitch.me/">1-Line Layouts</a> 一行 CSS 解决常见的布局问题 #frontend#css</li>
<li><a href="https://juejin.cn/post/7080938405449695268">Go 1.18 泛型全面讲解：一篇讲清泛型的全部 - 掘金</a> #read#golang#language</li>
<li><a href="https://hashids.org/">Hashids</a> 把内部的整数 ID 编码为字符串（类 YouTube 视频 ID / B 站的 BV 号） #tools</li>
<li><a href="https://zhenghao.io/posts/type-programming">An Introduction To Type Programming In TypeScript</a> 既然类型系统本身是图灵完备的，那么也就可以用类型系统来编程了 #read#language</li>
<li><a href="https://www.surgehq.ai/blog/building-a-no-code-toxicity-classifier-by-talking-to-copilot">Building a No-Code Machine Learning Model by Chatting with GitHub Copilot</a> #read#ml</li>
<li><a href="https://mp.weixin.qq.com/s/ZA-_BARVAWe0Q4eM0lYgwg">透过 Rust 探索系统的本原：编程语言</a> #read#language</li>
<li><a href="https://www.bmpi.dev/dev/deep-in-program-language/how-to-implement-generics/">编程语言是如何实现泛型的</a> #read#language</li>
<li><a href="https://tls13.ulfheim.net/">The Illustrated TLS 1.3 Connection: Every Byte Explained</a> TLS 1.3 协议的图示与解析 #books#crypto</li>
<li><a href="https://wiki.nikitavoloboev.xyz/">README - Everything I know</a> personal wiki where I share everything I know about this world in form of an online GitBook  #books</li>
<li><a href="https://blog.sunfishcode.online/bugs-in-hello-world/">Bugs in Hello World</a> 系统调用 write 可能会失败，但是有的语言不会处理 #read</li>
<li><a href="https://segmentfault.com/a/1190000021367378">从 Fetch 到 Streams —— 以流的角度处理网络请求</a> （各家网盘的前端下载是如何实现的） #frontend</li>
<li><a href="https://regex-vis.com/">Regex Vis</a> 正则表达式可视化（+编辑） #tools#regex</li>
<li><a href="https://dov.is/notebooks/solving-wordle-regex.html">Solving Wordle using Regex (and a little bit of Python)</a> 用正则表达式玩 Wordle #read</li>
<li><a href="https://virtuallyfun.com/wordpress/2022/03/18/silent-partner-space-walk/">Silent Partner – Space Walk | Fun with virtualization</a> YouTube Live Premier Song #read</li>
<li><a href="https://www.waynerv.com/posts/understanding-netfilter-and-iptables/">深入理解 netfilter 和 iptables</a> #read#arch#deepdive</li>
<li><a href="https://mathiasbynens.be/demo/url-regex">In search of the perfect URL validation regex</a> 多个用于匹配 URL 的正则表达式的对比 #read#tools#regex</li>
<li><a href="http://www.maizure.org/projects/printf/index.html">Tearing apart printf() – MaiZure’s Projects</a> printf 从简单到复杂 #read</li>
<li><a href="http://www.maizure.org/projects/how-difficult-is-your-programming-project.html">How Difficult is your Programming Project? – MaiZure’s Projects</a> #read</li>
<li><a href="http://www.maizure.org/projects/decoded-gnu-coreutils/index.html">Decoded: GNU coreutils – MaiZure’s Projects</a> GNU Coreutils 代码解读 #read#books</li>
<li><a href="https://www.datawrapper.de">Datawrapper: Create charts, maps, and tables</a> 交互式画数据图工具（charts, maps, tables) #tools</li>
<li><a href="https://christianheilmann.com/2022/01/13/turning-a-github-page-into-a-progressive-web-app/">Turning a GitHub page into a Progressive Web App | Christian Heilmann</a> #read#frontend</li>
<li><a href="https://www.gcores.com/articles/147983">家用3D打印不完全入坑指南 | 机核 GCORES</a> #read</li>
<li><a href="https://tech.meituan.com/2022/03/10/interesting-talk-about-design-patterns.html">设计模式二三事</a> 本文会结合在美团金融服务平台设计开发时的经验，结合实际的案例，并采用“师生对话”这种相对诙谐的形式去讲解三类常用设计模式的应用。 #read#design</li>
<li><a href="https://sspai.com/post/71962">口语写作好帮手：两个语料查询网站 - 少数派</a> #read</li>
<li><a href="https://leetcode.com/problems/sudoku-solver/discuss/15796/Singapore-prime-minister-Lee-Hsien-Loong%27s-Sudoku-Solver-code-runs-in-1ms">Singapore prime minister Lee Hsien Loong’s Sudoku Solver code runs in 1ms - LeetCode Discuss</a> #read</li>
<li><a href="https://medium.com/@Pilot-EPD-Blog/typescript-for-pythonistas-f90bbb297f0a">TypeScript for Pythonistas</a> 两种不同的类型系统，structural 和 nominative #read</li>
<li><a href="https://nikodunk.com/a-node-js-developer-discovers-rails/">From Node to Ruby on Rails - D U N K</a> #read</li>
<li><a href="https://davidamos.dev/three-things-you-might-not-know-about-numbers-in-python/">3 Things You Might Not Know About Numbers in Python</a> 有方法、有层级关系、可扩展 #read#py</li>
<li><a href="https://gist.github.com/lisawolderiksen/a7b99d94c92c6671181611be1641c733">Use a Git commit message template to write better commit messages</a> 设定 <code>.gitmessage</code> 实现用模板自动填充 commit message #tips</li>
<li><a href="https://vvvvalvalval.github.io/posts/what-makes-a-good-repl.html">Val on Programming: What makes a good REPL?</a> 基于 REPL 的开发：更容易自动化、更模块化的代码、更容易编写测试 #read#language</li>
<li><a href="https://github.com/nusr/hacker-laws-zh">nusr/hacker-laws-zh: 💻📖对开发人员有用的定律、理论、原则和模式。(Laws, Theories, Principles and Patterns that developers will find useful.)</a> #read</li>
<li><a href="https://blog.polyhaven.com/how-we-handle-80tb-and-5m-page-views-a-month-for-under-400/">How we handle 80TB and 5M page views a month for under $400</a> 高 cache 率，CF+B2 的流量联盟 #read#arch</li>
<li><a href="https://www.bmpi.dev/self/my-writing-story/250k/">写在第二十五万字</a> 个人写作体系的建立经验 #read</li>
<li><a href="https://www.slideshare.net/brendangregg/velocity-2015-linux-perf-tools">Velocity 2015 linux perf tools</a> Linux Performance Tools (tracing, probing…) #slides</li>
<li><a href="https://www.netmeister.org/blog/debugging-certificate-errors.html">Debugging Certificate Errors</a> 调试 SSL 和证书问题：过期、通配符、CNAME、信任链、中间人攻击 #read#backend</li>
<li><a href="https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md">system-design-primer/README-zh-Hans.md at master · donnemartin/system-design-primer</a> 系统设计入门及相关资源（抽认卡、知识网络、示例题目） #read#books#arch</li>
<li><a href="http://journal.stuffwithstuff.com/2020/04/05/crafting-crafting-interpreters/">Crafting “Crafting Interpreters”</a> 四年连续写一本书的历程 #read</li>
<li><a href="https://medium.com/@pv.safronov/moscow-state-university-network-built-by-students-211539855cf9">Moscow state university network built by students</a> 莫斯科国立大学的学生自建校园网的故事 #read</li>
<li><a href="http://craftinginterpreters.com/">Crafting Interpreters</a> #books</li>
<li><a href="https://github.com/ulid/spec">ulid/spec: The canonical spec for ulid</a> Universally Unique Lexicographically Sortable Identifier，一个改进版的 UUID，提供了基于时间戳的可排序性 #tools</li>
<li><a href="https://www.bigocheatsheet.com/">Big-O Algorithm Complexity Cheat Sheet (Know Thy Complexities!) @ericdrowell</a> 常见数据结构复杂度速查 #tools</li>
<li><a href="https://pages.longtian.info/gps/">GPS 工作原理</a> 交互式教程 #visual#read</li>
<li><a href="https://gyroflow.xyz/">Gyroflow v1.0.0-rc has appeared!</a> 用相机内建的陀螺仪做视频防抖 #tools</li>
<li><a href="https://notes.ljl.li/bus-vis/">把北京的所有公交织成一张图——带你看看北京的公交网</a> #read#frontend</li>
<li><a href="https://risingstars.js.org/2021/zh">2021 年 JavaScript 明星项目</a> #read#frontend</li>
<li><a href="https://www.netmeister.org/blog/basic-network-troubleshooting.html">Basic Network Troubleshooting</a> Is it the DNS, the network, or the app? #read#network</li>
<li><a href="https://coolshell.cn/articles/22173.html">“一把梭：REST API 全用 POST ” | 酷 壳 - CoolShell</a> 为什么需要不同的 HTTP 动词，以及如何处理 REST 复杂查询 #read#api</li>
<li><a href="https://iximiuz.com/en/posts/container-learning-path/">Learning Containers From The Bottom Up - Efficient Learning Path to Grasp Containers Fundamentals</a> 容器相关知识整理 #read#backend#docker</li>
<li><a href="https://delta.chat/en/">Delta Chat: The e-mail messenger</a> 基于邮件的聊天客户端 #tools</li>
<li><a href="https://github.blog/2021-12-15-a-brief-history-of-code-search-at-github/">A brief history of code search at GitHub | The GitHub Blog</a> Github 代码搜索功能的历史演进：从现有工具（solr, elastic search）到完全自建（rust-based） #read#arch</li>
<li><a href="https://ops.tips/">OpsTips</a> in-depth articles on cloud-native tech and daily software engineering #books</li>
<li><a href="https://ops.tips/blog/why-top-inside-container-wrong-memory/">Why top and free inside containers don’t show the correct container memory</a> 因为 /proc/meminfo 不受 namespace 影响 #read#backend#docker</li>
<li><a href="https://ddanilov.me/how-signals-are-handled-in-a-docker-container">How signals are handled in a docker container | Dmitry Danilov</a> linux kernel 处理信号时，对 pid 1 和其它进程的行为不一样 #read#arch</li>
<li><a href="https://ddanilov.me/how-to-configure-core-dump-in-docker-container">Configuring core dumps in docker | Dmitry Danilov</a> host 上要设定 kernel.core_pattern，容器需要加 --init 和 --ulimit 参数，以及建议在相同 image 的容器内的 gdb 中检视 #read#hack</li>
<li><a href="https://jvns.ca/blog/2018/04/28/debugging-a-segfault-on-linux/">How to get a core dump for a segfault on Linux</a> 先设定 ulimit，然后修改系统默认的 dump 位置 #read#backend#hack</li>
<li><a href="https://linux.cn/article-14249-1.html">使用 CMake 和 VSCodium 设置一个构建系统</a> #read#infra#infra</li>
<li><a href="https://segmentfault.com/a/1190000010990136">漫谈非加密哈希算法</a> hash != 加密，不涉及故意的哈希碰撞不一定需要加密哈希算法 #read</li>
<li><a href="https://cn-guoziyang.github.io/Moonix/#/?id=%f0%9f%8c%95-moonix">Moonix 文档</a> 从零开始写一个 RISC-V OS #read#books</li>
<li><a href="https://docs.google.com/document/d/16aoMrMGHPIR1i_eUNRvksdDdwcDG6KiOJN6Vfh-n8-s/edit#">Google 技术写作</a> Google 的技术写作规范（中文翻译版） #read#write</li>
<li><a href="https://laike9m.com/blog/best-python-development-setup-for-2022-and-beyond,144/">Best Python Development Setup for 2022 and Beyond</a> pipx, pyenv, PDM #read#py</li>
<li><a href="https://www.cloudcity.io/blog/2019/02/27/things-i-wish-they-told-me-about-multiprocessing-in-python/">Things I Wish They Told Me About Multiprocessing in Python</a> Python 中多进程的最佳实践：正确的 clean up，SIGTERM/SIGINT 处理，避免无限的 blocking wait #read#py#backend</li>
<li><a href="https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/">Comparing Floating Point Numbers, 2012 Edition</a> 浮点数比较的正确方法（取决于数字是否接近0），eps，ULP #hack#read</li>
<li><a href="https://type.cyhsu.xyz/2019/12/word-inline-numbering-with-seq-field/">如何在 Word 文档的同一段落内插入自动编号</a> #hack</li>
<li><a href="https://curlconverter.com/">Convert curl commands to code</a> #tools</li>
<li><a href="https://tech.meituan.com/2020/08/06/new-zgc-practice-in-meituan.html">新一代垃圾回收器ZGC的探索与实践</a> #read#java#backend</li>
<li><a href="https://wiki.tsetien.com/index.php?title=Windows_11_Setting_Up">Windows 11 Setting Up - Tsetien’s Wiki</a> 调整 Windows 11 的经验总结 #hack</li>
<li><a href="http://www.ruanyifeng.com/blog/2022/01/cli-alternative-tools.html">命令行常用工具的替代品 - 阮一峰的网络日志</a> #tools#read</li>
<li><a href="https://johnnydecimal.com/">Johnny Decimal - A system to organise projects</a> 用数字+层级分类管理文件 #read#hack</li>
<li><a href="https://best33.com/403.moe">我如何用 Windows 开发 —— 2021 我的开发环境</a> WSL2 踩坑相关 #read#hack</li>
<li><a href="https://www.troyhunt.com/how-i-got-pwned-by-my-cloud-costs/">How I Got Pwned by My Cloud Costs</a> 静态资源没有被 CDN 缓存造成云服务出口流量暴增，原因是 CloudFlare 对可缓存资源有最大大小限制 #read#infra</li>
<li><a href="http://it-notes.dragas.net/2022/01/24/why-were-migrating-many-of-our-servers-from-linux-to-freebsd/">Why we’re migrating (many of) our servers from Linux to FreeBSD</a> kernel 和 userland 的一致性，技术主导的开发方向，更好的隔离和网络栈性能，更直接的性能分析 #read</li>
<li><a href="http://shlegeris.com/2018/10/23/sqrt.html">A surprisingly hard CS problem: sums of square roots</a> 核心问题：平方根是无理数，实际上需要比较无限长度的数字流 #read#math</li>
<li><a href="https://www.actionsbyexample.com/">GitHub Actions by Example</a> #backend</li>
<li><a href="https://jvns.ca/blog/2022/01/24/hosting-my-static-sites-with-nginx/">Hosting my static sites with nginx</a> 容器化构建过程，rsync 分发到服务器，ansible 设定 nginx 配置 #read#backend</li>
<li><a href="https://github.com/gaogaotiantian/viztracer">gaogaotiantian/viztracer: VizTracer is a low-overhead logging/debugging/profiling tool that can trace and visualize your python code execution.</a> Python 多线程/多进程/协程执行 log/profile/可视化工具 #tools</li>
<li><a href="https://jodd.org/">Jodd - a set of Java micro-frameworks and developer-friendly tools and utilities.</a> 一系列用于Java 的简洁工具库（JSON, HTTP, Utils…） #tools</li>
<li><a href="https://thenewstack.io/an-introduction-to-queue-theory-why-disaster-happens-at-the-edges/">Why Disaster Happens at the Edges: An Introduction to Queue Theory - The New Stack</a> 系统设计中的队列理论：util&lt;75%, 限制 variance, backpressure #infra#math</li>
<li><a href="https://saintwinkle.com/recursive-to-y-combinator/">从递归到 Y 组合子</a> Little Schemer 第九章 #read#fp</li>
<li><a href="https://saucer-man.com/information_security/825.html">python代码打包和反编译 - SAUCERMAN</a> 打包：pyinstaller, nuitka / 解包：pyinstaller (exe -&gt; pyc -&gt; py) #py</li>
<li><a href="https://miao1007.github.io/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%80%9A%E8%BF%87%E8%80%83%E8%AF%95/">如何快速通过考试</a> 考试也能有通用流程 #read#lifehack</li>
<li><a href="https://miao1007.github.io/%E5%A6%82%E4%BD%95%E6%8A%80%E6%9C%AF%E6%8B%9B%E8%81%98-%E5%85%BC%E8%B0%88%E8%AF%86%E5%88%AB%E7%AE%80%E5%8E%86%E9%80%A0%E5%81%87/">如何技术招聘–兼谈识别简历造假</a> 从面试官的角度，看看会问什么 #read</li>
<li><a href="https://coderemixer.com/2018/12/07/y-combinator-in-ten-minutes/">十分钟速通 Y Combinator</a> lambda 演算中的递归实现 #fp#read</li>
<li><a href="https://jvns.ca/blog/2022/01/15/some-ways-dns-can-break/">Some ways DNS can break</a> 各种 DNS 问题可能导致的奇怪故障 #read#backend#infra</li>
<li><a href="https://github.com/likianta/pyportable-installer">likianta/pyportable-installer: Build and distribute installation-free python programs by all-in-one configuration file.</a> Python 项目打包工具，打包为免安装版 #tools#py</li>
<li><a href="https://notes.shichao.io/">Shichao’s Notes</a> 书籍笔记：Advanced Programming in the UNIX Environment, UNIX Network Programming, The Go Programming Language 以及其他 #note#books</li>
<li><a href="https://translate.yandex.com/dictionary/zh-emj/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C">Yandex.Translate - Translate to Emoji</a> 翻译到 Emoji #tools</li>
<li><a href="https://httptoolkit.tech/">HTTP Toolkit</a> HTTP 调试工具（类 Fiddler）：Intercept &amp; view all your HTTP(S), Mock endpoints or entire servers, Rewrite, redirect, or inject errors #tools</li>
<li><a href="https://www.joshwcomeau.com/css/custom-css-reset/">My Custom CSS Reset</a> 覆盖浏览器的内置样式 #frontend</li>
<li><a href="https://chedongxi.com/p/264710.html">1.6万字马斯克访谈实录：载人飞船上天前，我曾跪地祈祷</a> #read</li>
<li><a href="https://zverok.github.io/advent2021/day24">Advent of Grok {Shan, Shui}* - Day 24: Putting it all together</a> 山水画生成器如何工作（procedural art generation）  #read</li>
<li><a href="https://sql-bits.com/the-difference-between-where-and-having/">The difference between WHERE and HAVING – SQL Bits</a> where 决定了 query 会处理哪些 row，having 决定了 server 会给 client 发回哪些 row #db#tips</li>
<li><a href="https://docker.easydoc.net/doc/81170005/cCewZWoN/XQEqNjiu">🎯 Docker 快速入门 - 易文档</a> #books#backend</li>
<li><a href="https://k8s.easydoc.net/">📚 K8S 教程 - 易文档</a> #books#backend</li>
<li><a href="https://ishadeed.com/article/defensive-css/">Defensive CSS - Ahmad Shadeed</a> #frontend</li>
<li><a href="https://microsoft.github.io/code-with-engineering-playbook/ENG-FUNDAMENTALS-CHECKLIST/">Engineering Fundamentals Checklist - Code With Engineering Playbook</a> #tools</li>
<li><a href="https://nystudio107.com/blog/dock-life-using-docker-for-all-the-things">Dock Life: Using Docker for All The Things!</a> 用 docker alias 取代一切 #hack</li>
<li><a href="https://sollove.com/2013/03/03/my-first-5-minutes-on-a-server-or-essential-security-for-linux-servers/">My First 5 Minutes On A Server; Or, Essential Security for Linux Servers – Sol Love</a> #security</li>
<li><a href="https://coolshell.cn/articles/21672.html">我做系统架构的一些原则 | 酷 壳 - CoolShell</a> #infra</li>
<li><a href="https://pan.htm.fun/%E8%BD%AF%E8%80%83%E7%9B%AE%E5%BD%95">软考资源目录</a> #resource</li>
<li><a href="https://www.cnblogs.com/RioTian/p/15188528.html">“n个球放到m个盒子”问题整理(Twelvefold way) - RioTian - 博客园</a> 数论 #math#hack</li>
<li><a href="https://miller-rabin.appspot.com/">Deterministic variants of the Miller-Rabin primality test. Miller-Rabin SPRP bases records</a> Miller-Rabin 质数判定的确定性根 #hack</li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%B1%B3%E5%8B%92-%E6%8B%89%E5%AE%BE%E6%A3%80%E9%AA%8C">米勒-拉宾素性检验 - 维基百科，自由的百科全书</a> 随机化素数判定算法 #hack</li>
<li><a href="https://darekkay.com/blog/static-site-comments/">Various ways to include comments on your static site</a> 各种给静态网页加评论功能的方式总结 #read#frontend</li>
<li><a href="https://app.quicktype.io/">Instantly parse JSON in any language | quicktype</a> 根据 JSON 生成对应语言的对象和解析器 #tools</li>
<li><a href="https://open.leancloud.cn/improve-chinese/">余光中：怎样改进英式中文？- 论中文的常态与变态 | LeanCloud 开放资源</a> #read</li>
<li><a href="https://phoboslab.org/log/2021/11/qoi-fast-lossless-image-compression">Lossless Image Compression in O(n) Time</a> QOI，一个简单的图片无损压缩格式，和 PNG 压缩比类似但速度更快 #tools</li>
<li><a href="https://www.bmpi.dev/dev/authentication-and-authorization-in-a-distributed-system/">分布式系统下的认证与授权</a> #backend#distributed#security</li>
<li><a href="https://jfstone.cn/salary/">工作性价比计算器</a> #tools</li>
<li><a href="https://lemire.me/blog/2021/10/27/in-c-how-do-you-know-if-the-dynamic-allocation-succeeded/">In C, how do you know if the dynamic allocation succeeded?</a> 因为 Linux 下 Overcommit 机制的存在，malloc 可能会容许分配大内存，但实际使用的时候出错 #tips#linux</li>
<li><a href="https://tuhrig.de/my-logging-best-practices/">My Logging Best Practices – Thomas Uhrig</a> INFO for business, DEBUG for code #tips#backend</li>
<li><a href="http://zhangtielei.com/posts/blog-distributed-consistency.html">条分缕析分布式：到底什么是一致性？ - 铁蕾的个人博客</a> 原子提交问题并不是一般的共识问题，而是要求更高的 uniform consensus 问题 #distributed</li>
<li><a href="https://www.nosuchfield.com/2019/01/09/Multiplex-and-non-blocking-and-threading-and-coroutine/">多路复用、非阻塞、线程与协程 - 御坂研究所</a> #backend#arch#blog</li>
<li><a href="https://learnk8s.io/troubleshooting-deployments">A visual guide on troubleshooting Kubernetes deployments</a> #backend#distributed</li>
<li><a href="http://www.dabeaz.com/finalgenerator/">Generators - The Final Frontier</a> Python Generator &amp; Coroutine 三部曲之三，介绍 context manager, asyncio, 简单编译器和实现调用栈 #course#py#backend</li>
<li><a href="http://www.dabeaz.com/coroutines/">A Curious Course on Coroutines and Concurrency</a> Python Generator &amp; Coroutine 三部曲之二，介绍基于 yield 的 coroutine 实现，reactor model，以及如何用 coroutine 模拟一个简单的 OS #course#py#backend</li>
<li><a href="http://www.dabeaz.com/generators/">Generator Tricks for Systems Programmers</a> Python Generator &amp; Coroutine 三部曲之一，介绍 generator 与 data pipeline #course#py#backend</li>
<li><a href="https://lucb1e.com/randomprojects/php/funnip.php?ip=8.8.8.8&amp;link">All possible notations of IPv4 address</a> URL 中的 IP 地址，数字部分可以用不同的进制 (dec, hex, oct) 表示，从而构造相同 IP 的诸多不同表示方法 #web#hack</li>
<li><a href="https://github.com/EtherDream/http-server-online">EtherDream/http-server-online: Start a local HTTP server without any tools, just open a web page.</a> 在浏览器里直接预览本地静态网站，原理是用 Service Worker 拦截请求 URL，然后用 FileSystem API 读取本地资源 #tools</li>
<li><a href="https://briananglin.me/posts/spending-5k-to-learn-how-database-indexes-work/">Spending $5k to learn how database indexes work</a> 如果没加索引，limit 最坏情况下也会全表读（但是如果读够了就不会再读了） #database</li>
<li><a href="https://app.netlify.com/drop">Netlify Drop | Netlify</a> 拖放静态网站文件，直接得到公网地址 #tools</li>
<li><a href="https://susam.in/maze/timing-with-curl.html">Timing With Curl - Susam’s Maze</a> 让 curl 显示连接用时 #tips</li>
<li><a href="https://pawelcislo.com/2021/11/14/my-vs-code-playground/">My VS Code Playground - Pawel Cislo</a> VS Code 配置指北 #tips</li>
<li><a href="https://www.agwa.name/blog/post/ssh_signatures">It’s Now Possible To Sign Arbitrary Data With Your SSH Keys</a> 用 SSH key 给文件签名 #tips</li>
<li><a href="https://jvns.ca/blog/2021/12/06/dns-doesn-t-propagate/">DNS doesn’t “propagate”</a> 对 DNS 的更好类比是 CDN，以及关于为什么 DNS 记录修改生效需要很久的讨论（negative DNS caching） #backend#web</li>
<li><a href="https://www.infoq.cn/article/yujetuzzjhlnvjwrfo5s">GPU选购指南：训练ML模型，我必须买RTX3080吗？-InfoQ</a> 适合于不同深度学习场景的 GPU 选购（2020 版） #tips</li>
<li><a href="https://nip.io/">nip.io - wildcard DNS for any IP Address</a> 解析到指定 IP 的域名服务 #tools</li>
<li><a href="https://github.com/automerge/automerge">automerge/automerge: A JSON-like data structure (a CRDT) that can be modified concurrently by different users, and merged again automatically.</a> 支持自动解决冲突（Collision-Resolve）的类 JSON 数据结构 #tools</li>
<li><a href="https://www.netmeister.org/blog/stack-vars.html">Uninitialized Stack Variables</a> C 中没有用 memset 手动初始化栈上变量导致了诡异的 Bug #c#backend</li>
<li><a href="https://github.com/Ciphey/Ciphey">Ciphey/Ciphey: ⚡ Automatically decrypt encryptions without knowing the key or cipher, decode encodings, and crack hashes ⚡</a> 自动对复杂编码串 decode 的工具 #tools</li>
<li><a href="https://stackexchange.com/performance">Performance - Stack Exchange</a> Stack Overflow 的网站架构 #backend</li>
<li><a href="https://www.youtube.com/playlist?list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB">Distributed Systems lecture series</a> DDIA 作者的分布式系统课程 #video#distributed</li>
<li><a href="https://www.bmpi.dev/dev/how-to-learn-tech/">如何学习一门技术</a> 是否要学、怎么学、如何用 #tips#blog</li>
<li><a href="https://learnbyexample.github.io/cli_text_processing_coreutils/cover.html">Command line text processing with GNU Coreutils</a> #books</li>
<li><a href="https://github.com/wg/wrk">wg/wrk: Modern HTTP benchmarking tool</a> 单机 HTTP 压力测试工具 #tools</li>
<li><a href="https://tech.marksblogg.com/roapi-rust-data-api.html">ROAPI: An API Server for Static Datasets</a> #blog#tools</li>
<li><a href="https://github.com/roapi/roapi">roapi/roapi: Create full-fledged APIs for static datasets without writing a single line of code.</a> 直接从 JSON/CSV 文件生成 query API #tools#data</li>
<li><a href="http://blog.cloudflare.com/building-full-stack-with-pages/">Building a full stack application with Cloudflare Pages</a> Cloudflare Pages 增加了通过 js 文件在静态网页内增加动态内容的功能，甚至还额外提供了 KV，持久存储和中间件支持 #frontend</li>
<li><a href="https://code.visualstudio.com/blogs/2021/09/29/bracket-pair-colorization">How We Made Bracket Pair Colorization 10,000x Faster In Visual Studio Code</a> (2,3)-trees, recursion-free tree-traversal, bit-arithmetic, incremental parsing #algo</li>
<li><a href="https://endtimes.dev/why-you-should-dither-images/">Why Your Website Should Use Dithered Images | endtimes.dev</a> 与直接压缩原始真彩色图片相比，dithered image 能有更好的压缩比率，在非重要场合下很合适 #frontend#hack</li>
<li><a href="https://gist.github.com/b21c71187fcbf138aec341021e0e4e30">Javascript Anti Debugging — Some Next Level Sh*t (Part 2— Abusing Chromium Devtools Scope Pane)</a> 细化到行级的 chrome devtool debugging 检测 #frontend#hack</li>
<li><a href="https://www.netmeister.org/blog/return-printf.html">There is no ‘printf’.</a> gcc 在满足 heuristic 的时候，会用 puts 替代 printf，导致 printf 作为 main 中最后一次调用时返回值不符合预期 #c</li>
<li><a href="https://jvns.ca/blog/2021/11/17/debugging-a-weird--file-not-found--error/">Debugging a weird ‘file not found’ error</a> 生成的 Go 二进制文件不是 static linked 的；ELF 可执行文件可以请求一个 interpreter 来执行自身，如果这个 interpreter 不存在，会导致文件存在但是无法被运行 #hack#tips</li>
<li><a href="https://web.hypothes.is/">Home : Hypothesis</a> 网页荧光笔 #tools</li>
<li><a href="https://jvns.ca/blog/2021/11/15/esbuild-vue/">Some notes on using esbuild</a> 一个相对简单的前端构建方案：用 import 导入库，用 esbuild 生成单体 js #frontend</li>
<li><a href="https://www.cockroachlabs.com/blog/how-we-built-cockroachdb-serverless/">How we built a forever-free serverless SQL database</a> 构造 serverless SQL DB：用 KV 作为 SQL DB 的底层存储，把 SQL 执行层无状态化 #arch#database</li>
<li><a href="https://linux.cn/article-13983-1.html">软件开发|扩展一个 GraphQL 网站</a> 调整 GraphQL API 和网页构造，使其更易于缓存 #read#blog#frontend#backend</li>
<li><a href="https://modern-sql.com/">Modern SQL: A lot has changed since SQL-92</a> 展示现代 SQL 的一些写法（递归，over，system_time…） #books#backend#database</li>
<li><a href="https://use-the-index-luke.com/">SQL Indexing and Tuning e-Book for developers: Use The Index, Luke covers Oracle, MySQL, PostgreSQL, SQL Server, …</a> 解释 SQL 索引如何工作的电子书 #books#read#database#backend</li>
<li><a href="https://earthly.dev/blog/awk-examples/">Understanding AWK</a> 简明 awk 教程 #read</li>
<li><a href="https://github.com/bobwen-dev/htpdate">bobwen-dev/htpdate: a tool to synchronize system time with web servers, for linux, windows and macos.</a> 利用 Web Server 的响应时间戳作为时间源同步时间 #tools</li>
<li><a href="https://sqlime.org/">SQLime — Online SQLite playground</a> 在线 SQLite 环境，基于 sql.js #tools</li>
<li><a href="https://www.cloudcraft.co/">Cloudcraft – Draw AWS diagrams</a> 不仅是画架构图，还能把架构图和实际环境同步起来 #arch#tools</li>
<li><a href="http://blog.rongarret.info/2009/10/catalog-of-wealth-creation-mechanisms.html">A catalog of wealth-creation mechanisms</a> 生成财富的九种方式，以及对信息时代生成财富方式的细分 #life</li>
<li><a href="https://huonw.github.io/blog/2021/10/nsw-covid-qr/">Mechanical sympathy for QR codes: making NSW check-in better</a> 简化二维码（QR Code）中的 URL：参数编码、域名长度、纠错等级 #hack</li>
<li><a href="https://www.composerize.com/?utm_source=appinn.com">Composerize</a> 把复杂的 docker 命令转换成 docker-compose.yml #tools#backend#infra</li>
<li><a href="https://www.keithschwarz.com/darts-dice-coins/">Darts, Dice, and Coins</a> 非均衡抽样方法（抽奖算法），以及 O(1) 时间的 Alias Method（空间换时间，避免了查询随机数所在的区间） #algo</li>
<li><a href="https://www.redblobgames.com/grids/hexagons/">Red Blob Games: Hexagonal Grids</a> 如何设计和实现六边形网格系统 #game#design</li>
<li><a href="https://www.bmpi.dev/dev/guide-to-k8s-cloud-native/">K8S 云原生应用开发小记</a> 从设计到建构的全过程 #infra#backend</li>
<li><a href="https://nullprogram.com/blog/2014/09/18/">The Billion Pi Challenge</a> 如何在 pi 的前 1B 小数位中搜寻一个特定的数字序列？空间换时间 #hack#backend#c</li>
<li><a href="https://sspai.com/post/69601">为 PDF 增加目录 - 少数派</a> （pdf.tocgen）先根据已有的标题提取出标题对应的格式信息，然后用格式信息匹配所有标题，最后构造目录 #hack</li>
<li><a href="https://blog.stackblitz.com/posts/introducing-webcontainers/">Introducing WebContainers: Run Node.js natively in your browser</a> 用WASM写了个极小的OS，然后在这个OS上跑node.js，通过把OS里的虚拟TCP层关联到浏览器的service worker，就可以在本地浏览器里完全实现一个node.js开发环境了，用的时候只需要浏览器本身，并不需要任何其他配置 #frontend#hack</li>
<li><a href="https://jonpauluritis.com/articles/my-top-10-money-rules/">My Top 10 Money Rules</a> 关于金钱的一些感悟 #lifehack</li>
<li><a href="https://motion.dev/">Motion One: The Web Animations API for everyone</a> 高性能的前端 JavaScript 动画库 #frontend#visual</li>
<li><a href="https://www.innoq.com/de/blog/nginx-ssi-env/">Injecting environment variables into static websites using NGINX</a> Server Side Include，往网页里注入环境变量 #backend#hack</li>
<li><a href="https://smallstep.com/blog/diy-single-sign-on-for-ssh/">DIY Single Sign-On for SSH</a> SSH + Single Sign On，自己配置 CA 和认证服务 #tips#hack#backend</li>
<li><a href="https://max.engineer/server-informed-ui?utm_source=pocket_mylist">Don’t Build A General Purpose API To Power Your Own Front End - Max Chernyak</a> 对自有的前端，可以提供一套更自由、独立演化的内部 API，而不用痛苦的修改对外 API 以适应业务需求 #backend#api#tips</li>
<li><a href="http://www.samvitjain.com/blog/regret/?utm_source=pocket_mylist">Regret Minimization | Samvit Jain</a> 「最小化后悔」可能不是决策的最好方式，「寻找不变量」可能更适合 #life#tips</li>
<li><a href="https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md">Git飞行规则(Flight Rules)</a> Git 出现问题之后如何应对 #tips</li>
<li><a href="https://mwhittaker.github.io/consistency_in_distributed_systems/2_cap.html">Linearizability &amp; CAP</a> 一个很赞的线性一致性可视化 #visual#distributed#read</li>
<li><a href="http://rosettacode.org/wiki/Category:Programming_Tasks">Category:Programming Tasks - Rosetta Code</a> 相同算法的不同语言实现 #tools</li>
<li><a href="https://jvns.ca/blog/2021/10/21/how-to-get-useful-answers-to-your-questions/">How to get useful answers to your questions</a> 问 Yes/No，展示自己当前的理解，愿意打断 #tips</li>
<li><a href="https://jlongster.com/future-sql-web">A future for SQL on the web</a> 浏览器自带的 IndexedDB 太慢，用 WASM 版的 SQLite 替代，然后把 IndexedDB 作为单纯的存储后端（Filesystem 抽象） #frontend#database#read</li>
<li><a href="https://kitze.io/posts/github-stars-wont-pay-your-rent">GitHub stars won’t pay your rent</a> 从开源项目到 Startup #read#startup</li>
<li><a href="https://paulstamatiou.com/how-i-made-50k-in-3-days-with-NFTs/">How I made $50K in 3 days with NFTs</a> #blockchain#nft</li>
<li><a href="https://febook.hzfe.org/awesome-interview/">前言 | HZFE - 剑指前端 Offer</a> 前端面试书籍 #books#interview#frontend</li>
<li><a href="https://yourbasic.org/golang/">Go go-to guide</a> #golang</li>
<li><a href="https://hoverzheng.github.io/post/technology-blog/go/goroutine-leak%E5%92%8C%E8%A7%A3%E5%86%B3%E4%B9%8B%E9%81%93/">Goroutine Leak和解决之道</a> #golang</li>
<li><a href="https://github.com/tianmingyun/MasterBitcoin2CN">tianmingyun/MasterBitcoin2CN: 《精通比特币》第二版  区块链研习社 云天明联合出品。本书更名《精通区块链编程第二版》已由机械工业出版社出版，京东有售。</a> #books#distributed</li>
<li><a href="https://github.com/golang101/golang101">golang101/golang101: Go语言101 : 一本侧重于Go语言语法和语义的编程解释和指导书</a> #books#golang</li>
<li><a href="https://git.sequentialread.com/forest/pow-captcha">pow-captcha</a> 基于 Proof of Work 的验证码方案 #tools</li>
<li><a href="http://fuzhe1989.github.io/2017/11/07/persistent-data-structure/">Persistent Data Structure</a> 可持久化数据结构（修改后旧版本依然可用） #data#blog</li>
<li><a href="http://lucida.me/404/">白板编程浅谈——Why, What, How</a> #career#job</li>
<li><a href="https://github.com/mviereck/x11docker">mviereck/x11docker: Run GUI applications and desktops in docker and podman containers. Focus on security.</a> 容器化的 X Server，可以在容器里跑 GUI #tools</li>
<li><a href="https://github.com/BornToBeRoot/NETworkManager">BornToBeRoot/NETworkManager: A powerful tool for managing networks and troubleshoot network problems!</a> Windows 下的高级网络管理工具 #tools</li>
<li><a href="https://blog.immersed.team/working-from-orbit-39bf95a6d385">Working From Orbit</a> 完全在 VR 世界中工作 #read#visual</li>
<li><a href="https://caprover.com/">CapRover · Free and Open Source PaaS!</a> self-host PaaS #infra#tools</li>
<li><a href="https://www.evanmiller.org/ab-testing/">Evan’s Awesome A/B Tools - sample size calculator, A/B test results, and more</a> AB测试计算器 #tools#data</li>
<li><a href="https://blog.cloudflare.com/october-2021-facebook-outage/">Understanding How Facebook Disappeared from the Internet</a> Cloudflare 的 Facebook BGP 事件外部记录 #infra</li>
<li><a href="https://www.youtube.com/watch?v=yWzMiaqnpkI">Mind-bending metaclasses - adding function overloads to Python - YouTube</a> #hack</li>
<li><a href="https://github.com/devongovett/regexgen">devongovett/regexgen: Generate regular expressions that match a set of strings</a> #tools#frontend</li>
<li><a href="https://sspai.com/prime/story/mkdocs-primer">笔记文档一把梭——MkDocs 快速上手指南 ｜ 少数派会员  π+Prime</a> #tools</li>
<li><a href="https://dropbox.github.io/dbx-career-framework/overview.html">Overview - Dropbox Engineering Career Framework</a> #career#grow</li>
<li><a href="https://jg.gg/2020/11/22/how-to-tell-what-level-of-developer-you-are/">How to tell what level of developer you are, junior to senior</a> #read#grow</li>
<li><a href="http://thesecretlivesofdata.com/raft/">Raft | The Secret Lives of Data</a> 最好的 Raft 交互式可视化 #distributed#visual</li>
<li><a href="https://zinglix.xyz/2020/06/25/raft/">「图解Raft」让一致性算法变得更简单</a> Raft 图解 #algo#distributed#read</li>
<li><a href="https://yufree.cn/cn/2021/09/26/first-aid/">肘后备急方 - Miao Yu | 于淼</a> #read#lifehack</li>
<li><a href="https://sspai.com/post/68959">Windows 更新设计、类型、步骤及常见问题 - 少数派</a> #read</li>
<li><a href="http://www.codersnotes.com/notes/a-constructive-look-at-templeos/">A Constructive Look At TempleOS</a> #blog#read</li>
<li><a href="https://github.com/hadolint/hadolint">hadolint/hadolint: Dockerfile linter, validate inline bash, written in Haskell</a> Dockerfile 的 Linter #tools#docker#infra</li>
<li><a href="https://posthog.com/blog/automating-a-software-company-with-github-actions">Automating a software company with GitHub Actions - PostHog</a> Github Actions 在软件开发各个阶段的使用示例 #blog#read#infra</li>
<li><a href="https://ariadne.space/2021/08/13/gnu-nano-is-my-editor-of-choice/">GNU nano is my editor of choice – Ariadne’s Space</a> 配置 nano 支持语法高亮 #blog#read#editor</li>
<li><a href="https://trymito.io/">Mito</a> 给 Jupyter 增加类 Excel 的可视化数据处理工具 #tools#data</li>
<li><a href="https://brennan.io/2015/01/16/write-a-shell-in-c/">Tutorial - Write a Shell in C - Stephen Brennan</a> 如何用 C 写一个 Shell #blog#read</li>
<li><a href="https://apps.gnome.org/zh-CN/">发现 GNOME 上的最佳应用 – GNOME 上的应用</a> #tools</li>
<li><a href="https://datastation.multiprocess.io/">DataStation | The Data IDE for Developers</a> 一站式数据分析，将数据库 SQL 查询、脚本编程、数据可视化结合在一起。 #tools#data</li>
<li><a href="https://github.com/calganaygun/MDcat">calganaygun/MDcat: A super simple script which uses the GitHub API to convert your markdown files to GitHub styled HTML site.</a> Github 自带的 Markdown 转 HTML 示例 #tools</li>
<li><a href="https://gaphor.org/">Gaphor | Modeling for Everyone</a> 跨平台 UML 工具  #tools</li>
<li><a href="https://github.com/allanrbo/filesremote">allanrbo/filesremote: An SSH file manager that lets you edit files like they are local</a> SSH 文件管理工具 #tools</li>
<li><a href="https://linux.cn/article-13792-1.html">容器与云|容器的四大基础技术</a> namespace, cgroup, seccomp, SELinux #backend#security#container</li>
<li><a href="https://habr.com/en/post/574082/">One does not simply calculate the absolute value</a> 浮点数与绝对值里的坑 #backend#java#blog#trick#hole</li>
<li><a href="https://colobu.com/2021/05/11/unbounded-channel-in-go/">go实现无限缓存的channel</a> #backend#blog#golang</li>
<li><a href="https://accidentallyquadratic.tumblr.com">Accidentally Quadratic</a> 不小心用了二次算法的经验 #blog#programming</li>
<li><a href="https://divan.dev/posts/go_concurrency_visualize/">Visualizing Concurrency in Go ·  divan’s blog</a> #blog#visual</li>
<li><a href="https://draveness.me/golang/">Go 语言设计与实现</a> #books#backend</li>
<li><a href="https://elm-lang.org/">Elm - delightful language for reliable web applications</a> #frontend</li>
<li><a href="https://engineering.rakuten.today/post/elm-at-rakuten/">Elm at Rakuten | Rakuten Engineering Blog</a> #blog</li>
<li><a href="https://techinterviewhandbook.org/">Technical Interview Guide for Busy Engineers | Tech Interview Handbook</a> #books</li>
<li><a href="http://textbooks.math.gatech.edu/ila/index.html">Interactive Linear Algebra</a> #books</li>
<li><a href="https://gobyexample.com/">Go by Example</a> #books</li>
<li><a href="https://github.com/LearnShare/learn-VRA">LearnShare/learn-VRA: Let’s learn Vue/React/Angular together.</a> Vue、React 和 Angular 一起学怎么样？ #read#frontend</li>
<li><a href="https://www.zenrows.com/blog/mastering-web-scraping-in-python-crawling-from-scratch">Mastering Web Scraping in Python: Crawling from Scratch - ZenRows</a> #blog#read</li>
<li><a href="https://expeditedsecurity.com/aws-in-plain-english/">Amazon Web Services In Plain English</a> #tools#infra</li>
<li><a href="https://github.com/anuraghazra/github-readme-stats">anuraghazra/github-readme-stats: Dynamically generated stats for your github readmes</a> 生成关于 Github 使用情况的 badge #tools</li>
<li><a href="http://twistedoakstudios.com/blog/Post2353_when-one-way-latency-doesnt-matter">When One-Way Latency Doesn’t Matter</a> 无法准确测量 one-way latency #blog#read#network</li>
<li><a href="https://boyter.org/2016/04/collection-orly-book-covers/">A Collection of O’rly book Covers | Ben E. C. Boyter</a> #blog</li>
<li><a href="https://github.com/doocs/source-code-hunter">doocs/source-code-hunter: 😱 从源码层面，剖析挖掘互联网行业主流技术的底层实现原理，为广大开发者 “提升技术深度” 提供便利。目前开放 Spring 全家桶，Mybatis、Netty、Dubbo 框架，及 Redis、Tomcat 中间件等</a> #core</li>
<li><a href="https://github.com/Developer-Y/cs-video-courses">Developer-Y/cs-video-courses: List of Computer Science courses with video lectures.</a> #list#course</li>
<li><a href="https://wujun234.github.io/01%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Long.bitCount()%20%E8%A7%A3%E6%9E%90/">Long.bitCount() 解析 | 吴俊笔记本</a> JDK 中计算为 1 的比特位的神奇方法 #read#blog#java#hack</li>
<li><a href="https://wujun234.github.io/">吴俊笔记本</a> #books#read</li>
<li><a href="https://labuladong.gitbook.io/algo/">labuladong 的算法小抄</a> #books#read</li>
<li><a href="https://www.pdai.tech/">Java 全栈知识体系</a> 包含: Java 基础, Java 部分源码, JVM, Spring, Spring Boot, Spring Cloud, 数据库原理, MySQL, ElasticSearch, MongoDB, Docker, k8s, CI&amp;CD, Linux, DevOps, 分布式, 中间件, 开发工具, Git, IDE, 源码阅读，读书笔记, 开源项目… #read#books</li>
<li><a href="https://blog.mozilla.org/en/internet-culture/deep-dives/why-are-hyperlinks-blue/">Why are hyperlinks blue? | The Mozilla Blog</a> #blog#read</li>
<li><a href="https://lnav.org/">The Logfile Navigator</a> 一个强大的命令行日志查看器，支持彩色、SQL、时间线 #tools</li>
<li><a href="https://rawgraphs.io/">RAWGraphs</a> CSV 数据可视化，前端实现 #tools#visual</li>
<li><a href="https://webify.cloudbase.net/">云开发 Webify | 云开发 Webify</a> 腾讯云的 netify 山寨版 #tools</li>
<li><a href="https://zhuanlan.zhihu.com/p/20178871">如何愉快地写个小parser</a> #read</li>
<li><a href="https://pandolia.net/tinyc/index.html">自己动手写编译器 — 自己动手写编译器</a> tinyc #books</li>
<li><a href="https://honzaap.github.io/Systemizer/">Systemizer - A system design tool</a> 画系统架构图 #tools#visual</li>
<li><a href="https://www.calligrapher.ai/">Calligrapher.ai: Realistic computer-generated handwriting</a> 生成手写</li>
<li><a href="https://www.banterly.net/2021/07/31/new-in-git-switch-and-restore/">New in Git: switch and restore</a> switch 切换分支，restore 恢复内容 #blog#read</li>
<li><a href="https://www.expatsoftware.com/Articles/guy-on-the-beach-with-a-laptop.html">How I built a business that lets me live on the beach full time</a> #blog</li>
<li><a href="https://blog.gitguardian.com/how-to-improve-your-docker-containers-security-cheat-sheet/">How to improve your Docker containers security - [cheat sheet]</a> Docker 容器安全性 #backend#infra#blog#read</li>
<li><a href="https://hacks.mozilla.org/2021/08/mdns-autocomplete-search/">How MDN’s autocomplete search works – Mozilla Hacks - the Web developer blog</a> #frontend#blog#read</li>
<li><a href="https://tech.meituan.com/2021/01/07/pack-gzip-zstd-lz4.html">速度与压缩比如何兼得？压缩算法在构建部署中的优化</a> #blog</li>
<li><a href="https://vadimkravcenko.com/en/dealing-with-complex-projects/">Founders Guide: Complex Projects 101</a> #read</li>
<li><a href="https://blog.crunchydata.com/blog/postgres-full-text-search-a-search-engine-in-a-database">Postgres Full-Text Search: A Search Engine in a Database</a> Postgres 自带的英文全文搜索 #tools#db#backend</li>
<li><a href="https://horasearch.com/">Hora | Hora Search Everywhere</a> 搜索相似 #tools</li>
<li><a href="https://github.com/yifeikong/interview">yifeikong/interview: solutions to all kinds of questions for an interview</a> 常见面试算法题突击手册 #interview#tips</li>
<li><a href="https://github.com/yifeikong/reverse-interview-zh">yifeikong/reverse-interview-zh: 技术面试最后反问面试官的话</a> #interview#tips</li>
<li><a href="https://nlp.stanford.edu/IR-book/">Introduction to Information Retrieval</a> #books</li>
<li><a href="https://rustwasm.github.io/docs/book/introduction.html">Introduction - Rust and WebAssembly</a> #books</li>
<li><a href="https://hookdeck.com/">Webhook Infrastructure and Tooling - Hookdeck</a> #tools#backend</li>
<li><a href="https://mathiasbynens.be/notes/css-without-html">Using CSS without HTML · Mathias Bynens</a> #blog#read#frontend#css</li>
<li><a href="https://davidwalsh.name/dark-mode-invert-filter">Dark Mode in One Line of Code!</a> html filter invert(1) #frontend</li>
<li><a href="https://minimalmodeling.substack.com/p/modeling-mutual-friendship">Modeling mutual friendship</a> Two-row model vs. One-row model #blog#read#backend#db</li>
<li><a href="https://juejin.cn/post/6991689670027542564">如何优化 node 项目的 docker 镜像（像老板压榨员工一样压榨镜像）</a> #blog#read#backend</li>
<li><a href="https://me.guanghechen.com/post/game/sudoku/">当你想来一把数独</a> 如何生成一个数独 #read#blog</li>
<li><a href="https://www.pitchdeckhunt.com/best-pitch-decks">Best Pitch Decks</a> Startup Pitch Examples #tools</li>
<li><a href="https://feed-me-up-scotty.vincenttunru.com/">Feed me up, Scotty!</a> CSS selector based RSS Generator #tools</li>
<li><a href="https://blog.container-solutions.com/10-predictions-for-the-future-of-computing">10 Predictions for the Future of Computing or; the Inane Ramblings of our Chief Scientist</a> #blog#read</li>
<li><a href="https://github.com/arogozhnikov/einops">arogozhnikov/einops: Deep learning operations reinvented (for pytorch, tensorflow, jax and others)</a> #tools#dl</li>
<li><a href="https://blog.xuwei.fun/2020/09/07/characterset/">从一个Emoji字符说起</a> Unicode 漫谈 #read</li>
<li><a href="https://12factor.net/zh_cn/">The Twelve-Factor App （简体中文）</a> SaaS 应用方法论 #arch#read</li>
<li><a href="https://httpie.io/">HTTPie – command-line HTTP client for the API era</a> #tools</li>
<li><a href="http://bashrcgenerator.com/">.bashrc generator: create your .bashrc PS1 with a drag and drop interface</a> Generate Bash Prefix tooltips #tools</li>
<li><a href="https://github.com/yozorajs/yozora">yozora/README-zh.md at main · yozorajs/yozora</a> Markdown MST Generation #tools</li>
<li><a href="https://graphica.app/">Scimago Graphica | A new way to explore, visually communicate and make sense of data</a> visualization tools #visual#tools</li>
<li><a href="https://blog.pankajtanwar.in/have-you-ever-thought-how-nodemon-works-internally-lets-build-our-own-nodemon-in-under-10-minutes">Let’s build our own ‘nodemon’ in under 10 minutes!</a> #node#backend</li>
<li><a href="https://blog.joren.ga/programming/vla-bad">The (too) many pitfalls of VLA in C</a> #c</li>
<li><a href="http://kaifeiji.cc/post/change-data-capture-and-instant-notification-on-postgresql-via-listen-notify-and-server-sent-events/">PostgreSQL的数据变化捕获和实时通知——基于Listen-Notify和Server-Sent Events</a> #db</li>
<li><a href="https://sspai.com/post/67829">一日一技 | 集中管理与备份 Windows 分散各处的应用配置文件 - 少数派</a> #tips#windows</li>
<li><a href="https:/draveness.me/books-1">程序员可能必读书单推荐（一） - 面向信仰编程</a> #books</li>
<li><a href="https://utopia.app/">Utopia: Design and Code on one platform</a> React Drag-Drop Editor #frontend#tools</li>
<li><a href="https://git-history.jpalmer.dev/">Git: An Interactive History</a> #ui#read</li>
<li><a href="https://serhack.me/articles/measure-execution-time-program/">How to Measure Execution Time of a Program</a> #read</li>
<li><a href="https://learnui.design/blog/tips-signup-login-ux.html">15 Tips for Better Signup / Login UX</a> #ui#frontend</li>
<li><a href="https://venturebeat.com/2021/07/03/tesla-ai-chief-explains-why-self-driving-cars-dont-need-lidar/">Tesla AI chief explains why self-driving cars don’t need lidar</a></li>
<li><a href="https://blog.infolink.com.tw/2021/rediscover-pixel-dpi-ppi-and-pixel-density/">重新認識 Pixel、DPI / PPI 以及像素密度 | INFOLINK Blog</a></li>
<li><a href="https://www.junmajinlong.com/virtual/network/virtualbox_net/">理解VirtualBox网络</a> #misc</li>
<li><a href="https://cloud.tencent.com/developer/article/1618923">B站高可用用架构实践 - 云+社区 - 腾讯云</a> #infra</li>
<li><a href="http://play.elevatorsaga.com/documentation.html#docs">Elevator Saga - help and API documentation</a> 一个写电梯逻辑的游戏 #game</li>
<li><a href="https://segmentfault.com/a/1190000003063859">Linux IO模式及 select、poll、epoll详解</a> #backend#kernel</li>
<li><a href="https://mgdm.net/weblog/systemd/">Avoiding complexity with systemd</a> 用 systemd 自启服务 #linux</li>
<li><a href="https://github.com/Nuitka/Nuitka">Nuitka/Nuitka</a> a Python compiler written in Python #tools</li>
<li><a href="https://jvns.ca/blog/2019/10/03/sql-queries-don-t-start-with-select/">SQL queries don’t start with SELECT</a> #db</li>
<li><a href="https://fragile-credences.github.io/scihub-proxy/">How to circumvent Sci-Hub ISP block</a> using manually crafted PAC files</li>
<li><a href="https://programming.guide/java/formatting-byte-size-to-human-readable-format.html">Java: Formatting byte size to human readable format | Programming.Guide</a></li>
<li><a href="https://programming.guide/worlds-most-copied-so-snippet.html">The most copied StackOverflow snippet of all time is flawed! | Programming.Guide</a></li>
<li><a href="https://phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/">Hosting SQLite databases on Github Pages - (or any static file hoster) - phiresky’s blog</a> #frontend</li>
<li><a href="https://computationstructures.org/index.html">M.I.T. 6.004 Computation Structures</a> #course</li>
<li><a href="https://lodev.org/cgtutor/filtering.html">Image Filtering - Lode’s Computer Graphics Tutorial</a> 卷积里用的 filter 是如何构造的 #dl</li>
<li><a href="https://exploringjs.com/deep-js/index.html">Deep JavaScript: Theory and techniques</a> #books</li>
<li><a href="https://cjting.me/2021/06/10/hot-reload-c/">热重载 C - CJ Ting’s Blog</a> #c#hack</li>
<li><a href="https://github.com/sorenisanerd/gotty">sorenisanerd/gotty</a> Share your terminal as a web application #tools</li>
<li><a href="https://github.com/cs01/termpair">cs01/termpair</a> View and control terminals from your browser with end-to-end encryption 🔒 #tools</li>
<li><a href="https://francoisbest.com/posts/2021/hashvatars">Representing SHA-256 Hashes As Avatars</a> #visual</li>
<li><a href="https://cemulate.github.io/polyomino-solver/">Polyomino Solver</a> Solves the calendar puzzle #tools</li>
<li><a href="https://alphacephei.com/vosk/">VOSK Offline Speech Recognition API</a> #api</li>
<li><a href="https://blog.stackblitz.com/posts/introducing-webcontainers/">Introducing WebContainers: Run Node.js natively in your browser</a> #framework#frontend</li>
<li><a href="https://ruby-china.org/topics/14005">Web 中文字体应用指南 · Ruby China</a> #frontend</li>
<li><a href="https://zhuanlan.zhihu.com/p/39022144">使用正则表达式匹配 3 的倍数</a> #regex</li>
<li><a href="https://software.rajivprab.com/2021/04/26/experiences-working-with-an-outsourced-dev-shop/">Experiences working with an Outsourced Dev Shop</a></li>
<li><a href="https://www.grouparoo.com/blog/varchar-191">Why do database columns have a character length of 191?</a> #db#backend</li>
<li><a href="https://cyb.org.uk/2021/05/03/bash-productivity.html">Be more productive with use of your BASH history · cyb.org.uk</a> #cli</li>
<li><a href="https://compose-web.ui.pages.jetbrains.team/">Compose for Web UI Framework | JetBrains: Developer Tools for Professionals and Teams</a> #web#framework</li>
<li><a href="https://compose-web.ui.pages.jetbrains.team/">Compose for Web UI Framework | JetBrains: Developer Tools for Professionals and Teams</a> #web</li>
<li><a href="https://www.narakeet.com/docs/script/">narakeet - From Markdown to Video</a> #video#tools</li>
<li><a href="https://github.com/you-dont-need/You-Dont-Need-GUI">you-dont-need/You-Dont-Need-GUI</a> #cli</li>
<li><a href="https://github.com/arogozhnikov/einops">arogozhnikov/einops</a> 魔改 tensor 操作库 #ml#tensor</li>
<li><a href="http://icyfenix.cn/">凤凰架构：构筑可靠的大型分布式系统 | 凤凰架构</a> 一本讲分布式的开源书籍 #books#backend#distributed</li>
<li><a href="https://web.dev/learn/css/">Learn CSS</a> Google 的 CSS 教程 #css#frontend</li>
<li><a href="http://magician-io.com/">Magician</a> 异步非阻塞的网络协议解析包 #tools#network#java</li>
</ul>
<h1 id="about"><a class="markdownIt-Anchor" href="#about"></a> About</h1>
<ul>
<li>This file is auto-generated by <a href="https://github.com/osmoscraft/osmosmemo">osmos::memo</a>.</li>
<li>New content will appear on top when you click “save” button in the tool.</li>
<li>To search use <kbd>Ctrl</kbd> + <kbd>F</kbd>, or <kbd>Command</kbd> + <kbd>F</kbd> on Mac.</li>
</ul>
]]></content>
      <categories>
        <category>资料</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title>各种教程记录</title>
    <url>/2022/12/05/%E5%90%84%E7%A7%8D%E6%95%99%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录一下在网络上收集的各种教程：</p>
<span id="more"></span>
<ol>
<li><a href="https://mirror.xyz/boxchen.eth/9O9CSqyKDj4BKUIil7NC1Sa1LJM-3hsPqaeW_QjfFBc">注册ChatGPT全攻略 — BoxChen</a></li>
<li><a href="https://www.ericzhang.me/projects/spotify-ad-blocker-ezblocker/">EZBlocker – Spotify Ad Blocker / Eric Zhang [Xeroday]</a>：屏蔽Windows端Spotify上的广告</li>
<li><a href="https://greatdk.com/1908.html">我用我的微信聊天记录和 280 篇博客文章，做了我自己的数字克隆AI - 王登科-DK博客</a>：做一个自己的数字克隆</li>
<li><a href="https://diygod.me/software-update">我得了软件更新强迫症 - DIYgod</a>：各平台软件更新</li>
<li><a href="https://www.youtube.com/watch?v=mc6XrQy63D0&amp;ab_channel=IT%E6%96%B0%E6%89%8B%E6%9D%91">NEW BING 报错处理方法Sorry, looks like your network settings are preventing access to this feature.的处理办法 - YouTube</a></li>
<li><a href="https://sspai.com/post/79230">用 10 万条微信聊天记录和 280 篇博客文章，我克隆了一个数字版自己 - 少数派</a></li>
<li><a href="https://eibot3u32o.feishu.cn/docx/L46Pdp3fjouPUvxaNzPckKctno3">如何部署一个专属 AI 法律助手 - 飞书云文档</a></li>
<li><a href="https://blog.usmanity.com/comparing-adobe-firefly-dalle-2-and-openjourney/">Comparing Adobe Firefly, Dalle-2, OpenJourney, Stable Diffusion, and Midjourney</a>：各种AI绘图工具对比</li>
<li><a href="https://bewildcard.com/open-account-payment">WildCard</a>：开通美国银行卡，开卡费14刀；</li>
<li><a href="https://www.nobepay.com/app/card-open">https://www.nobepay.com/app/card-open</a>：开通美国银行卡，开发费1刀，一次至少充值500</li>
<li><a href="https://aigc.phodal.com/prelude.html">前言 - 构筑大语言模型应用：应用开发与架构设计</a></li>
<li><a href="https://blog.csdn.net/weixin_47166516/article/details/109362752">安卓app汉化教程_不懂网络的坤坤的博客-CSDN博客</a>：安卓app汉化教程</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>图像处理中知识点02</title>
    <url>/2022/09/22/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B902/</url>
    <content><![CDATA[<p>本文记录一下在进行图片处理过程中的一些知识点和bug：</p>
<span id="more"></span>
<p>1.使用Skimage处理图片时，出现以下报错：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220922091640.png" alt="" /><br />
其原因在于做图像转换时，如<code>image=io.imread(path)</code>，要求3通道的数据，但是读取的图片包含第4个通道alpha通道，粗暴的解决方法为<code>image = io.imread(path)[:, :, :3]</code>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/70895576/skimage-rgb2gray-giving-errors-the-input-array-must-have-size-3-along">Skimage rgb2gray giving errors, the input array must have size 3 along</a></li>
</ol>
</blockquote>
</br>
2.出现以下报错：
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220922092150.png" alt="" /><br />
其原因在于索引只能是整数，<code>:</code>等。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/34952651/only-integers-slices-ellipsis-numpy-newaxis-none-and-intege">only integers, slices (<code>:</code>), ellipsis (<code>...</code>), numpy.newaxis (<code>None</code>) and integer or boolean arrays are valid indices</a></li>
</ol>
</blockquote>
</br>
<p>3.SuperPixel超像素分割SLIC算法实现</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zywvvd.com/notes/study/image-processing/super-pixel/super-pixel/#">SuperPixel 超像素分割 SLIC 算法</a></li>
<li><a href="https://github.com/laixintao/slic-python-implementation">slic-python-implementation</a></li>
<li>
<h1 id="slic算法分割超像素原理及python实现"><a class="markdownIt-Anchor" href="#slic算法分割超像素原理及python实现"></a> <a href="https://www.kawabangga.com/posts/1923" title="Permalink to SLIC算法分割超像素原理及Python实现">SLIC算法分割超像素原理及Python实现</a></h1>
</li>
<li><a href="https://github.com/jayrambhia/superpixels-SLIC">superpixels-SLIC</a></li>
</ol>
</blockquote>
</br>
4.Moduel 'cv2' has no attribute 'ximgproc'。其原因为安装了多个opencv版本如同时安装了opencv-python和opencv-contrib-python或者只安装了opencv-python。解决方案为卸载已经安装的opencv包，只安装opencv-contrib-python，后者相比opencv-python拥有更完整的功能：
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip uninstall opencv-python</span><br><span class="line">pip install opencv-contrib-python</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/57427233/module-cv2-cv2-has-no-attribute-ximgproc">Module ‘cv2.cv2’ has no attribute ‘ximgproc’</a></li>
</ol>
</blockquote>
</br>
5.`cv2.grabcut`：该算法为经典传统算法GrabCut的实现，其利用图像中的纹理（颜色）信息和边界（反差）信息，只需要少量的用户交互操作即可得到较好的分割结果。
该函数的完整调用形式为，下面对各参数进行说明：
`cv.grabCut(img, mask, rect, bgdModel, fgdModel, iterCount[, mode]) ->mask, bgdModel, fgdModel`
- `img`：输入的8-bit 3-channel图像
- `mask`：input/output的8-bit单通道mask，当模式设为`GC_INIT_WITH_RECT`时会被函数初始化，其设置有多个选项[GrabCutClasses](https://docs.opencv.org/4.x/d7/d1b/group__imgproc__misc.html#gad43d3e4208d3cf025d8304156b02ba38 "class of the pixel in GrabCut algorithm")
- `rect`：包含分割物体的ROI (Region Of Interest)。ROI之外的像素被标记为显著的背景，只在`mode=GC_INIT_WITH_RECT`时使用。
- `bgdModel`：background model的临时数组，当你处理同一张图片时不要更改它
- `fgdModel`：foreground modele的临时数组，当你处理同一张图片时不要更改它
- `iterCount`：在返回结果之前，算法迭代的次数。注意结果可以通过`mode=GC_INIT_WITH_MASK`或者`mode=GC_EVAL` refine。
- `mode`：选项[GrabCutClasses](https://docs.opencv.org/4.x/d7/d1b/group__imgproc__misc.html#gad43d3e4208d3cf025d8304156b02ba38 "class of the pixel in GrabCut algorithm")。
下面是依据参考资料8对grabcub算法的调用：
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;opencv2\highgui\highgui.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;opencv2\imgproc\imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2\opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//grabcut算法</span></span><br><span class="line"><span class="type">bool</span> setMouse = <span class="literal">false</span>;    <span class="comment">//判断鼠标左键的状态（up / down）</span></span><br><span class="line"><span class="type">bool</span> init;</span><br><span class="line">Point pt;</span><br><span class="line">Rect rect;</span><br><span class="line">Mat srcImg, mask, bgModel, fgModel;</span><br><span class="line"><span class="type">int</span> numRun = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">onMouse</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>, <span class="type">void</span>*)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">runGrabCut</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showImage</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	srcImg = <span class="built_in">imread</span>(<span class="string">&quot;D:\\Desktop\\image\\123.png&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (srcImg.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;could not load image...\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">imshow</span>(<span class="string">&quot;源图像&quot;</span>, srcImg);</span><br><span class="line"></span><br><span class="line">	mask.<span class="built_in">create</span>(srcImg.<span class="built_in">size</span>(), CV_8U);</span><br><span class="line">	<span class="built_in">setMouseCallback</span>(<span class="string">&quot;源图像&quot;</span>, onMouse, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">char</span> c = (<span class="type">char</span>)<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span>) &#123;<span class="comment">//选中矩形框后，按空格键执行grabcut分割</span></span><br><span class="line">			<span class="built_in">runGrabCut</span>();</span><br><span class="line">			numRun++;</span><br><span class="line">			<span class="built_in">showImage</span>();</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;current iteative times : %d\n&quot;</span>, numRun);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> ((<span class="type">int</span>)c == <span class="number">27</span>) &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showImage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Mat result, binmask;</span><br><span class="line">	binmask = mask &amp; <span class="number">1</span>;				<span class="comment">//进一步掩膜</span></span><br><span class="line">	<span class="keyword">if</span> (init)						<span class="comment">//进一步抠出无效区域。鼠标按下，init变为false</span></span><br><span class="line">	&#123;</span><br><span class="line">		srcImg.<span class="built_in">copyTo</span>(result, binmask);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		result = srcImg.<span class="built_in">clone</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">rectangle</span>(result, rect, <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>, <span class="number">8</span>);</span><br><span class="line">	<span class="built_in">imshow</span>(<span class="string">&quot;源图像&quot;</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">onMouse</span><span class="params">(<span class="type">int</span> events, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> flag, <span class="type">void</span>*)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (x &lt; <span class="number">0</span> || y &lt; <span class="number">0</span> || x &gt; srcImg.cols || y &gt; srcImg.rows)	<span class="comment">//无效区域</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (events == EVENT_LBUTTONDOWN)</span><br><span class="line">	&#123;</span><br><span class="line">		setMouse = <span class="literal">true</span>;</span><br><span class="line">		pt.x = x;</span><br><span class="line">		pt.y = y;</span><br><span class="line">		init = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (events == EVENT_MOUSEMOVE)<span class="comment">//鼠标只要动，就执行一次</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (setMouse == <span class="literal">true</span>)			<span class="comment">//鼠标左键按住，滑动</span></span><br><span class="line">		&#123;</span><br><span class="line">			Point pt1;</span><br><span class="line">			pt1.x = x;</span><br><span class="line">			pt1.y = y;</span><br><span class="line">			rect = <span class="built_in">Rect</span>(pt, pt1);<span class="comment">//定义矩形区域</span></span><br><span class="line">			<span class="built_in">showImage</span>();</span><br><span class="line">			mask.<span class="built_in">setTo</span>(Scalar::<span class="built_in">all</span>(GC_BGD));<span class="comment">//背景</span></span><br><span class="line">			<span class="built_in">mask</span>(rect).<span class="built_in">setTo</span>(<span class="built_in">Scalar</span>(GC_PR_FGD));<span class="comment">//前景			    //对rect内部设置为可能的前景，外部设置为背景</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (events == EVENT_LBUTTONUP)</span><br><span class="line">		setMouse = <span class="literal">false</span>;	        	<span class="comment">//鼠标左键抬起</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">runGrabCut</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (init)<span class="comment">//鼠标按下，init变为false</span></span><br><span class="line">		<span class="built_in">grabCut</span>(srcImg, mask, rect, bgModel, fgModel, <span class="number">1</span>);<span class="comment">//第二次迭代，用mask初始化grabcut</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">grabCut</span>(srcImg, mask, rect, bgModel, fgModel, <span class="number">1</span>, GC_INIT_WITH_RECT);<span class="comment">//用矩形窗初始化GrabCut</span></span><br><span class="line">		init = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [OpenCV——Grabcut算法_DDsoup的博客-CSDN博客_grabcut算法](https://blog.csdn.net/m0_61897853/article/details/123458465)
> 2. [GrabCut - Wikipedia](https://en.wikipedia.org/wiki/GrabCut)
> 3. [OpenCV: Image Segmentation](https://docs.opencv.org/4.x/d3/d47/group__imgproc__segmentation.html#ga909c1dda50efcbeaa3ce126be862b37f)
> 4. [Opencv 使用Rect选取与设置窗口ROI_yhl_leo的博客-CSDN博客](https://blog.csdn.net/yhl_leo/article/details/50593825)
> 5. [opencv-rectangle矩形 - 天子骄龙 - 博客园](https://www.cnblogs.com/liming19680104/p/15523295.html)
> 6. [Site Unreachable](https://blog.csdn.net/zouxy09/article/details/8534954)
> 7. [图像分割之（四）OpenCV的GrabCut函数使用和源码解读_无敌三角猫的博客-CSDN博客_grabcut函数](https://blog.csdn.net/fightingforcv/article/details/78400982)
> 8. [OpenCV3学习（7.3）——图像分割之三（GrabCut算法）_菜鸟知识搬运工的博客-CSDN博客_grabcut](https://blog.csdn.net/qq_30815237/article/details/86763443)
> 9. [c++ - GrabCut - bgdModel & fgdModel empty - Assertion error - Stack Overflow](https://stackoverflow.com/questions/7546083/grabcut-bgdmodel-fgdmodel-empty-assertion-error)
> 10. [ios - Can't seem to use 'GC_INIT_WITH_MASK' on OpenCV GrabCut - Stack Overflow](https://stackoverflow.com/questions/29322413/cant-seem-to-use-gc-init-with-mask-on-opencv-grabcut)
</br>
6.Image Matting(图像抠图)任务介绍及其相关操作。
> 参考资料：
> 1. [目前抠图（Image Matting）的主流算法有哪些？ - 知乎](https://www.zhihu.com/question/68146993/answer/1914887189)
> 2. [Image Matting](https://xinyangdut.github.io/matting/index.html)
> 3. [c++ - OpenCV : Using a Trimap image - Stack Overflow](https://stackoverflow.com/questions/41777654/opencv-using-a-trimap-image)
> 4. [Smart_Scribbles](https://qiaoyu2015.github.io/Smart_Scribbles/#)
</br>
7.在Python中捕捉`OpenCV Error`：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># do a thing</span></span><br><span class="line"><span class="keyword">except</span> (cv.error, OpenCV Error):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Can&#x27;t do the thing&quot;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [How to catch "OpenCV Error" in Python - Stack Overflow](https://stackoverflow.com/questions/8873657/how-to-catch-opencv-error-in-python)
</br>
8.膨胀腐蚀：
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 膨胀</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dilate_k</span>(<span class="params">img, k=<span class="number">20</span>, <span class="built_in">iter</span> = <span class="number">2</span></span>):</span><br><span class="line">    kernel = np.ones((k,k))</span><br><span class="line">    result = cv2.dilate(img, kernel, <span class="built_in">iter</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="comment"># 腐蚀</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_erosion</span>(<span class="params">img, ksize=<span class="number">1</span></span>):</span><br><span class="line">    kernel = np.ones((ksize, ksize), dtype=np.uint8)</span><br><span class="line">    result = cv2.erode(img, kernel, iterations=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_edge</span>(<span class="params">img, erosion</span>):</span><br><span class="line">    h,w = img.shape[:<span class="number">2</span>]</span><br><span class="line">    result = np.zeros((h,w), dtype=np.uint8)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">            <span class="keyword">if</span> img[i][j]&gt;<span class="number">0</span> <span class="keyword">and</span> erosion[i][j]==<span class="number">0</span>:</span><br><span class="line">                result[i][j]=<span class="number">255</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>
> 参考资料：
> 1. [OpenCV 图像处理之膨胀与腐蚀 - 知乎](https://zhuanlan.zhihu.com/p/110330329)
</br>
9.使用`Pillow`库处理图像时出现Warning：`Use Transpose.FLIP_LEFT_RIGHT instead. Image.FLIP_LEFT_RIGHT)`
解决方案：使用`Image.Transpose.FLIP_LEFT_RIGHT`替换`Image.FLIP_LEFT_RIGHT`。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/71899396/how-to-use-python-pillows-transpose-flip-top-bottom">How to use Python Pillow’s Transpose.FLIP_TOP_BOTTOM? - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>OpenCV</tag>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>图像处理中知识点01</title>
    <url>/2022/06/02/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%AD%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下在实现 <a href="https://link.springer.com/article/10.1007/s11042-016-3392-4">DDRQM</a> 过程中的一些 OpenCV 框架和 python 相关知识点。</p>
<span id="more"></span>
<p>1.<code>cv2.filter2D()</code>：该函数表示在一张图像上应用相应的卷积核，完整的函数调用形式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.filter2D(src, ddepth, kernel[, dst[, anchor[, delta[, borderType]]]]) -&gt; dst</span><br></pre></td></tr></table></figure>
<p>该函数将任意的 linear filter 应用到一张图像上。当 filter 的部分孔径落在图像之外时，函数会根据 border 类型进行插值。该函数实际上计算的是相关（correlation），而不是卷积（convolution）。</p>
<p>例如，下面代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">retval = cv2.getGaborKernel(ksize=(<span class="number">111</span>,<span class="number">111</span>), sigma=<span class="number">10</span>, theta=<span class="number">60</span>, lambd=<span class="number">10</span>, gamma=<span class="number">1.2</span>)</span><br><span class="line">image1 = cv2.imread(<span class="string">&#x27;src.jpg&#x27;</span>)</span><br><span class="line">result = cv2.filter2D(image1,-<span class="number">1</span>,retval)</span><br></pre></td></tr></table></figure>
<p>表示将对应的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>b</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Gabor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 滤波器应用在图像<code>src.jpg</code>上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=cv2.getGaborKernel((40,40), 1.69, 0, 3, 0.5)</span><br><span class="line">b=Gabor_filter((40,40), 1.69, 0, 3, 0.5)</span><br></pre></td></tr></table></figure>
</br>
<p>2.<code>cv2.getGaborKernel()</code>：该函数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>b</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Gabor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 滤波器函数，其返回值为一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>b</mi><mi>o</mi><mi>r</mi><mi>f</mi><mi>i</mi><mi>l</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Gabor filter</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，具体形式为一个二维数组，完整的函数调用形式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.getGaborKernel(ksize, sigma, theta, lambd, gamma[, psi[, ktype]]) -&gt; retval</span><br></pre></td></tr></table></figure>
</br>
<p>3.代码为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result[x][y] = <span class="built_in">abs</span>(depth_img[x][y] - <span class="number">0.5</span>*(depth_img[x1][y1]+depth_img[x2][y2]))</span><br></pre></td></tr></table></figure>
<p>报错信息：<code>RuntimeWarning: overflow encountered in ubyte_scalars</code>。</p>
<p>分析：可能是将两个<code>unit8</code>类型的值相加并将其存入一个<code>unit8</code>，导致数值溢出</p>
<p>解决方案：将<code>unit8</code>类型数值转换为<code>int</code>类型。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result[x][y] = <span class="built_in">abs</span>(<span class="built_in">int</span>(depth_img[x][y]) - <span class="number">0.5</span>*(<span class="built_in">int</span>(depth_img[x1][y1])+<span class="built_in">int</span>(depth_img[x2][y2])))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li>
<p><a href="https://stackoverflow.com/questions/9384435/runtimewarning-overflow-encountered-in-ubyte-scalars">RuntimeWarning: overflow encountered in ubyte_scalars</a></p>
</li>
<li>
<p><a href="https://stackoverflow.com/questions/59531334/why-i-am-getting-runtimewarning-overflow-encountered-in-ubyte-scalars-error-i">Why I am getting “RuntimeWarning: overflow encountered in ubyte_scalars error” in python?</a></p>
</li>
</ol>
</blockquote>
</br>
<p>4.以下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.imread(path)</span><br><span class="line">height, width, channels = img.shape</span><br></pre></td></tr></table></figure>
<p>表示从路径<code>path</code>中读取图像文件并存入<code>img</code>对象中，通过<code>type(img)</code>可知该对象类型为<code>&lt;class 'numpy.ndarray'&gt;</code>。<code>img.shape</code>返回的是一个三元元组，其值分别对应图像的<code>height</code>、<code>width</code>和<code>channels</code>，即图像形状并不是我们熟悉的<code>width * height * channels</code>的形式</p>
<p>可以通过以下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.transpose(img)</span><br></pre></td></tr></table></figure>
<p>将<code>img</code>转置为<code>width * height * channels</code>形状，通过我们熟悉的方式访问。</p>
<p>PS：<code>img</code>中<code>channels</code>顺序为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>G</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">B G R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/55636318/opencv-showing-wrong-width-and-height-of-image">Opencv showing wrong width and height of image</a></li>
<li><a href="http://www.juzicode.com/opencv-python-resize-transpose-flip/">OpenCV-Python教程：几何空间变换~缩放、转置、翻转(resize,transpose,flip)</a></li>
<li><a href="https://docs.opencv.org/4.x/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56">Image file reading and writing</a></li>
</ol>
</blockquote>
</br>
<p>5.<code>PILLOW</code> vs <code>OpenCV</code>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取和加载图片</span></span><br><span class="line"><span class="comment"># PILLOW</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;NLPR1.jpg&#x27;</span>) <span class="comment"># 打开图片</span></span><br><span class="line">img.size <span class="comment"># 获取图片尺寸 width * height</span></span><br><span class="line">img_rgb = img.load() <span class="comment"># 分配内存，并将图像像素值添加到img_rgb对象</span></span><br><span class="line">img_rgb[width, height] <span class="comment"># 通过width/height访问像素值，返回值为RGB模式</span></span><br><span class="line"><span class="comment"># OpenCV</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR1.jpg&#x27;</span>) <span class="comment"># 打开并将图像像素值添加到img对象</span></span><br><span class="line">img.shape <span class="comment"># 获取图片尺寸 height * width * channels</span></span><br><span class="line">img[height][width] <span class="comment">#通过height/width访问像素值，返回值为BGR模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取和转换为灰度图</span></span><br><span class="line"><span class="comment"># PILLOW</span></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;NLPR1.jpg&#x27;</span>) <span class="comment"># 打开图片</span></span><br><span class="line">img_gray = img.convert(<span class="string">&#x27;L&#x27;</span>) <span class="comment"># 转换为灰度图</span></span><br><span class="line">pixels_gray = img_gray.load() <span class="comment"># 分配内存，并将图像灰度值添加到img_gray对象</span></span><br><span class="line"><span class="comment"># OpenCV</span></span><br><span class="line"><span class="comment"># 直接读取灰度图</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR1.jpg&#x27;</span>, <span class="number">0</span>) <span class="comment"># 将图像转换为灰度图后读取</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR1.jpg&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># 先读取彩色图，再转化为灰度图</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR.jpg&#x27;</span>)</span><br><span class="line">img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) <span class="comment"># 将BGR模式的彩色图像转换为灰度图</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pillow.readthedocs.io/en/stable/reference/Image.html?highlight=load#PIL.Image.Image.load">Image.load()</a></li>
<li><a href="https://blog.csdn.net/sinat_29957455/article/details/84845016">python opencv将图片转为灰度图</a></li>
<li><a href="https://docs.opencv.org/4.x/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56">imread()</a></li>
<li><a href="https://docs.opencv.org/4.x/d8/d6a/group__imgcodecs__flags.html#ga61d9b0126a3e57d9277ac48327799c80">ImreadModes</a></li>
<li><a href="https://docs.opencv.org/4.x/d8/d01/group__imgproc__color__conversions.html#ga397ae87e1288a81d2363b61574eb8cab">cvtColor</a></li>
<li><a href="https://docs.opencv.org/4.x/d8/d01/group__imgproc__color__conversions.html#ga4e0972be5de079fed4e3a10e24ef5ef0">ColorConversionCodes</a></li>
</ol>
</blockquote>
</br>
<p>6.<code>cv2.imread()</code>详解：用于读取图像</p>
<p>该函数的完整调用形式为：<code>cv.imread(filename[, flags]) -&gt;retval</code>，<code>retval</code>为返回值。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li>
<p><code>filename</code>：要读取的图像路径，可以为绝对路径或相对路径</p>
</li>
<li>
<p><code>flags</code>：可以对图像采取的<code>ImreadModes</code>，常见的有<code>cv2.IMREAD_GRAYSCALE</code>、<code>cv.IMREAD_COLOR</code>。</p>
</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR1.jpg&#x27;</span>) <span class="comment"># 打开并将图像像素值添加到img对象</span></span><br></pre></td></tr></table></figure>
<p>PS：该函数对RGB图的默认读取顺序为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>G</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">BGR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56">imread()</a></li>
<li><a href="https://docs.opencv.org/4.x/d8/d6a/group__imgcodecs__flags.html#ga61d9b0126a3e57d9277ac48327799c80">ImreadModes</a></li>
</ol>
</blockquote>
</br>
<p>7.<code>cv2.cvtColor</code>详解：用于转换图像</p>
<p>该函数的完整调用形式为：<code>cv.cvtColor(src, code[, dst[, dstCn]]) -&gt;dst</code>，<code>dst</code>为返回值。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li>
<p><code>src</code>：输入图像</p>
</li>
<li>
<p><code>dst</code>：输出图像，和<code>src</code>有相同的<code>size</code>和<code>depth</code>，即相同的<code>height</code>、<code>width</code>和<code>channles</code></p>
</li>
<li>
<p><code>code</code>：颜色空间转换模式<code>ColorConversionCodes</code>，常见的有<code>cv2.BGR2GRAY</code>、<code>cv2.BGR2RGB</code>。</p>
</li>
<li>
<p><code>dstCn</code>：输出图像的<code>channels</code>数，该参数为0时，根据<code>src</code>和<code>dst</code>自动生成</p>
</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) <span class="comment"># 将BGR模式的彩色图像转换为灰度图</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d8/d01/group__imgproc__color__conversions.html#ga397ae87e1288a81d2363b61574eb8cab">cvtColor</a></li>
<li><a href="https://docs.opencv.org/4.x/d8/d01/group__imgproc__color__conversions.html#ga4e0972be5de079fed4e3a10e24ef5ef0">ColorConversionCodes</a></li>
</ol>
</blockquote>
</br>
<p>8.<code>cv2.resize()</code>详解：用于放缩图像</p>
<p>该函数的完整调用形式为：<code>cv.resize(src, dsize[, dst[, fx[, fy[, interpolation]]]]) -&gt;dst</code>，<code>dst</code>为返回值。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li>
<p><code>src</code>：输入图像</p>
</li>
<li>
<p><code>dst</code>：输出图像，当<code>dsize</code>不为0（Python中为<code>None</code>）时，其size与<code>dsize</code>相同；<code>dsize</code>为零时，则与<code>src.size()</code>即<code>fx</code>和<code>fy</code>相同。其类型与<code>src</code>相同。</p>
</li>
<li>
<p><code>dsize</code>：输出图像尺寸，当<code>dsize</code>为0或<code>None</code>时，计算方式为：</p>
<p><code>dsize = Size(round(fx*sr.cols), round(fy*src.rows))</code></p>
<p>要么<code>dsize</code>非零，要么<code>fx</code>和<code>fy</code>非零</p>
</li>
<li>
<p><code>fx</code>：沿着水平轴的放缩因子，当为0时，可以通过<code>(double)dsize.width/src.cols</code>计算</p>
</li>
<li>
<p><code>fy</code>：沿着垂直轴的放缩因子，当为0时，可以通过<code>(double)dsize.height/src.rows</code>计算</p>
</li>
<li>
<p><code>interpolation</code>：插值方法，常见的插值方法有<code>cv2.INTER_NEAREST</code>、<code>cv2.INTER_LINEAR</code>，默认为<code>cv2.INTER_LINEAR</code>。</p>
</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR1.jpg&#x27;</span>)</span><br><span class="line">img_resize = cv2.resize(img, (<span class="number">100</span>, <span class="number">100</span>)) <span class="comment"># 通过dsize 放缩</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">img_resize = cv2.resize(img, <span class="literal">None</span>, fx=<span class="number">0.5</span>, fy=<span class="number">0.3</span>) <span class="comment"># 通过 fx, fy 放缩</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/da/d54/group__imgproc__transform.html#ga47a974309e9102f5f08231edc7e7529d">resize()</a></li>
<li><a href="https://docs.opencv.org/4.x/da/d54/group__imgproc__transform.html#ga5bb5a1fea74ea38e1a5445ca803ff121">InterpolationFlags</a></li>
</ol>
</blockquote>
</br>
<p>9.<code>cv2.transpose()</code>详解：用于转置矩阵（数组）</p>
<p>该函数的完整调用形式为：<code>cv.transpose(src[, dst]) -&gt;dst</code>。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li><code>src</code>：输入数组</li>
<li><code>dst</code>：和<code>src</code>相同类型的输出数组</li>
</ul>
<p>其效果为：<code>dst(i, j) = src(j, i)</code>。调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.transpose(img)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d2/de8/group__core__array.html#ga46630ed6c0ea6254a35f447289bd7404">transpose()</a></li>
</ol>
</blockquote>
</br>
<p>10.<code>cv2.flip()</code>详解：用于翻转图像（数组）</p>
<p>该函数的完整调用形式为：<code>cv.flip(src, flipCode[, dst]) -&gt;dst</code>。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li><code>src</code>：输入数组</li>
<li><code>dst</code>：输出数组，和<code>src</code>具有相同类型和尺寸</li>
<li><code>flitCode</code>：用来指定怎样翻转数组，0表示沿x轴翻转，正值如1表示沿y轴翻转，-1表示同时沿x轴和y轴翻转，即绕(0,0)翻转</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.flip(img, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d2/de8/group__core__array.html#gaca7be533e3dac7feb70fc60635adf441">flip()</a></li>
</ol>
</blockquote>
</br>
<p>11.<code>cv2.imshow()</code>详解：用于显示图像</p>
<p>该函数的完整调用形式为：<code>cv.imshow(winname, mat) -&gt;None</code>。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li><code>winname</code>：窗口名，显示在窗口顶栏</li>
<li><code>mat</code>：要显示的矩阵</li>
</ul>
<p>调用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">&#x27;NLPR.jpg&#x27;</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d7/dfc/group__highgui.html#ga453d42fe4cb60e5723281a89973ee563">imshow()</a></li>
</ol>
</blockquote>
</br>
<p>12.<code>cv2.waitKey()</code>详解：用于指定窗口打开时间</p>
<p>该函数的完整调用形式为：<code>cv.waitKey([, delay]) -&gt;retval</code>。下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li><code>delay</code>：表示窗口的持续时间，为0时表示保持窗口打开，为其他正值时表示窗口持续的毫秒数</li>
</ul>
<p>调用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">1000</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d7/dfc/group__highgui.html#ga5628525ad33f52eab17feebcfba38bd7">waitKey()</a></li>
</ol>
</blockquote>
</br>
<p>13.<code>cv2.destroyAllWindows()</code>详解：用于关闭所有 HightGUI 窗口</p>
<p>该函数的完整调用形式为：<code>cv.destroyAllWindows() -&gt;None</code>。</p>
<p>调用实例：似乎不会关闭窗口</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&#x27;img&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">1000</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<p>PS：<code>cv2.destroyWindows(winname)</code>用于关闭指定窗口</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d7/dfc/group__highgui.html#ga6b7fc1c1a8960438156912027b38f481">destroyWindow()</a></li>
</ol>
</blockquote>
</br>
<p>14.python中获取当前目录路径和上级路径：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;***获取当前目录***&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(os.path.dirname(__file__))) <span class="comment"># __file__表示文件名</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;***获取上级目录***&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(os.path.dirname(os.path.dirname(__file__))))</span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(os.path.dirname(os.getcwd())))</span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(os.path.join(os.getcwd(), <span class="string">&quot;..&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;***获取上上级目录***&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(os.path.abspath(os.path.join(os.getcwd(), <span class="string">&quot;../..&quot;</span>)))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/leorx01/article/details/71141643">python获取当前目录路径和上级路径</a></li>
<li><a href="https://www.jianshu.com/p/bfa29141437e">Python获取当前文件路径</a></li>
</ol>
</blockquote>
</br>
<p>15.<code>cv2.GaussianBlur()</code>详解：用于给图片添加高斯模糊</p>
<p>该函数的完整调用形式为：</p>
<p><code>cv.GaussianBlur(src, ksize, sigmaX[, dst[, sigmaY[, borderType]]]) -&gt;dst</code></p>
<p>下面对各个参数做具体说明（说明针对C++函数版本）：</p>
<ul>
<li><code>src</code>：输入图像，图像有不同的通道，会被分别处理</li>
<li><code>dst</code>：输出图像，类型和尺寸与<code>src</code>相同</li>
<li><code>ksize</code>：高斯核尺寸。<code>ksize.width</code>和<code>ksize.height</code>必须为正奇数；否则<code>ksize</code>为0，此时其值通过<code>sigmaX</code>和<code>sigmaY</code>计算</li>
<li><code>sigmaX</code>：在X方向上的 Gaussian kernel standard deviation</li>
<li><code>sigmaY</code>：在Y方向上的 Gaussian kernel standard deviation。为0时设为与<code>sigmaX</code>相等。</li>
<li><code>borderType</code>：像素外插值方法，常见的有<code>cv.BORDER_CONSTANT</code>、<code>cv.BORDER_REPLICATE</code>，不支持<code>cv.BORDER_WRAP</code>。</li>
</ul>
<p>为了完全控制对图片的操作而不需要管OpenCV后续对语义的修改，建议对<code>ksize</code>/<code>sigmaX</code>/<code>sigmaY</code>都进行指定。</p>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">depth_img = cv2.imread(<span class="string">&#x27;NLPR2_depth.png&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment"># 给深度图添加高斯模糊</span></span><br><span class="line">depth_img = cv2.GaussianBlur(depth_img, (<span class="number">31</span>, <span class="number">31</span>), sigmaX=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d4/d86/group__imgproc__filter.html#gaabe8c836e97159a9193fb0b11ac52cf1">GaussianBlur()</a></li>
<li><a href="https://docs.opencv.org/4.x/d2/de8/group__core__array.html#ga209f2f4869e304c82d07739337eae7c5">BorderTypes</a></li>
<li><a href="https://zh.m.wikipedia.org/zh/%E9%AB%98%E6%96%AF%E6%A8%A1%E7%B3%8A">高斯模糊</a></li>
<li><a href="https://www.zhihu.com/question/54918332">高斯模糊的原理是什么，怎样在界面中实现</a></li>
</ol>
</blockquote>
</br>
<p>16.<code>cv2.threshold()</code>：用于对每个数组元素应用固定水平的阈值。该函数通常用于从一个灰度图中得到二值图像或者去除噪音（即过滤掉太小或太大的值）。该函数支持几种阈值，通过类型参数来设置。</p>
<p>与此同时，<code>THRESH_OTSU</code>和<code>THRESH_TRIANGLE</code>可以联合上述的值来使用。这种情况下，函数通过 Otsu 或者 Triangle 算法来计算最优的阈值。</p>
<p>PS：目前，Otsu 算法和 Triangle 算法只在 8-bit 的单通道图像上实现</p>
<p>该函数的完整调用形式为：</p>
<p><code>cv.threshold(src, thresh, maxval, type[, dst]) -&gt;retval, dst</code></p>
<ul>
<li><code>src</code>：输入数组（多通道，8-bit 或者 32-bit 浮点数）</li>
<li><code>dst</code>：和<code>src</code>同尺寸、类型和通道的输出数组</li>
<li><code>thresh</code>：阈值</li>
<li><code>maxval</code>：在使用<code>THRESH_BINARY</code>和<code>THRESH_BINARY_INV</code>参数时的最大值</li>
<li><code>type</code>：阈值类型，常见的有<code>THRESH_BINARY</code>和<code>THRESH_BINARY_INV</code>。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d7/d1b/group__imgproc__misc.html#gae8a4a146d1ca78c626a53577199e9c57">threshold()</a></li>
<li><a href="https://docs.opencv.org/4.x/d7/d1b/group__imgproc__misc.html#gaa9e58d2860d4afa658ef70a9b1115576">ThresholdTypes</a></li>
<li><a href="https://www.cnblogs.com/gezhuangzhuang/p/10295181.html">OpenCV-Python入门教程6-Otsu阈值法</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/395708037">OTSU算法（大津法）原理解析</a></li>
</ol>
</blockquote>
</br>
<p>17.<code>cv2.imwrite()</code>：用于存储图片到指定文件，图片类型取决于文件后缀名。其完整声明形式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.imwrite(filename, img[, params]) -&gt; retval</span><br></pre></td></tr></table></figure>
<ul>
<li><code>filename</code>：存储文件名</li>
<li><code>img</code>：图片数据对应的矩阵</li>
<li><code>params</code>：成对的指定存储格式的参数。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/4.x/d4/da8/group__imgcodecs.html#gabbc7ef1aa2edfaa87772f1202d67e0ce">imwrite()</a></li>
</ol>
</blockquote>
</br>
<p>18.<code>cv2.Canny()</code>：用于通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>n</mi><mi>n</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Canny</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>算法查找图像边缘。其完整声明形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cv::Canny</span>	<span class="params">(InputArray image,</span></span></span><br><span class="line"><span class="params"><span class="function">	OutputArray edges,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">double</span> threshold1,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">double</span> threshold2,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">int</span> apertureSize = <span class="number">3</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">bool</span> L2gradient = <span class="literal">false</span> </span></span></span><br><span class="line"><span class="params"><span class="function">	)</span></span></span><br></pre></td></tr></table></figure>
<p>该函数在输入的图像中查找边缘并通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>n</mi><mi>n</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Canny</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>算法在输出中标记出它们。在threshold1和threshold2中最小的值将用于edge linking，最大值将用于查找初始的更为强烈/显著的边缘。具体见 <a href="https://en.wikipedia.org/wiki/Canny_edge_detector">Canny edge detector</a></p>
<ul>
<li><code>image</code>：8-bit的输入图片</li>
<li><code>edges</code>：输出的 edge map，8-bit单通道，和<code>image</code>尺寸相同</li>
<li><code>threshold1</code>：滞后过程（hysteresis procedure）的第一个阈值</li>
<li><code>threshold2</code>：滞后过程的第二个阈值</li>
<li><code>apertureSize</code>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>o</mi><mi>b</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">Sobel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>操作子的孔径尺寸</li>
<li><code>L2gradient</code>：a flag。表明是否使用更准确的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord">2</span></span></span></span>范数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mrow><mo stretchy="false">(</mo><mi>d</mi><mi>I</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>d</mi><mi>I</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{(dI/dx)^2+(dI/dy)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span>计算图像梯度大小（<code>L2gradient=true</code>），还是使用默认的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord">1</span></span></span></span>范数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mrow><mi mathvariant="normal">∣</mi><mi>d</mi><mi>I</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>d</mi><mi>I</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>y</mi><mi mathvariant="normal">∣</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{|dI/dx|+|dI/dy|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">∣</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">∣</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,
158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067
c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,
175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71
c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,
-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26
s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span>（<code>L2gradient=false</code>）。</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;messi5.jpg&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">edges = cv2.Canny(img,<span class="number">100</span>,<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">121</span>),plt.imshow(img,cmap = <span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Original Image&#x27;</span>), plt.xticks([]), plt.yticks([])</span><br><span class="line">plt.subplot(<span class="number">122</span>),plt.imshow(edges,cmap = <span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Edge Image&#x27;</span>), plt.xticks([]), plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/3.1.0/dd/d1a/group__imgproc__feature.html#ga04723e007ed888ddf11d9ba04e2232de">Canny()</a></li>
<li><a href="https://docs.opencv.org/3.1.0/da/d22/tutorial_py_canny.html">Canny Edge Detection in OpenCV</a></li>
<li><a href="https://zh.m.wikipedia.org/zh-hans/Canny%E7%AE%97%E5%AD%90">Canny算子</a></li>
<li><a href="https://en.wikipedia.org/wiki/Canny_edge_detector">Canny edge detector</a></li>
<li><a href="https://zj-image-processing.readthedocs.io/zh_CN/latest/opencv/code/%5BCanny%5D%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/">Canny边缘检测</a></li>
<li><a href="https://yueyue200830.github.io/2020/04/04/Python%E5%AE%9E%E7%8E%B0Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/">Python实现Canny算子边缘检测</a></li>
</ol>
</br>
<p>19.<code>cv2.Sobel()</code>：使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>o</mi><mi>b</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">Sobel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>算子计算图像导数。其完整声明形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">cv::Sobel</span><span class="params">(InputArray src,</span></span></span><br><span class="line"><span class="params"><span class="function">	OutputArray dst,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">int</span> ddepth,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">int</span> dx,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">int</span> dy,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">int</span> ksize = <span class="number">3</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">double</span> scale = <span class="number">1</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">double</span> delta = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="type">int</span> borderType = BORDER_DEFAULT </span></span></span><br><span class="line"><span class="params"><span class="function">	)</span>	</span></span><br></pre></td></tr></table></figure>
<p>该函数通过用合适的核与函数做卷积来计算图像导数。通常，该函数通过<code>xorder=1, yorder=0, ksize=3</code>和<code>xorder=0, yorder=1, ksize=3</code>来计算图像的一阶<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>导数，分别对应：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi mathvariant="normal">和</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}
-1 &amp; 0 &amp; 1 \\
-2 &amp; 0 &amp; 2 \\
-1 &amp; 0 &amp; 1
\end{bmatrix} 和
\begin{bmatrix}
-1 &amp; -2 &amp; 1 \\
0 &amp; 0 &amp; 0 \\
1 &amp; 2 &amp; 1
\end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">和</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>这两个核。</p>
<ul>
<li><code>src</code>：输入图片</li>
<li><code>dst</code>：相同尺寸和通道数的输出图片</li>
<li><code>ddepth</code>：输出图片depth，见 <a href="https://docs.opencv.org/3.1.0/d4/d86/group__imgproc__filter.html#filter_depths">combinations</a>。（depth指图片的数据类型，例如对应图像梯度你想要16bit而不是8bit。当输入图片为8-bit类型时，将导致梯度裁剪（精度不够）</li>
<li><code>dx</code>：梯度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>的order</li>
<li><code>dy</code>：梯度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>的order</li>
<li><code>ksize</code>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>o</mi><mi>b</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">Sobel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>核尺寸，必须是1/3/5/7。</li>
<li><code>scale</code>：计算梯度值时的可选因子，默认不提供</li>
<li><code>delta</code>：在<code>dst</code>中存储结果之前默认加到结果上的可选delta值。</li>
<li><code>borderType</code>：像素插值类型。</li>
</ul>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.opencv.org/3.1.0/d4/d86/group__imgproc__filter.html#gacea54f142e81b6758cb6f375ce782c8d">Soble()</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%B4%A2%E8%B2%9D%E7%88%BE%E7%AE%97%E5%AD%90">Sobel算子</a></li>
<li><a href="https://www.cnblogs.com/zhuifeng-mayi/p/9563947.html">边缘检测</a></li>
</ol>
</br>
<p>20.<code>numpy.ndarray.flatten()</code>：返回一个坍缩成一维的数组的副本。</p>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.array([[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.flatten()</span><br><span class="line">array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.flatten(<span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">array([<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>])</span><br></pre></td></tr></table></figure>
<p>参考资料：</p>
<ol>
<li><a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.flatten.html">numpy.ndarray.flatten</a></li>
</ol>
</br>
<p>21.<code>math.atan(x)</code>vs<code>math.atan2(y, x)</code>：</p>
<p><code>atan</code>返回<code>x</code>对应的arc tangent，其结果所属区间为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-\pi/2, \pi/2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">/</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>；</p>
<p><code>atan2(y, x)</code>则返回<code>atan(y/x)</code>，其结果所属区间为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi>π</mi><mo separator="true">,</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-\pi, \pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span>。</p>
<p>举例来说，<code>atan(1)=atan2(1,1)</code><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">=\pi/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">/</span><span class="mord">4</span></span></span></span>；<code>atan2(-1,-1)</code><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mo>−</mo><mn>3</mn><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">=-3\pi/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">/</span><span class="mord">4</span></span></span></span>。</p>
<blockquote>
<p>参考文献：</p>
<ol>
<li><a href="https://docs.python.org/3.8/library/math.html?highlight=atan#math.atan">math.atan(x)</a></li>
</ol>
</blockquote>
</br>
<p>22.<code>numpy.zeros</code>：用于返回给定<code>shape</code>和<code>type</code>的用零填充的新的数组。其完整调用形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.zeros(shape, dtype=<span class="built_in">float</span>, order=<span class="string">&#x27;C&#x27;</span>, *, like=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>shape</code>：指定数组形状，如<code>(2, )</code>或<code>(2,3)</code>。</li>
<li><code>dtype</code>：指定填充的数据类型，如<code>dtype=int</code>，默认为<code>numpy.float64</code>。</li>
<li><code>order</code>：指定行优先还是列优先，默认为<code>order='C'</code>，行优先，<code>order='F'</code>表示列优先。</li>
<li><code>like</code>：引用对象，用于创建非Numpy arrays类型的数组，可以兼容其他类型的数组。</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.zeros(<span class="number">5</span>)</span><br><span class="line">array([ <span class="number">0.</span>,  <span class="number">0.</span>,  <span class="number">0.</span>,  <span class="number">0.</span>,  <span class="number">0.</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.zeros((<span class="number">5</span>,), dtype=<span class="built_in">int</span>)</span><br><span class="line">array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>PS：<code>numpy.ones</code>与之类似</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://numpy.org/doc/stable/reference/generated/numpy.zeros.html">numpy.zeros</a></li>
<li><a href="https://numpy.org/doc/stable/reference/generated/numpy.ones.html#numpy.ones">numpy.ones</a></li>
</ol>
</blockquote>
</br>
<p>23.在进行灰度图转为BGR图<code>img = cv2.cvtColor(gray, cv2.COLOR_GRAY2BGR)</code>之前，需要确保灰度图<code>gray</code>中数值的类型满足转换要求，否则会出现如下错误：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220626163339376.png" alt="image-20220626163339376" /></p>
<p>可以通过<code>gray = np.uint8(gray)</code>将灰度图转换为满足条件的格式：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/55179724/opencv-error-unsupported-depth-of-input-image">Opencv error -Unsupported depth of input image:</a></li>
</ol>
</blockquote>
</br>
<p>24.<code>numpy.sum</code>：计算给定<code>axis</code>上数组的元素之和。其完整调用形式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.<span class="built_in">sum</span>(a, axis=<span class="literal">None</span>, dtype=<span class="literal">None</span>, out=<span class="literal">None</span>, keepdims=&lt;no value&gt;, initial=&lt;no value&gt;, where=&lt;no value&gt;)[source]</span><br></pre></td></tr></table></figure>
<ul>
<li><code>a</code>：数组类型的对象</li>
<li><code>axis</code>：None、整数或整数类型的元组，可选。默认为None，将对所有元素求和。</li>
<li><code>dtype</code>：数据类型，可选。</li>
<li><code>out</code>：用于存放求和结果的输出数组，可选。</li>
<li>略</li>
</ul>
<p>调用实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.ones((<span class="number">10</span>,<span class="number">2</span>), dtype=<span class="built_in">int</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.<span class="built_in">sum</span>()</span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.<span class="built_in">sum</span>(axis=<span class="number">0</span>)</span><br><span class="line">array([<span class="number">10</span>, <span class="number">10</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.<span class="built_in">sum</span>(axis=<span class="number">0</span>)/<span class="number">6</span></span><br><span class="line">array([<span class="number">1.66666667</span>, <span class="number">1.66666667</span>])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://numpy.org/doc/stable/reference/generated/numpy.sum.html">numpy.sum</a></li>
</ol>
</blockquote>
</br>
<p>25.在算法实现中使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>F</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">DFS</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>时出现以下报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">RecursionError: maximum recursion depth exceeded <span class="keyword">in</span> comparison</span><br></pre></td></tr></table></figure>
<p>其出现原因为递归序列太长超过了系统设置，可以通过以下方式查看系统设置的最大递归深度：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(sys.getrecursionlimit())</span><br><span class="line"><span class="number">1000</span></span><br></pre></td></tr></table></figure>
<p>此时可以通过两种方式解决该问题：</p>
<ul>
<li>设置更大的系统递归深度：<code>sys.setrecursionlimit(1000*1000+10)</code></li>
<li>优化算法，采用更高效的方式实现。（推荐）</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/pltrdy/rouge/issues/19">Maximum recursion depth exceeded in comparison</a></li>
<li><a href="https://stackoverflow.com/questions/46659192/python-infinite-recursion-with-formula">Python infinite recursion with formula</a></li>
</ol>
</blockquote>
</br>
<p>26.当判断python字典中是否存在某个key时，<code>has_key()</code>方法在python中无法使用：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220629171740572.png" alt="image-20220629171740572" /></p>
<p>其原因在于<code>has_key()</code>方法在Python3中被去除。</p>
<p>通过<code>for i, j in img_depth_pair.keys:</code>遍历字典键时，会出现如下报错：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220629172819981.png" alt="image-20220629172819981" /></p>
<p>其原因在于<code>dict.keys</code>为不可迭代对象，此时应该通过以下方式遍历key和value：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> img_depth_pair:</span><br><span class="line">	<span class="built_in">print</span>(key)</span><br><span class="line">    <span class="built_in">print</span>(img_depth_pair[key])</span><br></pre></td></tr></table></figure>
<p>此外，值得补充的是，列表不能作为python字典的键，而元组可以，这一特性源自python语言的设计。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://cloud.tencent.com/developer/article/1893987">使用 for 循环遍历 Python 字典的 3 种方法 !</a></li>
<li><a href="https://stackoverflow.com/questions/33727149/dict-object-has-no-attribute-has-key">‘dict’ object has no attribute ‘has_key’</a></li>
<li><a href="https://stackoverflow.com/questions/7257588/why-cant-i-use-a-list-as-a-dict-key-in-python">Why can’t I use a list as a dict key in python?</a></li>
<li><a href="https://wiki.python.org/moin/DictionaryKeys">Why Lists Can’t Be Dictionary Keys</a></li>
</ol>
</blockquote>
</br>
<p>27.在OpenCV中进行图像处理时，经常会出现类似于下列的数据类型的问题：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220630103210112.png" alt="image-20220630103210112" /></p>
<p>下面是OpenCV中各种数据类型的参考列表：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220630103342159.png" alt="image-20220630103342159" /></p>
<p>其中C1/C2/C3/C4表示通道数。0~30表示编号。</p>
<p>下面是一个更为详细的列表：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220630103853172.png" alt="image-20220630103853172" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="http://ninghang.blogspot.com/2012/11/list-of-mat-type-in-opencv.html">LIST OF MAT TYPE IN OPENCV</a></li>
<li><a href="https://udayawijenayake.com/2021/06/07/opencv-data-types/">OpenCV “cv::Mat” Data Types</a></li>
</ol>
</blockquote>
</br>
<p>28.在使用numpy中的<code>dtype</code>（data type）参数时，常疑惑于参数类型的选择，此处对常用的<code>dtype</code>类型做一个梳理：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220630104939506.png" alt="image-20220630104939506" /></p>
<p>PS：上述列表并未展示所有的<code>dtype</code>类型，详见参考资料：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://numpy.org/doc/stable/user/basics.types.html">Array types and conversions between types</a></li>
<li><a href="https://numpy.org/doc/stable/reference/arrays.dtypes.html">Data type objects <code>dtype</code></a></li>
</ol>
</blockquote>
</br>
<p>29.在使用<code>cv2.imshow('img', img)</code>时，传入的<code>img</code>的<code>dtype</code>需要为<code>np.uint8</code>类型，否则展示的图片会出现奇怪的扭曲 (distortion)：（numpy类型转换）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">[...]</span><br><span class="line">info = np.iinfo(data.dtype) <span class="comment"># Get the information of the incoming image type</span></span><br><span class="line">data = data.astype(np.float64) / info.<span class="built_in">max</span> <span class="comment"># normalize the data to 0 - 1</span></span><br><span class="line">data = <span class="number">255</span> * data <span class="comment"># Now scale by 255</span></span><br><span class="line">img = data.astype(dtype=np.uint8)</span><br><span class="line">cv2.imshow(<span class="string">&quot;Window&quot;</span>, img)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/46689428/convert-np-array-of-type-float64-to-type-uint8-scaling-values">Convert np.array of type float64 to type uint8 scaling values</a></li>
</ol>
</blockquote>
</br>
<p>30.在使用以下代码进行图片展示时：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&#x27;edge&#x27;</span>, edge)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<p>可能出现如下错误：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220805231829547.png" alt="image-20220805231829547" /></p>
<p>此时可能是本地的OpenCV包出现了编译错误，可以通过重装解决：</p>
<ul>
<li>
<p><code>pip uninstall opencv-python</code></p>
</li>
<li>
<p><code>pip install opencv-python</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>OpenCV</tag>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>图像处理试题</title>
    <url>/2022/04/25/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<p>本文主要记录一下历年图像处理的考试题目及其答案。</p>
<span id="more"></span>
<h2 id="简答题与描述题"><a class="markdownIt-Anchor" href="#简答题与描述题"></a> 简答题与描述题</h2>
<ol>
<li>什么是量化？</li>
</ol>
<blockquote>
<p>将像素灰度转换成离散的的整数值的过程（对幅值进行数字化）叫量化，表示像素明暗程度的整数称为像素的灰度级。</p>
</blockquote>
<ol start="2">
<li>什么是图像变换？变换的目的是什么？</li>
</ol>
<blockquote>
<p>图像变换是指将图像转换到另一种空间处理，是图像处理和分析的数学基础。可分为可分离变换和统计变换。</p>
</blockquote>
<blockquote>
<p>图像变换的目的在于：</p>
<ol>
<li>使图像处理问题简化</li>
<li>有利于图像特征提取</li>
<li>有助于从概念上增强对图像信息的理解</li>
</ol>
</blockquote>
<ol start="3">
<li>简述什么使图像处理及其存在的原因</li>
</ol>
<blockquote>
<p>图像处理是研究图像的获取、传输、存储，变换、显示、理解和综合利用的一门崭新学科，是信号处理在图像领域上的一个应用。根据处理的图像类型可分为模拟图像处理和数字图像处理；根据抽象程度可分为侠义图像处理、图像分析和图像理解。</p>
</blockquote>
<blockquote>
<p>图像处理存在的意义在于，通过对图像进行分析、加工和处理，使其满足视觉、心理或其他要求</p>
</blockquote>
<ol start="4">
<li>何为图像采样？若一维函数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>，则其采样函数可为什么？</li>
</ol>
<blockquote>
<p>图像采样是指将空间上连续的图像变换成离散点，是对坐标值进行数字化</p>
</blockquote>
<blockquote>
<p>采样函数如下：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>k</mi><mi>Δ</mi><mi>T</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>k</mi><mi>Δ</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_k=\int_{-\infty}^{\infty}f(t)\delta(t-k \mathit{\Delta} T)dt=f(k \mathit{\Delta} T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathit">Δ</span></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathit">Δ</span></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></p>
<p>其中：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∞</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo>=</mo><mi>k</mi><mi>Δ</mi><mi>T</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mi mathvariant="normal">≠</mi><mi>k</mi><mi>Δ</mi><mi>T</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\delta(t)=
\begin{cases}
\infty, &amp; t=k\mathit{\Delta}T \\
0, &amp; t \neq k\mathit{\Delta}T
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∞</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathit">Δ</span></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathit">Δ</span></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>且有：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}\delta(t)dt=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
</blockquote>
<ol start="5">
<li>简述链码表示法，并将下图用链码表示</li>
</ol>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220425012438465.png" alt="image-20220425012438465" /></p>
<blockquote>
<p>链码表示法：是用曲线起始点的坐标和边界点方向代码来描述曲线或边界的方法，其由起点和一系列在基本方向上的单位矢量组成，编码中给出每个后续点相对其前继点的方向编码表示。</p>
<p>对二值图像的轮廓进行编码。二值图像<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>表示背景，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>表示物体。</p>
<p>算法：</p>
<ol>
<li>确定物体边界起始点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">IP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(x,y)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li>根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>M</mi><mi>L</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>L</mi><mi>o</mi><mi>o</mi><mi>k</mi><mtext> </mtext><mi>M</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext> </mtext><mi>L</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LML\space(Look \space Most \space Left)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">L</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mspace"> </span><span class="mord mathdefault">L</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>规则跟踪轮廓</li>
<li>给出移动方向码（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>m</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Freeman</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span>码，链码）</li>
</ol>
</blockquote>
<blockquote>
<p>使用八方法码，区域链码为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>0</mn><mn>2</mn></msup><msup><mn>2</mn><mn>2</mn></msup><msup><mn>3</mn><mn>2</mn></msup><msup><mn>1</mn><mn>1</mn></msup><msup><mn>0</mn><mn>1</mn></msup><msup><mn>7</mn><mn>2</mn></msup><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">0^22^23^21^10^17^20^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">7</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p>
</blockquote>
<ol start="6">
<li>Giving the definition of digital image (in English)</li>
</ol>
<blockquote>
<p>A digital image is an image composed of picture elements, also known as pixels, each with finite, discrete quantities of numeric representation for its intensity or gray level that is an output from its two-dimensional functions fed as input by its spatial coordinates denoted with x, y on the x-axis and y-axis, respectively. Depending on whether the image resolution is fixed, it may be of vector or raster type. By itself, the term “digital image” usually refers to raster images or bitmapped images (as opposed to vector images)</p>
</blockquote>
<h2 id="计算综合题"><a class="markdownIt-Anchor" href="#计算综合题"></a> 计算综合题</h2>
<ol>
<li>试证明拉普拉斯算子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo>=</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\nabla^2f = \frac{\partial^2f}{\partial x^2} + \frac{\partial^2f}{\partial y^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.415028em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.070028em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.551136em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.070028em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>的旋转不变性</li>
</ol>
<p>证明：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220508202032262.png" alt="image-20220508202032262" /></p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220508202048358.png" alt="image-20220508202048358" /></p>
<ol start="2">
<li>
<p>已知四值图像信源的概率分布为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>=</mo><mn>27</mn><mi mathvariant="normal">/</mi><mn>40</mn></mrow><annotation encoding="application/x-tex">P_1=27/40</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">/</span><span class="mord">4</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub><mo>=</mo><mn>9</mn><mi mathvariant="normal">/</mi><mn>40</mn></mrow><annotation encoding="application/x-tex">P_2=9/40</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">9</span><span class="mord">/</span><span class="mord">4</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub><mo>=</mo><mn>3</mn><mi mathvariant="normal">/</mi><mn>40</mn></mrow><annotation encoding="application/x-tex">P_3=3/40</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">/</span><span class="mord">4</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>40</mn></mrow><annotation encoding="application/x-tex">P_4=1/40</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">4</span><span class="mord">0</span></span></span></span>，试求：</p>
<p>1）此图像的熵</p>
<p>2）自然码的冗余度</p>
<p>3）对此图像进行 Huffman 编码</p>
</li>
</ol>
<p>解：</p>
<p>1）熵：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mn>4</mn></msubsup><msub><mi>P</mi><mi>k</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mi>k</mi></msub><mo>=</mo><mn>3</mn><mo>+</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>5</mn><mo>−</mo><mfrac><mn>51</mn><mn>20</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>3</mn><mo>=</mo><mn>1.28</mn></mrow><annotation encoding="application/x-tex">H(X)=-\sum_{k=1}^4P_klogP_k = 3+log_25 - \frac{51}{20}log_23 = 1.28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mord">8</span></span></span></span></p>
<p>2）自然码的冗余度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>η</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>L</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mn>1.28</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo>=</mo><mn>0.36</mn></mrow><annotation encoding="application/x-tex">\gamma = 1 - \eta = 1 - H(x)/L(X) = 1 - 1.28/2 = 0.36</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mord">8</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">6</span></span></span></span></p>
<p>3）对此图像进行 Huffman 编码：</p>
<table>
<thead>
<tr>
<th>概率</th>
<th>对应编码</th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>1</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>01</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>001</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>000</td>
</tr>
</tbody>
</table>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mn>4</mn></msubsup><msub><mi>P</mi><mi>k</mi></msub><mi>l</mi><mo>=</mo><mfrac><mn>27</mn><mn>40</mn></mfrac><mo>∗</mo><mn>1</mn><mo>+</mo><mfrac><mn>9</mn><mn>40</mn></mfrac><mo>∗</mo><mn>2</mn><mo>+</mo><mfrac><mn>3</mn><mn>40</mn></mfrac><mo>∗</mo><mn>3</mn><mo>+</mo><mfrac><mn>1</mn><mn>40</mn></mfrac><mo>∗</mo><mn>3</mn><mo>=</mo><mfrac><mn>57</mn><mn>40</mn></mfrac><mo>=</mo><mn>1.425</mn></mrow><annotation encoding="application/x-tex">H = \sum_{k=1}^4P_kl = \frac{27}{40} * 1+\frac{9}{40} * 2 + \frac{3}{40} * 3 + \frac{1}{40} * 3 = \frac{57}{40} = 1.425</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mord">5</span></span></span></span></p>
<ol start="3">
<li>在图像锐化中有两种算子，其中一种：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo>=</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\nabla^2f = \frac{\partial^2f}{\partial x^2} + \frac{\partial^2f}{\partial y^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.415028em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.070028em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.551136em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.070028em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>称为拉普拉斯算子。</li>
</ol>
<p>解：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220425025629574.png" alt="image-20220425025629574" /></p>
<p>其模板表示为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}
0 &amp; 1 &amp; 0 \\
1 &amp; -4 &amp; 1 \\
0 &amp; 1 &amp; 0
\end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>4.两个函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 的卷积为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">f(x)*g(x)=\int_{-\infty}^{\infty}f(a)g(x-a)\mathrm{d}a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">a</span></span></span></span>。现有：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>&lt;</mo><mo>=</mo><mi>x</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">其</mi><mi mathvariant="normal">他</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)=
\begin{cases}
1, &amp; {0 &lt;= x &lt;= 1} \\
0, &amp; {其他}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>&lt;</mo><mo>=</mo><mi>x</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">其</mi><mi mathvariant="normal">他</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">g(x)=
\begin{cases}
1/2, &amp; {0 &lt;= x &lt;= 1} \\
0, &amp; {其他}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)*g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></p>
<p>解：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mi>d</mi><mi>a</mi><mspace linebreak="newline"></mspace><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mi>d</mi><mi>a</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">令</mi><mi>x</mi><mo>−</mo><mi>a</mi><mo>=</mo><mi>u</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">则</mi><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mi>x</mi><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>g</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>u</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><msubsup><mo>∫</mo><mrow><mi>x</mi><mo>−</mo><mn>1</mn></mrow><mi>x</mi></msubsup><mi>g</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mi>d</mi><mi>u</mi><mspace linebreak="newline"></mspace><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mn>0</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>2</mn><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mn>1</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>x</mi><mo>&gt;</mo><mn>2</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)*g(x)=\int_{0}^{1}f(a)g(x-a)da \\
= \int_{0}^{1}g(x-a)da \\
令 x-a= u，则 \\
f(x)*g(x) = \int_{x}^{x-1}g(u)d(x-u) \\
=\int_{x-1}^{x}g(u)du \\
=  
\begin{cases}
0 &amp;, x&lt;0 \\
\frac{1}{2}x &amp;, 0\leq x \leq 1 \\
\frac{1}{2}(2-x) &amp;, 1&lt;x\leq 2 \\
0 &amp;, x&gt;2
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640080000000003em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640080000000003em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640080000000005em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.812900000000001em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500200000000003em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.89999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.20002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">x</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="5">
<li>一维连续函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 的傅里叶变换表示为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>2</mn><mi>π</mi><mi>i</mi><mi>x</mi><mo>∗</mo><mi>u</mi></mrow></msup><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">F(u) = \int_{-\infty}^{\infty}f(x)e^{-2\pi ix*u}dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight">u</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span>（其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>为频率空间，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>为图像空间）。试推到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>在空间有一位移时，频率空间的变换情况？</li>
</ol>
<p>解：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>u</mi><mi>x</mi></mrow></msup><mi>d</mi><mi>x</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">F(u)=\int_{-\infty}^{\infty}f(x)e^{-j2\pi ux}dx \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span></span></span></span></p>
<p>当在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>上施加一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的位移时：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><msup><mi>u</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>u</mi><mi>x</mi></mrow></msup><mi>d</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">令</mi><mi>y</mi><mo>=</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">，</mi><mi mathvariant="normal">则</mi><mi mathvariant="normal">有</mi><mspace linebreak="newline"></mspace><mi>F</mi><mo stretchy="false">(</mo><msup><mi>u</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>u</mi><mo stretchy="false">(</mo><mi>y</mi><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow></msup><mi>d</mi><mi>x</mi><mspace linebreak="newline"></mspace><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>u</mi><mi>y</mi></mrow></msup><mo>∗</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>u</mi><msub><mi>x</mi><mn>0</mn></msub></mrow></msup><mspace linebreak="newline"></mspace><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∗</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>u</mi><msub><mi>x</mi><mn>0</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">F(u&#x27;)=\int_{-\infty}^{\infty}f(x-x_0)e^{-j2 \pi ux}dx \\
令 y = x-x_0，则有\\
F(u&#x27;)=\int_{-\infty}^{\infty}f(y)e^{-j2 \pi u(y+x_0)}dx \\
= \int_{-\infty}^{\infty}f(y)e^{-j2\pi uy}*e^{-j2\pi ux_0} \\
= F(u)*e^{-j2\pi ux_0}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">有</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">u</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.874664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">u</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.874664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">u</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<ol start="6">
<li>已知一副亮度分辨率为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn><mi>b</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">8bit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span> 的黑白图像，从其亮度直方图的分布看是等概率的，请计算它的熵值。</li>
</ol>
<p>解：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mn>256</mn></msubsup><mfrac><mn>1</mn><mn>256</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>256</mn><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">H(x)=\sum_{k=1}^{256}\frac{1}{256}log_2256 = 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.299008em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span></p>
<h2 id="2016题目补充"><a class="markdownIt-Anchor" href="#2016题目补充"></a> 2016题目补充</h2>
<h3 id="填空"><a class="markdownIt-Anchor" href="#填空"></a> 填空</h3>
<ol>
<li>
<p>量化即是把取样后的值分成空间上离散的像素，每一像素灰度的所有值都有离散的整数值表示</p>
</li>
<li>
<p>图像变换的目的在于通过一种二位正交变换方法，从而使得图像处理问题简化；有利于图像特征提取；有助于从概念上增强对图像信息的理解</p>
</li>
<li>
<p>在图像增强处理中有一种方法，即对图像的灰度作线性变换，现有一图 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span>，现需要将其灰度范围变换至 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n,N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，其线性变换函数为：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo>+</mo><mfrac><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>m</mi></mrow><mrow><mi>M</mi><mo>−</mo><mi>m</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y(i,j)=n+\frac{X(i,y)-m}{M-m}(N-n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.413331em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p>
</li>
</ol>
<h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3>
<ol>
<li>略</li>
<li>简述直方图的概念，请给出将灰度图像转换为二值图像的方法</li>
</ol>
<p>解：</p>
<blockquote>
<p>灰度直方图反映的是一幅图像中各灰度级像素出现的频率。以灰度级为横坐标，纵坐标为灰度级的频率，绘制频率同灰度级的关系图就是灰度直方图。</p>
</blockquote>
<blockquote>
<p>二值化：一般指灰度二值化，是一种基于灰度直方图的图像分割算法，将图像中的像素分为两类，最终产生与公车二值化的图像。</p>
</blockquote>
<p>灰度图转换为二值图像有多种方法：</p>
<ul>
<li>
<p>固定阈值二值化：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>T</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>≥</mo><mi>T</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">g(x,y)=
\begin{cases}
0 &amp;, f(x,y)&lt;T \\
1 &amp;, f(x,y)\geq T
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>自适应阈值二值化：用一个二值化的值不能很好对图像进行分类，可以将图像划分为多个子图像（局域），对每个子图像单独设置一个二值化的值，分别做二值化处理，然后对子图像进行拼接。</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>T</mi><mi>S</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">OTSU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>算法：在灰度直方图的基础上用最小二乘法原理推导而来，核心思想是使类间方差最大。</p>
</li>
</ul>
<ol start="3">
<li>略</li>
<li>略</li>
</ol>
<h3 id="计算综合题-2"><a class="markdownIt-Anchor" href="#计算综合题-2"></a> 计算综合题</h3>
<ol>
<li>已知某图像（已离散化，数字化）的一扫描行状态如下：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2210001133</mn></mrow><annotation encoding="application/x-tex">2210001133</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">3</span><span class="mord">3</span></span></span></span>。请给出它的常规编码和哈夫曼编码，试比较编码效率</li>
</ol>
<p>解：</p>
<p>1）当使用常规码编码时， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2210001133</mn></mrow><annotation encoding="application/x-tex">2210001133</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">3</span><span class="mord">3</span></span></span></span> 总共 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0, 1, 2, 3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">}</span></span></span></span> 4 个符号，故用2位二进制位来代表：</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>二进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>00</td>
</tr>
<tr>
<td>1</td>
<td>01</td>
</tr>
<tr>
<td>2</td>
<td>10</td>
</tr>
<tr>
<td>3</td>
<td>11</td>
</tr>
</tbody>
</table>
<p>此时，编码位数为：10*2=20</p>
<p>2）当使用哈夫曼编码时，考虑各符号按顺序出现的次数</p>
<table>
<thead>
<tr>
<th>按序出现的符号</th>
<th>次数</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>0</td>
<td>3</td>
</tr>
<tr>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>按次数进行哈夫曼编码：</p>
<table>
<thead>
<tr>
<th>次数</th>
<th>出现该次数的符号数</th>
<th>哈夫曼编码</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
<td>10</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
<td>11</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>行程码为：100 0110 0011 010 110 ，共17位</p>
<p>压缩比为：17/20</p>
<ol start="2">
<li>
<p>略</p>
</li>
<li>
<p>略</p>
</li>
<li>
<p>略</p>
</li>
<li>
<p>试比较中值滤波与邻域平均法的异同，并举例说明</p>
</li>
</ol>
<blockquote>
<p>中值滤波是对一个滑动窗口内的诸像素灰度值进行排序，用中值代替窗口中心像素的原来灰度值，是一种非线性的图像平滑法</p>
</blockquote>
<p>例如，采用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">1*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>窗口进行中值滤波：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426120459634.png" alt="image-20220426120459634" /></p>
<blockquote>
<p>邻域平均法就是将当前像素邻域内各像素的灰度平均值作为其输出值的去噪方法</p>
</blockquote>
<p>例如，若有一幅<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N*N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的图像<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，若平滑图像为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，则有：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426120918271.png" alt="image-20220426120918271" /></p>
<p>二者比较：</p>
<p>中值滤波器是一种非线性空间滤波器，其对图像的响应以滤波器包围的图像区域中所包含的像素的排序为基础，然后取排序结果中的中值代替中心像素的值；</p>
<p>邻域平均法则是一种平滑线性滤波器，其输出是包含在滤波器模板邻域内的像素的简单平均值，这些滤波器有时也被称为均值滤波器。</p>
<ol start="6">
<li>略</li>
</ol>
<h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2>
<p>直方图的均衡化</p>
<blockquote>
<p>直方图均衡化是将原图像通过某种变换，得到一幅灰度直方图为均匀分布的新图像的方法</p>
</blockquote>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426121910112.png" alt="image-20220426121910112" /></p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426123220913.png" alt="image-20220426123220913" /></p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426123228233.png" alt="image-20220426123228233" /></p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426123234682.png" alt="image-20220426123234682" /></p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426123146818.png" alt="image-20220426123146818" /></p>
<p>对于离散值，其概率（直方图值）与求和来替代处理概率密度函数与积分：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426124030034.png" alt="image-20220426124030034" /></p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-08/image-20220426124045600.png" alt="image-20220426124045600" /></p>
]]></content>
      <categories>
        <category>考试</category>
      </categories>
      <tags>
        <tag>计算机图形图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>对开发人员有用的定律、理论、原则和模式</title>
    <url>/2022/05/09/%E5%AF%B9%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E6%9C%89%E7%94%A8%E7%9A%84%E5%AE%9A%E5%BE%8B%E3%80%81%E7%90%86%E8%AE%BA%E3%80%81%E5%8E%9F%E5%88%99%E5%92%8C%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<p>本文转载自 github 项目 <a href="https://github.com/nusr/hacker-laws-zh">hacker-laws的中文翻译</a>，放在博客上便于查看。</p>
<span id="more"></span>
<p><a href="https://github.com/dwmkerr/hacker-laws">hacker-laws</a> 的的中文翻译。</p>
<p>对开发人员有用的定律、理论、原则和模式。(Laws, Theories, Principles and Patterns that developers will find useful.)</p>
<p>为了方便阅读，维基百科增加了中文链接。英文链接表示 <a href="https://github.com/dwmkerr/hacker-laws">hacker-laws</a> 项目尚未完成的主题。</p>
<p>喜欢点 <strong>star</strong> 、关注点 <strong>watch</strong> 、贡献点 <strong>fork</strong> 。翻译错漏之处，欢迎指正！</p>
<ul>
<li><a href="#%E4%BB%8B%E7%BB%8D">介绍</a></li>
<li><a href="#%E5%AE%9A%E5%BE%8B">定律</a>
<ul>
<li><a href="#90-9-1-%E6%B3%95%E5%88%99-9091-principle-or-1-rule">90-9-1 法则 (90–9–1 Principle or 1% Rule)</a></li>
<li><a href="#%E9%98%BF%E5%A7%86%E8%BE%BE%E5%B0%94%E5%AE%9A%E5%BE%8B-amdahls-law">阿姆达尔定律 (Amdahl’s Law)</a></li>
<li><a href="#%E7%A0%B4%E7%AA%97%E6%95%88%E5%BA%94-the-broken-windows-theory">破窗效应 (The Broken Windows Theory)</a></li>
<li><a href="#%E5%B8%83%E9%B2%81%E5%85%8B%E6%96%AF%E6%B3%95%E5%88%99-brookss-law">布鲁克斯法则 (Brooks’s Law)</a></li>
<li><a href="#cap-%E5%AE%9A%E7%90%86-cap-theorem-or-brewers-theorem">CAP 定理 (CAP Theorem or Brewer’s Theorem)</a></li>
<li><a href="#%E5%BA%B7%E5%A8%81%E5%AE%9A%E5%BE%8B-conways-law">康威定律 (Conway’s Law)</a></li>
<li><a href="#%E5%9D%8E%E5%AE%81%E6%B1%89%E5%A7%86%E5%AE%9A%E5%BE%8B-cunninghams-law">坎宁汉姆定律 (Cunningham’s Law)</a></li>
<li><a href="#%E9%82%93%E5%B7%B4%E6%95%B0%E5%AD%97-dunbars-number">邓巴数字 (Dunbar’s Number)</a></li>
<li><a href="#%E9%82%93%E5%AE%81-%E5%85%8B%E9%B2%81%E6%A0%BC%E6%95%88%E5%BA%94-the-dunning-kruger-effect">邓宁-克鲁格效应 (The Dunning-Kruger Effect)</a></li>
<li><a href="#%E8%B4%B9%E8%8C%A8%E6%B3%95%E5%88%99-fittss-law">费茨法则 (Fitts’s Law)</a></li>
<li><a href="#%E7%9B%96%E5%B0%94%E5%AE%9A%E5%BE%8B-galls-law">盖尔定律 (Gall’s Law)</a></li>
<li><a href="#%E5%8F%A4%E5%BE%B7%E5%93%88%E7%89%B9%E5%AE%9A%E5%BE%8B-goodharts-law">古德哈特定律 (Goodhart’s Law)</a></li>
<li><a href="#%E6%B1%89%E9%9A%86%E7%9A%84%E5%89%83%E5%88%80-hanlons-razor">汉隆的剃刀 (Hanlon’s Razor)</a></li>
<li><a href="#%E5%B8%AD%E5%85%8B%E5%AE%9A%E5%BE%8B-hicks-law-or-hick-hyman-law">席克定律 (Hick’s Law or Hick-Hyman Law)</a></li>
<li><a href="#%E4%BE%AF%E4%B8%96%E8%BE%BE%E5%AE%9A%E5%BE%8B-hofstadters-law">侯世达定律 (Hofstadter’s Law)</a></li>
<li><a href="#%E5%93%88%E4%BC%AF%E7%89%B9%E5%AE%9A%E5%BE%8B-hutbers-law">哈伯特定律 (Hutber’s Law)</a></li>
<li><a href="#%E6%8A%80%E6%9C%AF%E6%88%90%E7%86%9F%E5%BA%A6%E6%9B%B2%E7%BA%BF-the-hype-cycle-or-amaras-law">技术成熟度曲线 (The Hype Cycle or Amara’s Law)</a></li>
<li><a href="#%E9%9A%90%E5%BC%8F%E6%8E%A5%E5%8F%A3%E5%AE%9A%E5%BE%8B-hyrums-law-or-the-law-of-implicit-interfaces">隐式接口定律 (Hyrum’s Law or The Law of Implicit Interfaces)</a></li>
<li><a href="#%E6%9F%AF%E6%9E%97%E6%B1%89%E5%AE%9A%E5%BE%8B-kernighans-law">柯林汉定律 (Kernighan’s Law)</a></li>
<li><a href="#%E6%9E%97%E7%BA%B3%E6%96%AF%E5%AE%9A%E5%BE%8B-linuss-law">林纳斯定律 (Linus’s Law)</a></li>
<li><a href="#%E6%A2%85%E7%89%B9%E5%8D%A1%E5%A4%AB%E5%AE%9A%E5%BE%8B-metcalfes-law">梅特卡夫定律 (Metcalfe’s Law)</a></li>
<li><a href="#%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B-moores-law">摩尔定律 (Moore’s Law)</a></li>
<li><a href="#%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B-murphys-law--sods-law">墨菲定律 (Murphy’s Law / Sod’s Law)</a></li>
<li><a href="#%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80-occams-razor">奥卡姆剃刀 (Occam’s Razor)</a></li>
<li><a href="#%E5%B8%95%E9%87%91%E6%A3%AE%E5%AE%9A%E7%90%86-parkinsons-law">帕金森定理 (Parkinson’s Law)</a></li>
<li><a href="#%E8%BF%87%E6%97%A9%E4%BC%98%E5%8C%96%E6%95%88%E5%BA%94-premature-optimization-effect">过早优化效应 (Premature Optimization Effect)</a></li>
<li><a href="#%E6%99%AE%E7%89%B9%E5%AE%9A%E5%BE%8B-putts-law">普特定律 (Putt’s Law)</a></li>
<li><a href="#%E9%87%8C%E5%BE%B7%E5%AE%9A%E5%BE%8B-reeds-law">里德定律 (Reed’s Law)</a></li>
<li><a href="#%E5%A4%8D%E6%9D%82%E6%80%A7%E5%AE%88%E6%81%92%E5%AE%9A%E5%BE%8B-the-law-of-conservation-of-complexity-or-teslers-law">复杂性守恒定律 (The Law of Conservation of Complexity or Tesler’s Law)</a></li>
<li><a href="#%E5%BE%97%E5%A2%A8%E5%BF%92%E8%80%B3%E5%AE%9A%E5%BE%8B-the-law-of-demeter">得墨忒耳定律 (The Law of Demeter)</a></li>
<li><a href="#%E6%8A%BD%E8%B1%A1%E6%B3%84%E6%BC%8F%E5%AE%9A%E5%BE%8B-the-law-of-leaky-abstractions">抽象泄漏定律 (The Law of Leaky Abstractions)</a></li>
<li><a href="#%E5%B8%95%E9%87%91%E6%A3%AE%E7%90%90%E7%A2%8E%E5%AE%9A%E7%90%86-the-law-of-triviality">帕金森琐碎定理 (The Law of Triviality)</a></li>
<li><a href="#unix-%E5%93%B2%E5%AD%A6-the-unix-philosophy">Unix 哲学 (The Unix Philosophy)</a></li>
<li><a href="#spotify-%E6%A8%A1%E5%9E%8B-the-spotify-model">Spotify 模型 (The Spotify Model)</a></li>
<li><a href="#%E6%B2%83%E5%BE%B7%E5%8B%92%E5%AE%9A%E5%BE%8B-wadlers-law">沃德勒定律 (Wadler’s Law)</a></li>
<li><a href="#%E6%83%A0%E9%A1%BF%E5%AE%9A%E5%BE%8B-wheatons-law">惠顿定律 (Wheaton’s Law)</a></li>
</ul>
</li>
<li><a href="#%E5%8E%9F%E5%88%99">原则</a>
<ul>
<li><a href="#%E4%B9%94%E6%B2%BB%E4%BC%AF%E5%85%8B%E6%96%AF%E5%AE%9A%E5%BE%8B-all-models-are-wrong-or-george-boxs-law">乔治·伯克斯定律 (All Models Are Wrong or George Box’s Law)</a></li>
<li><a href="#%E5%88%87%E6%96%AF%E7%89%B9%E6%A3%AE%E5%9B%B4%E6%A0%8F-chestersons-fence">切斯特森围栏 (Chesterson’s Fence)</a></li>
<li><a href="#%E6%AD%BB%E6%B5%B7%E6%95%88%E5%BA%94-the-dead-sea-effect">死海效应 (The Dead Sea Effect)</a></li>
<li><a href="#%E5%91%86%E4%BC%AF%E7%89%B9%E6%B3%95%E5%88%99-the-dilbert-principle">呆伯特法则 (The Dilbert Principle)</a></li>
<li><a href="#%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99-the-pareto-principle-or-the-8020-rule">帕累托法则 (The Pareto Principle or The 80/20 Rule)</a></li>
<li><a href="#%E8%88%8D%E5%9F%BA%E5%8E%9F%E7%90%86-the-shirky-principle">舍基原理 (The Shirky Principle)</a></li>
<li><a href="#%E5%BD%BC%E5%BE%97%E5%8E%9F%E7%90%86-the-peter-principle">彼得原理 (The Peter Principle)</a></li>
<li><a href="#%E9%B2%81%E6%A3%92%E6%80%A7%E5%8E%9F%E5%88%99-the-robustness-principle-or-postels-law">鲁棒性原则 (The Robustness Principle or Postel’s Law)</a></li>
<li><a href="#solid">SOLID</a></li>
<li><a href="#%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99-the-single-responsibility-principle">单一功能原则 (The Single Responsibility Principle)</a></li>
<li><a href="#%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99-the-openclosed-principle">开闭原则 (The Open/Closed Principle)</a></li>
<li><a href="#%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99-the-liskov-substitution-principle">里氏替换原则 (The Liskov Substitution Principle)</a></li>
<li><a href="#%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99-the-interface-segregation-principle">接口隔离原则 (The Interface Segregation Principle)</a></li>
<li><a href="#%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99-the-dependency-inversion-principle">依赖反转原则 (The Dependency Inversion Principle)</a></li>
<li><a href="#%E4%B8%8D%E8%A6%81%E9%87%8D%E5%A4%8D%E4%BD%A0%E8%87%AA%E5%B7%B1%E5%8E%9F%E5%88%99-the-dry-principle">不要重复你自己原则 (The DRY Principle)</a></li>
<li><a href="#kiss-%E5%8E%9F%E5%88%99-the-kiss-principle">KISS 原则 (The KISS Principle)</a></li>
<li><a href="#%E4%BD%A0%E4%B8%8D%E9%9C%80%E8%A6%81%E5%AE%83%E5%8E%9F%E5%88%99-yagni">你不需要它原则 (YAGNI)</a></li>
<li><a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%B0%AC%E8%AE%BA-the-fallacies-of-distributed-computing">分布式计算的谬论 (The Fallacies of Distributed Computing)</a></li>
</ul>
</li>
<li><a href="#%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95">阅读清单</a></li>
<li><a href="#%E5%9C%A8%E7%BA%BF%E8%B5%84%E6%BA%90">在线资源</a></li>
<li><a href="#%E7%9B%B8%E5%85%B3%E9%A1%B9%E7%9B%AE">相关项目</a></li>
<li><a href="#todo">TODO</a></li>
</ul>
<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<p>当人们谈论开发时，会聊到许多定律。这个仓库收录了一些最常见的定律。</p>
<p>❗: 这个仓库包含对一些定律、原则以及模式的解释，但不<strong>提倡</strong>其中任何一个。 它们的应用始终存在着争论，并且很大程度上取决于你正在做什么。</p>
<h2 id="定律"><a class="markdownIt-Anchor" href="#定律"></a> 定律</h2>
<p>现在我们开始吧！</p>
<h3 id="90-9-1-法则-9091-principle-or-1-rule"><a class="markdownIt-Anchor" href="#90-9-1-法则-9091-principle-or-1-rule"></a> 90-9-1 法则 (90–9–1 Principle or 1% Rule)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/1%25_rule_(Internet_culture)">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/1%25%E6%B3%95%E5%88%99">中文维基百科</a></li>
</ul>
<p>90-9-1 法则表明，在诸如维基这样的互联网社区中，90% 的用户只看内容并不参与互动，9% 的用户会参与讨论，而只有 1% 的用户会创造内容。</p>
<p>现实世界的例子：</p>
<ul>
<li>2014 年，对四个健康的数字社交网络进行的一项研究发现，排名前 1% 的人创造了 73% 的帖子，紧随其后的 9% 平均占 25%，其余的 90% 的人平均占 2%。 (<a href="https://www.jmir.org/2014/2/e33/">参考</a>)</li>
</ul>
<p>参见：</p>
<ul>
<li><a href="#%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99-the-pareto-principle-or-the-8020-rule">帕累托法则 (The Pareto Principle or The 80/20 Rule)</a></li>
</ul>
<h3 id="阿姆达尔定律-amdahls-law"><a class="markdownIt-Anchor" href="#阿姆达尔定律-amdahls-law"></a> 阿姆达尔定律 (Amdahl’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Amdahl%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%98%BF%E5%A7%86%E8%BE%BE%E5%B0%94%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>阿姆达尔定律是一个显示计算任务<strong>潜在加速</strong>能力的公式。这种能力可以通过增加系统资源来实现，通常用于并行计算中。它可以预测增加处理器数量的实际好处，然而增加处理器数量会受到程序并行性的限制。</p>
</blockquote>
<p>举例说明：如果程序由 A、B 两个部分组成，A 部分必须由单个处理器执行，B 部分可以并行运行。那么向执行程序的系统添加多个处理器只能获得有限的好处。它可以极大地提升 B 部分的运行速度，但 A 部分的运行速度将保持不变。</p>
<p>下图展示了一些运行速度的提升潜能的例子：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-09/amdahls_law.png" alt="阿姆达尔定律" /></p>
<p><em>(图片来源：By Daniels220 at English Wikipedia, Creative Commons Attribution-Share Alike 3.0 Unported, <a href="https://en.wikipedia.org/wiki/File:AmdahlsLaw.svg">https://en.wikipedia.org/wiki/File:AmdahlsLaw.svg</a>)</em></p>
<p>可以看出，50％ 并行化的程序在使用大于 10 个处理单元之后的速度提升收效甚微，而 95％ 并行化的程序在使用超过一千个处理单元之后仍然可以显著提升速度。</p>
<p>随着<a href="#%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B-moores-law">摩尔定律</a>减慢，单个处理器的速度增加缓慢，并行化是提高性能的关键。图形编程是一个极好的例子，现代着色器可以并行渲染单个像素或片段。这也是现代显卡通常具有数千个处理核心（GPU 或着色器单元）的原因。</p>
<p>参见：</p>
<ul>
<li><a href="#%E5%B8%83%E9%B2%81%E5%85%8B%E6%96%AF%E6%B3%95%E5%88%99-brookss-law">布鲁克斯法则</a></li>
<li><a href="#%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B-moores-law">摩尔定律</a></li>
</ul>
<h3 id="破窗效应-the-broken-windows-theory"><a class="markdownIt-Anchor" href="#破窗效应-the-broken-windows-theory"></a> 破窗效应 (The Broken Windows Theory)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Broken_windows_theory">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%A0%B4%E7%AA%97%E6%95%88%E5%BA%94">中文维基百科</a></li>
</ul>
<p>在破窗理论中认为，一些明显的犯罪迹象(或缺乏环保意识)会导致进一步的、更严重的犯罪(或环境的进一步恶化)。</p>
<p>破窗理论已应用于软件开发中，它表明劣质代码(或 <a href="#TODO">Technical Debt</a>)可能会影响后续优化的效率，从而进一步造成代码劣化；随着时间的推移，这种效应将会导致代码质量大幅下降。</p>
<p>参见：</p>
<ul>
<li><a href="#TODO">Technical Debt</a></li>
</ul>
<p>例子：</p>
<ul>
<li><a href="https://pragprog.com/the-pragmatic-programmer/extracts/software-entropy">《程序员修炼之道：软件熵》(The Pragmatic Programming: Software Entropy)</a></li>
<li><a href="https://blog.codinghorror.com/the-broken-window-theory/">《Coding Horror：破窗效应》(Coding Horror: The Broken Window Theory)</a></li>
<li><a href="https://opensourceforu.com/2011/05/joy-of-programming-broken-window-theory/">《开源：编程之乐 - 破窗效应》(OpenSource: Joy of Programming - The Broken Window Theory)</a></li>
</ul>
<h3 id="布鲁克斯法则-brookss-law"><a class="markdownIt-Anchor" href="#布鲁克斯法则-brookss-law"></a> 布鲁克斯法则 (Brooks’s Law)</h3>
<ul>
<li><a href="https://en.m.wikipedia.org/wiki/Brooks%27s_law">英文维基百科</a></li>
</ul>
<blockquote>
<p>软件开发后期，添加人力只会使项目开发得更慢。</p>
</blockquote>
<p>这个定律表明，在许多情况下，试图通过增加人力来加速已延期项目的交付，将会使项目交付得更晚。布鲁克斯也明白，这是一种过度简化。但一般的论据是，新资源的时间增加和通信开销，会在短期内使开发速度减慢。而且，许多任务是密不可分的，换句话说，这样可以使更多的资源之间能轻易分配，这也意味着潜在的速度增长也更低。</p>
<p>谚语 <strong>九个女人不能在一个月内生一个孩子</strong> 与布鲁克斯法则同出一辙，特别是某些不可分割或者并行的工作。</p>
<p>这是<a href="#%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95">《人月神话》</a>的中心主题。</p>
<p>参见：</p>
<ul>
<li><a href="#todo">Death March</a></li>
<li><a href="#%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95">阅读清单：《人月神话》</a></li>
</ul>
<h3 id="cap-定理-cap-theorem-or-brewers-theorem"><a class="markdownIt-Anchor" href="#cap-定理-cap-theorem-or-brewers-theorem"></a> CAP 定理 (CAP Theorem or Brewer’s Theorem)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/CAP_theorem">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/CAP%E5%AE%9A%E7%90%86">中文维基百科</a></li>
</ul>
<p>CAP 定理由 Eric Brewer 所定义，它指出对于分布式数据存储来说，不可能同时满足以下三点：</p>
<ul>
<li>一致性 (Consistency)：在读取数据时，每个请求都会接收到 <em>最新的</em> 数据，或者返回错误。</li>
<li>可用性 (Availability): 在读取数据时，每个请求都会接收到一个 <em>非错误的响应</em>，但不能保证该数据是 <em>最新的</em> 数据。</li>
<li>分区容错性 (Partition Tolerance)：当节点之间任意数量的网络请求失败时，系统能按预期继续运行。</li>
</ul>
<p>核心论证如下：因为无法保证不会存在网络分区（参见<a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%B0%AC%E8%AE%BA-the-fallacies-of-distributed-computing">分布式计算的谬论 (The Fallacies of Distributed Computing)</a>），所以在分区的情况下，我们可以选择取消当前操作（增加一致性并降低可用性），或者选择继续进行该操作（增加可用性降低一致性）。</p>
<p>该定理的名字来源于一致性 (Consistency)、可用性 (Availability)、分区容错性 (Partition Tolerance) 的首字母。请注意，这与 <a href="#TODO"><em>ACID</em></a> 没有任何关系，因为其对一致性有另一种定义。最近发展出来的 <a href="#TODO">PACELC</a> 定理与 CAP 定理相比，增加了对网络 <em>未</em> 分区时（即系统按预期操作时）的延迟和一致性的约束。</p>
<p>大多数的现代数据库平台会通过向数据库用户提供选项的方式，来选择是需要高度可用的操作（比如“脏读 (dirty read)”），还是高度一致的操作(比如“法定确认写写入 (quorum acknowledged write)”)——这间接地承认了这一定理。</p>
<p>现实世界的例子：</p>
<ul>
<li><a href="https://cloud.google.com/blog/products/gcp/inside-cloud-spanner-and-the-cap-theorem">Inside Google Cloud Spanner and the CAP Theorem</a> - 该文详细介绍了 Cloud Spanner 是如何工作的，表面上该平台似乎能够保证 CAP 三者，但实际上依然是一个 CP 系统，即只有一致性和分区容错性。</li>
</ul>
<p>参见：</p>
<ul>
<li><a href="#TODO">ACID</a></li>
<li><a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%B0%AC%E8%AE%BA-the-fallacies-of-distributed-computing">分布式计算的谬论 (The Fallacies of Distributed Computing)</a></li>
<li><a href="#TODO">PACELC</a></li>
</ul>
<h3 id="康威定律-conways-law"><a class="markdownIt-Anchor" href="#康威定律-conways-law"></a> 康威定律 (Conway’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Conway%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<p>这个定律说明了系统的技术边界可以反应一个组织的结构，它通常会在改进组织时被提及。康威定律表明，如果一个组织被分散成许多小而无联系的单元，那么它开发的软件也是小而分散的。如果组织是更多地围绕以功能或服务为导向的<strong>垂直</strong>结构，那么软件系统也会反映这一点。</p>
<p>参见：</p>
<ul>
<li><a href="#spotify-%E6%A8%A1%E5%9E%8B-the-spotify-model">The Spotify Model</a></li>
</ul>
<h3 id="坎宁汉姆定律-cunninghams-law"><a class="markdownIt-Anchor" href="#坎宁汉姆定律-cunninghams-law"></a> 坎宁汉姆定律 (Cunningham’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Ward_Cunningham#Cunningham's_Law">英文维基百科</a></li>
</ul>
<blockquote>
<p>在网络上想得到正确答案的最好方法不是提问题，而是发布一个错误的答案。</p>
</blockquote>
<p>据史蒂芬·麦克基迪说，沃德·坎宁汉姆早在 20 世纪 80 年代早期的时候建议他，在互联网上获得正确答案的最好方法不是提问题，而是发布一个错误的答案。麦克基迪称这为坎宁汉姆定律，而坎宁汉姆不以为然，并觉得这是“错误的引用”。最初这条定律只是用于描述 Usenet 上的社交行为，但后来也渐渐用于其他的在线社区（如 Wikipedia、Reddit、Twitter、Facebook 等）。</p>
<p>参见：</p>
<ul>
<li><a href="https://xkcd.com/386/">XKCD 386: “Duty Calls”</a></li>
</ul>
<h3 id="邓巴数字-dunbars-number"><a class="markdownIt-Anchor" href="#邓巴数字-dunbars-number"></a> 邓巴数字 (Dunbar’s Number)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Dunbar%27s_number">英文维基百科</a></li>
</ul>
<p>邓巴数字是对一个人能够保持稳定社会关系的人数的认知极限——在这种关系中，一个人知道每个人是谁，也知道每个人与其他人的关系如何。而对这一数字的确切值则有着一些不同意见。邓巴指出，人仅能轻松地维持 150 个稳定的关系。这样的关系在一个更社会化的背景中，便是当你碰巧在酒吧里碰到这些人时候，你不会因为加入他们而感到尴尬。邓巴数字的估计值一般在 100 至 250 之间。</p>
<p>和人与人之间稳定的关系一样，开发人员与代码库的关系也需要努力维护。当面对大型、复杂的项目，或许多项目的归属权时，我们会依赖于约定、策略和建模过程来进行扩展。邓巴数字不仅在办公室规模的扩大的过程中举足轻重，而且在设置团队工作范围，或决定系统何时应该注重于辅助建模和组织管理开销自动化的工具时，也是非常重要的。将邓巴数字放入工程内容中进行类比，那就是您能加入并有信心随叫随到进行轮换的项目数(亦或是单个项目的规范化复杂性)。</p>
<p>参见：</p>
<ul>
<li><a href="#%e5%ba%b7%e5%a8%81%e5%ae%9a%e5%be%8b-conways-law">康威定律</a></li>
</ul>
<h3 id="邓宁-克鲁格效应-the-dunning-kruger-effect"><a class="markdownIt-Anchor" href="#邓宁-克鲁格效应-the-dunning-kruger-effect"></a> 邓宁-克鲁格效应 (The Dunning-Kruger Effect)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%84%A7%E5%AF%A7-%E5%85%8B%E9%AD%AF%E6%A0%BC%E6%95%88%E6%87%89">中文维基百科</a></li>
</ul>
<blockquote>
<p>无能的人往往不会意识到自己的无能。而得出正确答案所需要的技能，正是你认识到何为正确答案所需要的技能。</p>
<p>(<a href="https://en.wikipedia.org/wiki/David_Dunning">大卫·邓宁 (David Dunning)</a>)</p>
</blockquote>
<p>邓宁-克鲁格效应是一种理论上的认知偏差，大卫·邓宁和贾斯汀·克鲁格在 1999 年的一项心理学研究和论文中对此进行了描述。研究表明，在一项任务中能力水平较低的人会更容易高估自己的能力。之所以会产生这种偏向，是因为一个人对问题或领域的复杂性有足够的<em>认识</em>时，才能够针对自己在该领域的工作能力提出明智的意见。</p>
<p>邓宁-克鲁格效应也有另一个类似的，更显式的描述，即“一个人对某个领域的了解越少，他就越容易轻视这个领域的难度，从而更倾向于相信自己可以轻易地解决该领域的问题”。该效应与技术高度相关，具体表现为不太熟悉某个领域的个人(如非技术团队成员或经验较少的团队成员)会更有可能低估解决该领域问题所需的工作量。</p>
<p>随着对某一领域的理解和经验的增长，人们很可能会遇到另一种效应-<a href="https://en.wikipedia.org/wiki/Illusory_superiority">虚幻的优越性 (Illusory superiority)</a>，即特定领域内的丰富经验使得他们更容易高估他人的能力，或低估自己的能力。总而言之，这些影响都归咎于认知偏差。当意识到偏差存在时，我们可以尽量提出意见来消除这些偏差，这样往往可以避免异议。</p>
<p>真实案例:</p>
<ul>
<li><a href="https://fortune.com/2016/03/10/apple-fbi-lindsay-graham/">苹果公司 vs 联邦调查局：为什么这个反恐鹰派改变了立场 (Apple vs. FBI: Why This Anti-Terror Hawk Switched Sides)</a> - 2016 年，参议员林赛·格雷厄姆改变了他对苹果在设备加密中创建“后门”的立场。起初，格雷厄姆曾批评苹果公司反对创建“后门”，因为他认为这对调查潜在的恐怖计划是必要的。然而，随着他对这个领域的技术复杂性有了更多的了解，格雷厄姆意识到这比他原先想的要困难很多，并可能会产生严重的负面后果。这便是邓宁-克鲁格效应的真实案例–网络安全专家会更清楚如何利用这样的后门，因为他们对该领域有深刻的理解；而外行人士可能会简单地将设备安全类比于物理上的安全，执法时可以使用“万能钥匙”，但这显然与网络安全中的现代加密不可同日而语。</li>
</ul>
<h3 id="费茨法则-fittss-law"><a class="markdownIt-Anchor" href="#费茨法则-fittss-law"></a> 费茨法则 (Fitts’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Fitts%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E8%B4%B9%E8%8C%A8%E6%B3%95%E5%88%99">中文维基百科</a></li>
</ul>
<p>该法则指出，移动到目标区域所需的时间是到目标的距离除以目标宽度的函数。</p>
<img width="300px" alt="Diagram: Fitts Law" src="D:\Desktop\hacker-laws-zh-master\images\Fitts_Law.svg" />
<p><em>(图片来源：By Foobar628 at English Wikipedia, Creative Commons Attribution-Share Alike 3.0 Unported, <a href="https://en.wikipedia.org/wiki/Fitts%27s_law#/media/File:Fitts_Law.svg">https://en.wikipedia.org/wiki/Fitts's_law#/media/File:Fitts_Law.svg</a>)</em></p>
<p>费茨法则决定了在设计 UX 或 UI 时，交互元素应该尽可能大，而用户注意力区域和交互元素之间的距离应该尽可能小。这会对设计产生影响，例如将相近的任务进行归类分组等。</p>
<p>同时它还将“魔角 (Magic Corners)”这一概念正式化，即在角落放置关键的 UI 元素，从而使得用户可以通过移动鼠标轻松点击到。Windows 的开始按钮便位于魔角处便于选择，而有趣的是 MacOS 恰恰相反，它的“关闭窗口”按钮 <em>不处于</em> 魔角处，从而能有效减小被误点击的概率。</p>
<p>参见：</p>
<ul>
<li><a href="https://www.semanticscholar.org/paper/The-information-capacity-of-the-human-motor-system-Fitts/634c9fde5f1c411e4487658ac738dcf18d98ea8d">The information capacity of the human motor system in controlling the amplitude of movement.</a></li>
</ul>
<h3 id="盖尔定律-galls-law"><a class="markdownIt-Anchor" href="#盖尔定律-galls-law"></a> 盖尔定律 (Gall’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/John_Gall_(author)#Gall's_law">英文维基百科</a></li>
</ul>
<blockquote>
<p>一个切实可行的复杂系统势必是从一个切实可行的简单系统发展而来的。从头开始设计的复杂系统根本不切实可行，无法修修补补让它切实可行。你必须由一个切实可行的简单系统重新开始。</p>
<p><a href="https://en.wikipedia.org/wiki/John_Gall_(author)">约翰·盖尔</a> (John Gall)</p>
</blockquote>
<p>盖尔定律说明了设计高度复杂的系统很可能会失败。它们很难一蹴而就，更多是从简单的系统逐渐演变而来。</p>
<p>最典型的例子便是互联网。如今的互联网是一个高度复杂的系统，而它最早只是被定义为一种在学术机构之间共享内容的方式。互联网成功实现了最初的目标，并且随着时间不断演化，最终成就了如今的复杂繁荣。</p>
<p>参见：</p>
<ul>
<li><a href="#kiss-%e5%8e%9f%e5%88%99-the-kiss-principle">KISS 原则 (保持简单和直白)</a></li>
</ul>
<h3 id="古德哈特定律-goodharts-law"><a class="markdownIt-Anchor" href="#古德哈特定律-goodharts-law"></a> 古德哈特定律 (Goodhart’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Goodhart's_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%8F%A4%E5%BE%B7%E5%93%88%E7%89%B9%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>当压力施于其上以进行控制时，任何观测到的统计恒性都倾向消散。</p>
<p><em>查尔斯·古德哈特 (Charles Goodhart)</em></p>
</blockquote>
<p>另见：</p>
<blockquote>
<p>当一个措施本身成为目标时，它就不再是一个好的措施。</p>
<p><em>玛丽莲·斯特拉腾 (Marilyn Strathern)</em></p>
</blockquote>
<p>根据这一定律，由测量驱动的优化反而可能导致测量结果本身的说服力下降。盲目使用一些过度严格筛选的方法 (<a href="https://zh.wikipedia.org/wiki/%E9%97%9C%E9%8D%B5%E7%B8%BE%E6%95%88%E6%8C%87%E6%A8%99">KPIs</a>) 可能会产生一些不良的影响。人们会倾向于用“钻空子”的行为去做局部优化，从而满足一些特定的度量标准，而不会在意整体的结果。</p>
<p>现实中的例子：</p>
<ul>
<li>Assert-free 测试可以达到代码覆盖率的预期，但度量的目的应该是创造经过良好测试的软件。</li>
<li>由 commits 的行数来评价开发人员的表现，从而导致了不合理的代码库扩增。</li>
</ul>
<p>参见</p>
<ul>
<li><a href="https://coffeeandjunk.com/goodharts-campbells-law/">古德哈特定律：错误的测量如何导致不道德的行为</a></li>
<li><a href="https://dilbert.com/strip/1995-11-13">呆伯特与无 bug 软件</a></li>
</ul>
<h3 id="汉隆的剃刀-hanlons-razor"><a class="markdownIt-Anchor" href="#汉隆的剃刀-hanlons-razor"></a> 汉隆的剃刀 (Hanlon’s Razor)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hanlon%27s_razor">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%B1%89%E9%9A%86%E7%9A%84%E5%89%83%E5%88%80">中文维基百科</a></li>
</ul>
<blockquote>
<p>能解释为愚蠢的，就不要解释为恶意的。</p>
<p><em>罗伯特·汉隆 (Robert J. Hanlon)</em></p>
</blockquote>
<p>这一原则表明，一个行为所产生的消极结果并不是恶意。相反，消极结果更有可能归咎于这些没有得到充分理解的行动或影响。</p>
<h3 id="席克定律-hicks-law-or-hick-hyman-law"><a class="markdownIt-Anchor" href="#席克定律-hicks-law-or-hick-hyman-law"></a> 席克定律 (Hick’s Law or Hick-Hyman Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hick%27s_law">英文维基百科</a></li>
</ul>
<blockquote>
<p>决策时间和可供选择的选项数量呈对数增长关系。</p>
<p><em>William Edmund Hick and Ray Hyman</em></p>
</blockquote>
<p>在下方的等式中，<code>T</code> 是做出决定所花费的时间，<code>n</code> 是选项的数量，<code>b</code> 是一个由数据分析所确定的常数。</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-09/hicks_law.svg" alt="席克定律" /></p>
<p><em>(图片参考：Creative Commons Attribution-Share Alike 3.0 Unported, <a href="https://en.wikipedia.org/wiki/Hick%27s_law">https://en.wikipedia.org/wiki/Hick's_law</a>)</em></p>
<p>该定律仅适用于选项 <em>按顺序排列</em> 的情况，例如 ABCD。这隐含在一二为底的对数中，也就是说决策者本质上在进行 <em>二分法查找</em>。实验表明，如果选项不是按顺序排列的，那么所花费时间与选项个数将会呈线性增长关系。</p>
<p>这在 UI 设计中，该定律也可以有效地确保用户在搜索选项时更轻松愉快地做出决策。</p>
<p>在 <a href="https://www.sciencedirect.com/science/article/pii/S0022440599000369">Speed of Information Processing: Developmental Change and Links to Intelligence</a> 一文中可见，智商和反应时间之间的相关性也满足席克定律。</p>
<p>参见：</p>
<ul>
<li><a href="#%E8%B4%B9%E8%8C%A8%E6%B3%95%E5%88%99-fittss-law">费茨法则 (Fitts’s Law)</a></li>
</ul>
<h3 id="侯世达定律-hofstadters-law"><a class="markdownIt-Anchor" href="#侯世达定律-hofstadters-law"></a> 侯世达定律 (Hofstadter’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hofstadter%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E4%BE%AF%E4%B8%96%E8%BE%BE%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>即使考虑到侯世达定律，它也总是比你预期的要长。</p>
<p>侯世达 (Douglas Hofstadter)</p>
</blockquote>
<p>在估计需要多长时间开发时，你可能会听到此定律。软件开发似乎有这样一条定理，即我们往往不能准确地估计需要多长时间才能完成。</p>
<p>语出<a href="#%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95">《哥德尔、艾舍尔、巴赫：集异璧之大成》</a>。</p>
<p>参见：</p>
<ul>
<li><a href="#%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95">阅读清单：《哥德尔、艾舍尔、巴赫：集异璧之大成》</a></li>
</ul>
<h3 id="哈特伯定律-hutbers-law"><a class="markdownIt-Anchor" href="#哈特伯定律-hutbers-law"></a> 哈特伯定律 (Hutber’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hutber%27s_law">英文维基百科</a></li>
</ul>
<blockquote>
<p>改善即恶化。</p>
<p><a href="https://en.wikipedia.org/wiki/Patrick_Hutber">帕特里克·哈特伯</a> (Patrick Hutber)</p>
</blockquote>
<p>这个定律说明了对一个系统的改进会导致其他部分的恶化；或者它会将其他的恶化隐藏起来，并导致系统整体状态的退化。</p>
<p>例如，某个端点的响应延迟减少，就可能导致请求流中的吞吐量和容量问题进一步增加，并影响到另一个完全不同的子系统。</p>
<h3 id="技术成熟度曲线-the-hype-cycle-or-amaras-law"><a class="markdownIt-Anchor" href="#技术成熟度曲线-the-hype-cycle-or-amaras-law"></a> 技术成熟度曲线 (The Hype Cycle or Amara’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hype_cycle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%8A%80%E6%9C%AF%E6%88%90%E7%86%9F%E5%BA%A6%E6%9B%B2%E7%BA%BF">中文维基百科</a></li>
</ul>
<blockquote>
<p>我们倾向于过高估计技术在短期内的影响，并低估长期效应。</p>
<p><em>罗伊·阿马拉 (Roy Amara)</em></p>
</blockquote>
<p>技术成熟度曲线是<a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E5%BE%B7%E7%BA%B3%E5%92%A8%E8%AF%A2%E5%85%AC%E5%8F%B8">高德纳咨询公司</a>对技术最初兴起和发展的视觉展现。一图顶千言：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-09/gartner_hype_cycle.png" alt="The Hype Cycle" /></p>
<p><em>(图片来源: By Jeremykemp at English Wikipedia, CC BY-SA 3.0, <a href="https://commons.wikimedia.org/w/index.php?curid=10547051">https://commons.wikimedia.org/w/index.php?curid=10547051</a>)</em></p>
<p>简而言之，这个周期表明，新技术及其潜在影响通常会引发一阵浪潮。团队快速使用这些新技术，有时会对结果感到失望。这可能是因为该技术还不够成熟，或者现实应用还没有完全实现。经过一段时间后，技术的能力提高了，使用它的实际机会会增加，最终团队也可以提高工作效率。罗伊·阿马拉简洁地总结了这一点：我们倾向于高估技术短期内的影响，并低估长期效应。</p>
<h3 id="隐式接口定律-hyrums-law-or-the-law-of-implicit-interfaces"><a class="markdownIt-Anchor" href="#隐式接口定律-hyrums-law-or-the-law-of-implicit-interfaces"></a> 隐式接口定律 (Hyrum’s Law or The Law of Implicit Interfaces)</h3>
<ul>
<li><a href="http://www.hyrumslaw.com/">英文在线地址</a></li>
</ul>
<blockquote>
<p>当 API 有足够多的用户时，你在合同中的承诺已不重要：你系统的所有可观察行为都将被某些人所依赖。</p>
<p><em>海勒姆·赖特 (Hyrum Wright)</em></p>
</blockquote>
<p>隐式接口定律表明，当你的 API 有足够多的用户时，API 的所有行为（包括那些未囊括在公共说明中的一部分）最终都会被其他人所依赖。 一个简单的例子是 API 的响应时间这种非功能性因素；还有一个更微妙的例子是：用户使用正则表达式匹配错误提示来判断 API 的错误类型，即使 API 文档中没有任何关于错误提示的内容，而是指导用户应该使用相应的错误代码。一些用户依然会使用错误提示内容（而非错误代码），这种情况下变更 API 错误提示信息，实际上会破坏 API 的使用。</p>
<p>参见：</p>
<ul>
<li><a href="#%E6%BC%8F%E6%B4%9E%E6%8A%BD%E8%B1%A1%E5%AE%9A%E5%BE%8B-the-law-of-leaky-abstractions">抽象泄漏定律</a></li>
<li><a href="https://xkcd.com/1172/">XKCD 1172</a></li>
</ul>
<h3 id="柯林汉定律-kernighans-law"><a class="markdownIt-Anchor" href="#柯林汉定律-kernighans-law"></a> 柯林汉定律 (Kernighan’s Law)</h3>
<blockquote>
<p>调试在一开始就比编写程序困难一倍。因此，按照定义，如果你的代码写得非常巧妙，那么你就没有足够的能力来调试它。</p>
<p><em>布莱恩·柯林汉 (Brian Kernighan)</em></p>
</blockquote>
<p>柯林汉定律是以<a href="https://zh.wikipedia.org/wiki/%E5%B8%83%E8%90%8A%E6%81%A9%C2%B7%E6%9F%AF%E6%9E%97%E6%BC%A2">布莱恩·柯林汉</a> (<a href="https://en.wikipedia.org/wiki/Brian_Kernighan">Brian Kernighan</a>) 的名字命名的，引述自柯林汉和普劳格 (P.J. Plauger) 的《<a href="https://book.douban.com/subject/26335120/">编程格调</a>》 (<a href="https://en.wikipedia.org/wiki/The_Elements_of_Programming_Style">The Elements of Programming Style</a>) 一书中的一句话：</p>
<blockquote>
<p>每个人都知道，调试在一开始就比编写程序困难一倍。那么，如果您在编写它时尽可能地巧妙，又如何来调试它？</p>
</blockquote>
<p>尽管这有些夸张，但它提出的论点是，简单的代码会比复杂的代码更可取，因为调试复杂代码的过程中出现的任何问题都会十分棘手，甚至无法解决。</p>
<p>参见：</p>
<ul>
<li><a href="#kiss-%e5%8e%9f%e5%88%99-the-kiss-principle">KISS 原则 (The KISS Principle)</a></li>
<li><a href="#unix-%e5%93%b2%e5%ad%a6-the-unix-philosophy">Unix 哲学 (The Unix Philosophy)</a></li>
<li><a href="#%e5%a5%a5%e5%8d%a1%e5%a7%86%e5%89%83%e5%88%80-occams-razor">奥卡姆剃刀 (Occam’s Razor)</a></li>
</ul>
<h3 id="林纳斯定律-linuss-law"><a class="markdownIt-Anchor" href="#林纳斯定律-linuss-law"></a> 林纳斯定律 (Linus’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Linus%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%9E%97%E7%BA%B3%E6%96%AF%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>足够多的眼睛，就可让所有问题浮现。</p>
<p><em>Eric S. Raymond</em></p>
</blockquote>
<p>简单地说，能够看到问题的人越多，有人解决过相关的问题或事情的可能性就越高。</p>
<p>最初该定律是用来描述开源模型对于项目的价值的，并适用于任意的软件项目。同时它也可以扩展到开发流程之中——更多的代码审查、更多的静态分析和多重测试可以让问题更加明显和容易识别。</p>
<p>林纳斯定律的一个更正式的说法如下：</p>
<blockquote>
<p>如果有足够大的测试员和联合开发人员基础，那么几乎每个问题都能很快被特征化，从而让以前遇到过类似问题的人解决。</p>
</blockquote>
<p>这条定律最早出现在 Eric S. Raymond 所著书 “<a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">The Cathedral and the Bazaar</a>” 中，并以 <a href="https://en.wikipedia.org/wiki/Linus_Torvalds">Linus Torvalds</a> 的名字命名以作纪念。</p>
<h3 id="梅特卡夫定律-metcalfes-law"><a class="markdownIt-Anchor" href="#梅特卡夫定律-metcalfes-law"></a> 梅特卡夫定律 (Metcalfe’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Metcalfe's_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%A2%85%E7%89%B9%E5%8D%A1%E5%A4%AB%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>在网络理论中，系统的价值约等于系统用户数的平方。</p>
</blockquote>
<p>这个定律基于一个系统中可能的连接对数量，并且与<a href="#%e9%87%8c%e5%be%b7%e5%ae%9a%e5%be%8b-reeds-law">里德定律 (Reed’s Law)</a> 十分相近。奥德利兹科 (Odlyzko) 和其他人认为，里德定律和梅特卡夫定律夸大了系统本身的价值，因为它们没有考虑到网络效应中人类认知的限制。</p>
<p>参见:</p>
<ul>
<li><a href="#%e9%87%8c%e5%be%b7%e5%ae%9a%e5%be%8b-reeds-law">里德定律</a></li>
<li><a href="#%e9%82%93%e5%b7%b4%e6%95%b0%e5%ad%97-dunbars-number">邓巴数字</a></li>
</ul>
<h3 id="摩尔定律-moores-law"><a class="markdownIt-Anchor" href="#摩尔定律-moores-law"></a> 摩尔定律 (Moore’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Moore%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>集成电路中的晶体管数量大约每两年翻一番。</p>
</blockquote>
<p>这条定律通常用于说明半导体和芯片技术提高的绝对速度。从 20 世纪 70 年代到 21 世纪前十年，摩尔的预测被证明是高度准确的。 近年来，这种趋势略有变化，部分原因受到<a href="https://zh.wikipedia.org/wiki/%E9%87%8F%E5%AD%90%E7%A9%BF%E9%9A%A7%E6%95%88%E6%87%89">量子隧穿效应</a>影响。然而，并行化计算的进步以及半导体技术和量子计算潜在的革命性变化，可能意味着摩尔定律在未来几十年内继续保持正确。</p>
<h3 id="墨菲定律-murphys-law-sods-law"><a class="markdownIt-Anchor" href="#墨菲定律-murphys-law-sods-law"></a> 墨菲定律 (Murphy’s Law / Sod’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Murphy%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E8%8F%B2%E5%AE%9A%E7%90%86">中文维基百科</a></li>
</ul>
<blockquote>
<p>凡是可能出错的事就一定会出错。</p>
</blockquote>
<p>出自 <a href="https://en.wikipedia.org/wiki/Edward_A._Murphy_Jr.">爱德华·A·墨菲</a> ， <em>墨菲定律</em> 说明了如果一件事有可能出错，那么就一定会出错。</p>
<p>这是一句开发人员间的俗语，在开发、测试甚至在生产中都有可能会发生一些令人意想不到的事情。而这一定律也可以参考在英式英语中更为常见的 <em>索德定理</em> ：</p>
<blockquote>
<p>如果某件事可能出错，那么它一定会在最糟糕的时候发生。</p>
</blockquote>
<p>这些定律常常用于幽默嘲弄。但是，类似于 <a href="#TODO"><em>Confirmation Bias</em></a> 和 <a href="#TODO"><em>Selection Bias</em></a> 的现象很容易导致人们过分强调这些定律（即在大部分情况下，一件事的成功会显得司空见惯；而失败才会引起更多的注意和讨论）。</p>
<p>参见:</p>
<ul>
<li><a href="#TODO">Confirmation Bias</a></li>
<li><a href="#TODO">Selection Bias</a></li>
</ul>
<h3 id="奥卡姆剃刀-occams-razor"><a class="markdownIt-Anchor" href="#奥卡姆剃刀-occams-razor"></a> 奥卡姆剃刀 (Occam’s Razor)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Occam's_razor">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80">中文维基百科</a></li>
</ul>
<blockquote>
<p>如无必要，勿增实体。</p>
<p>奥卡姆的威廉 (William of Ockham)</p>
</blockquote>
<p>奥卡姆剃刀指出，在几种可能的解决方案之中，最有可能的解决方案便是概念和假设最少的那个。因为这个解决方案最为简单，只解决了问题，并且没有引入额外的复杂度和可能的负面后果。</p>
<p>参见：</p>
<ul>
<li><a href="#%e4%bd%a0%e4%b8%8d%e9%9c%80%e8%a6%81%e5%ae%83%e5%8e%9f%e5%88%99-yagni">你不需要它原则 (YAGNI)</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9">没有银弹：软件工程的本质性与附属性工作</a></li>
<li><a href="https://en.wikipedia.org/wiki/No_Silver_Bullet">No Silver Bullet: Accidental Complexity and Essential Complexity</a></li>
</ul>
<p>例子：</p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E7%B2%BE%E7%9B%8A%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91#%E6%B6%88%E9%99%A4%E6%B5%AA%E8%B4%B9">精益软件开发：消除浪费</a></li>
<li><a href="https://en.wikipedia.org/wiki/Lean_software_development#Eliminate_waste">Lean Software Development: Eliminate Waste</a></li>
</ul>
<h3 id="帕金森定理-parkinsons-law"><a class="markdownIt-Anchor" href="#帕金森定理-parkinsons-law"></a> 帕金森定理 (Parkinson’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Parkinson%27s_law">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%B8%95%E9%87%91%E6%A3%AE%E5%AE%9A%E7%90%86">中文维基百科</a></li>
</ul>
<blockquote>
<p>在工作能够完成的时限内，工作量会一直增加，直到所有可用时间都被填满为止。</p>
</blockquote>
<p>基于官僚机构的研究背景，该定律被应用于软件开发中。该理论认为，团队在截止日期之前效率低下，然后在截止日期前赶紧完成工作，从而使实际截止日期变得随意。</p>
<p>将这个定理与<a href="#%E4%BE%AF%E4%B8%96%E8%BE%BE%E5%AE%9A%E5%BE%8B-hofstadters-law">侯世达定律</a>相结合，则会获得更加悲观的观点：为了在规定时间内完成工作，工作将增多，花费比预期更长的时间。</p>
<p>参见：</p>
<ul>
<li><a href="#%E4%BE%AF%E4%B8%96%E8%BE%BE%E5%AE%9A%E5%BE%8B-hofstadters-law">侯世达定律</a></li>
</ul>
<h3 id="过早优化效应-premature-optimization-effect"><a class="markdownIt-Anchor" href="#过早优化效应-premature-optimization-effect"></a> 过早优化效应 (Premature Optimization Effect)</h3>
<ul>
<li><a href="http://wiki.c2.com/?PrematureOptimization">英文在线网站</a></li>
</ul>
<blockquote>
<p>过早优化是万恶之源。</p>
<p><a href="https://twitter.com/realdonaldknuth?lang=en">高德纳 (唐纳德克努特的中文名)</a></p>
</blockquote>
<p>在高德纳的<a href="http://wiki.c2.com/?StructuredProgrammingWithGoToStatements">《goto 语句的结构化编程》</a>论文中，他写到：“程序员们浪费了大量的时间去思考或者担心他们的程序中的非关键部分的速度。而在考虑调试和维护的时候，这些所谓提高效率的做法实际上十分不妥。我们应该放弃小的效率点，并且要在 97% 的时间提醒自己，<strong>过早优化是万恶之源</strong>。而且连那关键的 3% 也不能够放过。”</p>
<p>然而，<em>过早优化</em> （简而言之）可以定义为在我们知道需要做什么之前进行优化。</p>
<h3 id="普特定律-putts-law"><a class="markdownIt-Anchor" href="#普特定律-putts-law"></a> 普特定律 (Putt’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Putt%27s_Law_and_the_Successful_Technocrat">英文维基百科</a></li>
</ul>
<blockquote>
<p>技术由两类人主导，一类是纯粹的管理人员， 一类是纯粹的技术人员。</p>
</blockquote>
<p>普特定律常常遵循普特推论：</p>
<blockquote>
<p>每一个技术层次，假以时日，能力将逆转。</p>
</blockquote>
<p>这些结论表明，由于各种选择标准和群体组织的趋势，技术组织的工作层面将有一些技术人员，以及一些不了解复杂性和挑战的管理人员。这种现象可能是由于 <a href="#%e5%bd%bc%e5%be%97%e5%8e%9f%e7%90%86-the-peter-principle">彼得原理 (The Peter Principle)</a> 或 <a href="#%e5%91%86%e4%bc%af%e7%89%b9%e6%b3%95%e5%88%99-the-dilbert-principle">呆伯特法则 (The Dilbert Principle)</a> 造成的。</p>
<p>但是，应该强调的是，诸如此类的定律是一种广泛的概括，可能适用于某些类型的组织，而不适用于其他组织。</p>
<p>参见：</p>
<ul>
<li><a href="#%e5%bd%bc%e5%be%97%e5%8e%9f%e7%90%86-the-peter-principle">彼得原理 (The Peter Principle)</a></li>
<li><a href="#%e5%91%86%e4%bc%af%e7%89%b9%e6%b3%95%e5%88%99-the-dilbert-principle">呆伯特法则 (The Dilbert Principle)</a></li>
</ul>
<h3 id="里德定律-reeds-law"><a class="markdownIt-Anchor" href="#里德定律-reeds-law"></a> 里德定律 (Reed’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Reed's_law">英文维基百科</a></li>
</ul>
<blockquote>
<p>大型网络，尤其是社交网络的效用会随着网络的大小呈指数级扩增。</p>
</blockquote>
<p>这一定律基于图论，图论中的效用与可能的子组数量呈正比，并且该增长速度会比参与者的数量和可能的连接对数量要快。奥德利兹科 (Odlyzko) 和其他人认为，里德定律夸大了系统本身的价值，因为它们没有考虑到网络效应中人类认知的限制。</p>
<p>参见:</p>
<ul>
<li><a href="#%e6%a2%85%e7%89%b9%e5%8d%a1%e5%a4%ab%e5%ae%9a%e5%be%8b-metcalfes-law">梅特卡夫定律 (Metcalfe’s Law)</a></li>
<li><a href="#%e9%82%93%e5%b7%b4%e6%95%b0%e5%ad%97-dunbars-number">邓巴数字</a></li>
</ul>
<h3 id="复杂性守恒定律-the-law-of-conservation-of-complexity-or-teslers-law"><a class="markdownIt-Anchor" href="#复杂性守恒定律-the-law-of-conservation-of-complexity-or-teslers-law"></a> 复杂性守恒定律 (The Law of Conservation of Complexity or Tesler’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Law_of_conservation_of_complexity">英文维基百科</a></li>
</ul>
<p>该定律表明系统中存在着一定程度的复杂性，并且不能减少。</p>
<p>系统中的某些复杂性是<strong>无意的</strong>。这是由于结构不良，错误或者糟糕的建模造成的。这种无意的复杂性可以减少或者消除。然而，由于待解决问题固有的复杂性，某些复杂性是<strong>内在的</strong>。这种复杂性可以转移，但不能消除。</p>
<p>该定律有趣的一点是，即使简化整个系统，内在的复杂性也不会降低。它会<strong>转移到用户</strong>，并且用户必须以更复杂的方式行事。</p>
<h3 id="得墨忒耳定律-the-law-of-demeter"><a class="markdownIt-Anchor" href="#得墨忒耳定律-the-law-of-demeter"></a> 得墨忒耳定律 (The Law of Demeter)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Law_of_Demeter">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BE%97%E5%A2%A8%E5%BF%92%E8%80%B3%E5%AE%9A%E5%BE%8B">中文维基百科</a></li>
</ul>
<blockquote>
<p>别和陌生人讲话。</p>
</blockquote>
<p>得墨忒耳定律又称最少知识原则，是一条与面向对象语言有关的软件设计原则。</p>
<p>该定律表明，软件的一个单元应该只与其直接合作者交谈。比如对象 <code>A</code> 引用了对象 <code>B</code>，对象 <code>B</code> 引用了对象 <code>C</code>，则 <code>A</code> 可以直接调用 <code>B</code> 的方法，但不应直接调用 <code>C</code> 的方法。所以如果 <code>C</code> 有一个 <code>dothing()</code> 的方法，<code>A</code> 不应该直接调用，而是使用 <code>B.getC().doThis()</code>。</p>
<p>遵循这一定律可以限制代码更改的范围，使其以后更容易维护、更安全。</p>
<h3 id="抽象泄漏定律-the-law-of-leaky-abstractions"><a class="markdownIt-Anchor" href="#抽象泄漏定律-the-law-of-leaky-abstractions"></a> 抽象泄漏定律 (The Law of Leaky Abstractions)</h3>
<ul>
<li><a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">英文在线地址</a></li>
</ul>
<blockquote>
<p>在某种程度上，所有非平凡的抽象都是有泄漏的。</p>
<p><a href="https://twitter.com/spolsky">乔尔斯·波尔斯基</a> (Joel Spolsky)</p>
</blockquote>
<p>该定律指出，通常用于简化复杂系统的抽象，在某些情况下将底层系统泄漏出来，使得抽象表现出意外的行为。</p>
<p>例如加载文件并读取其内容。文件系统 API 是较低级别内核系统的抽象，它们本身是与磁盘（或 SSD 的闪存）上的数据更改相关的物理过程的抽象。在大多数情况下，处理文件（如二进制数据流）的抽象将起作用。但是，对于磁盘驱动器，顺序读取数据将比随机访问快得多（由于页面错误的开销增加）。但对于 SSD 驱动器，此开销不会出现。需要理解基础细节来处理这种情况（例如，数据库索引文件的良好结构可以减少随机访问的开销），开发人员需要合理的抽象，来处理不同的细节。</p>
<p>当引入更多的抽象时，上面的例子会变得更复杂。Linux 操作系统允许通过网络访问文件，但在本地表示为<strong>普通</strong>文件。如果存在网络故障，这种抽象将会<strong>泄漏</strong>。如果开发人员将这些文件视为<strong>普通</strong>文件，而不考虑它们可能会受到网络延迟和故障的影响，那么解决方案就会出错。</p>
<p>描述该定律的文章表明，过度依赖抽象，加上对底层过程的理解不足，实际上使得问题在某些情况下更加复杂。</p>
<p>参见：</p>
<ul>
<li><a href="#%E9%9A%90%E5%BC%8F%E6%8E%A5%E5%8F%A3%E5%AE%9A%E5%BE%8B-hyrums-law">隐式接口定律</a></li>
</ul>
<p>真实的例子：</p>
<ul>
<li><a href="https://forums.adobe.com/thread/376152">Photoshop 启动缓慢</a>：我过去遇到过一个问题，就是 Photoshop 启动缓慢，有时需要几分钟。问题好像是 Photoshop 启动时，会读取当前默认打印机的一些信息。但是，如果该打印机实际上是一台网络打印机，则可能需要很长的时间。将网络打印机与本地打印机当作同样的抽象，导致连接不良的情况下出现问题。</li>
</ul>
<h3 id="帕金森琐碎定理-the-law-of-triviality"><a class="markdownIt-Anchor" href="#帕金森琐碎定理-the-law-of-triviality"></a> 帕金森琐碎定理 (The Law of Triviality)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Law_of_triviality">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%B8%95%E9%87%91%E6%A3%AE%E7%91%A3%E7%A2%8E%E5%AE%9A%E7%90%86">中文维基百科</a></li>
</ul>
<p>该定理显示，群体将给予更多的时间和注意力来处理琐碎的问题，而不是用来处理严肃而实质性的问题。</p>
<p>常见的虚构例子是委员会批准核电站的计划，他们大部分时间都在讨论自行车棚的结构，而不是电厂本身等更为重要的设计。如果没有大量的专业知识或者准备，很难给非常大的复杂主题讨论提供宝贵的意见。但是，人们希望看到更多意见。因此，他们倾向于将大量时间集中在很容易推敲，但不一定被看重的小细节上。</p>
<p>由上面的虚构例子产生了 <strong>Bike Shedding</strong> 的说法，以形容在琐碎细节上浪费时间这一行为。</p>
<h3 id="unix-哲学-the-unix-philosophy"><a class="markdownIt-Anchor" href="#unix-哲学-the-unix-philosophy"></a> Unix 哲学 (The Unix Philosophy)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Unix_philosophy">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/Unix%E5%93%B2%E5%AD%A6">中文维基百科</a></li>
</ul>
<p>Unix 哲学指软件组件应该很小，并专注于做一件特定的事情。将小而简单以及定义良好的单元组合在一起，而不是使用大而复杂的多用途程序，可以更轻松地构建系统。</p>
<p>像<strong>微服务架构</strong>这种现代实践可以认为是这种哲学的应用，其中服务很小，集中于做一件特定的事情，由简单的构建块组成复杂的行为。</p>
<h3 id="spotify-模型-the-spotify-model"><a class="markdownIt-Anchor" href="#spotify-模型-the-spotify-model"></a> Spotify 模型 (The Spotify Model)</h3>
<ul>
<li><a href="https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/">英文在线地址</a></li>
</ul>
<p>Spotify 模型是团队和组织结构的一种方法，已被 Spotify 实验室推广开来。在此模型中，团队围绕功能而非技术进行组织。</p>
<p>Spotify 模型还普及了部落、行会以及章节的概念，这些是组织结构的其他组成部分。</p>
<h3 id="沃德勒定律-wadlers-law"><a class="markdownIt-Anchor" href="#沃德勒定律-wadlers-law"></a> 沃德勒定律 (Wadler’s Law)</h3>
<ul>
<li><a href="https://wiki.haskell.org/Wadler's_Law">英文在线地址</a></li>
</ul>
<blockquote>
<p>任何语言设计中，讨论下面列表中某个要素所花费的总时间与其位置成正比。</p>
<ol start="0">
<li>语义 (Semantics)</li>
<li>语法 (Syntax)</li>
<li>词法 (Lexical syntax)</li>
<li>注释语法 (Lexical syntax of comments)</li>
</ol>
<p>（简而言之，在语义上花费一个小时，就要在注释语法上花费八个小时）。</p>
</blockquote>
<p>与 <a href="#%E5%B8%95%E9%87%91%E6%A3%AE%E7%90%90%E7%A2%8E%E5%AE%9A%E7%90%86-the-law-of-triviality">帕金森琐碎定理</a> 类似, 沃德勒定律指出，在设计语言时，与这些特征的重要性相比，花在语言结构上的时间过多。</p>
<p>参见：</p>
<ul>
<li><a href="#%E5%B8%95%E9%87%91%E6%A3%AE%E7%90%90%E7%A2%8E%E5%AE%9A%E7%90%86-the-law-of-triviality">帕金森琐碎定理</a></li>
</ul>
<h3 id="惠顿定律-wheatons-law"><a class="markdownIt-Anchor" href="#惠顿定律-wheatons-law"></a> 惠顿定律 (Wheaton’s Law)</h3>
<ul>
<li><a href="http://www.wheatonslaw.com/">网站链接</a></li>
<li><a href="https://dontbeadickday.com/">官方节日</a></li>
</ul>
<blockquote>
<p>不要像个傻子一样。</p>
<p><em>威尔·惠顿 (Wil Wheaton)</em></p>
</blockquote>
<p>这条定律由威尔 · 惠顿（曾出演过星际迷航：下一代、生活大爆炸）创造，这个简洁而有力的定律旨在专业组织内营造和谐和尊重的环境。它可以在与同事交谈、代码审查、反驳观点和批评的时候派上用场。而且通常情况下，人们之间的专业交互也同样适用。</p>
<h2 id="原则"><a class="markdownIt-Anchor" href="#原则"></a> 原则</h2>
<p>原则通常是与设计相关的准则。</p>
<h3 id="乔治伯克斯定律-all-models-are-wrong-or-george-boxs-law"><a class="markdownIt-Anchor" href="#乔治伯克斯定律-all-models-are-wrong-or-george-boxs-law"></a> 乔治·伯克斯定律 (All Models Are Wrong or George Box’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/All_models_are_wrong">英文维基百科</a></li>
</ul>
<blockquote>
<p>All models are wrong, but some are useful.<br />
所有的模型都是错的，但有些是有用的。</p>
<p><em>乔治·伯克斯 (George Box)</em></p>
</blockquote>
<p>这一原则表明，所有的系统模型都是有缺陷的，但只要它们没有太多缺陷，那便有可能是有用的。这一原则源于统计学，同时也适用于科学和计算模型。</p>
<p>大多数软件的一个基本要求都是对某种特定系统进行建模。无论是计算机网络、资源库、社会关系图还是任何其他类型的系统，设计者都必须依据适当的细节程度来建模。过多的细节可能会导致太高的复杂度，过少的细节可能会使模型无法正常工作。</p>
<p>参见:</p>
<ul>
<li><a href="#%E6%8A%BD%E8%B1%A1%E6%B3%84%E6%BC%8F%E5%AE%9A%E5%BE%8B-the-law-of-leaky-abstractions">抽象泄漏定律 (The Law of Leaky Abstractions)</a></li>
</ul>
<h3 id="切斯特森围栏-chestersons-fence"><a class="markdownIt-Anchor" href="#切斯特森围栏-chestersons-fence"></a> 切斯特森围栏 (Chesterson’s Fence)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Wikipedia:Chesterton%27s_fence">英文维基百科</a></li>
</ul>
<blockquote>
<p>在了解现有情况背后的原因之前，不应该进行改进。</p>
</blockquote>
<p>该原则与软件工程中的消除技术负债 (Technical debt) 相关。程序的每一行最初都是出于某种原因编写的，因此根据切斯特森围栏原则，在更改或删除代码之前，即使看起来似乎是多余的或不正确的，也应该尝试完全理解代码的上下文和含义。</p>
<p>该原则的名字来源于 <a href="https://en.wikipedia.org/wiki/G._K._Chesterton">G.K. Chesterson</a> 的一则故事。一个男人横穿马路中央的栅栏，他向市长抱怨这道栅栏没有用还挡路，并要求拆除它。市长问他为什么要在那里建栅栏，那个人回答说不知道。市长接着说：“如果你不知道它的用途，我肯定不会让你把它拆了。你去查查它的用途，之后我可能会允许你拆掉它。”</p>
<h3 id="死海效应-the-dead-sea-effect"><a class="markdownIt-Anchor" href="#死海效应-the-dead-sea-effect"></a> 死海效应 (The Dead Sea Effect)</h3>
<ul>
<li><a href="http://brucefwebster.com/2008/04/11/the-wetware-crisis-the-dead-sea-effect/">Bruce F. Webster 的博客文章</a></li>
</ul>
<blockquote>
<p>“… 那些更有才华，更有效率的 IT 工程师最有可能离开——消失 … （而那些倾向于）留下来的“剩下的人”——是最没有才华和效率的 IT 工程师。”</p>
<p><em>Bruce F. Webster</em></p>
</blockquote>
<p>死海效应表明，在任何一个组织中，工程师的技能、才华和效能往往与他们在公司的时间呈反比。</p>
<p>通常情况下，技术好的工程师很容易在其他的地方找到工作，并且他们往往也会这样做。而技能过时或技术薄弱的工程师则会留在公司，因为其他地方很难找到工作。如果这些工程师在公司里获得了加薪，他们会更愿意留在公司，因为在其他地方找到同等薪酬的工作会很有挑战性。</p>
<h3 id="呆伯特法则-the-dilbert-principle"><a class="markdownIt-Anchor" href="#呆伯特法则-the-dilbert-principle"></a> 呆伯特法则 (The Dilbert Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Dilbert_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%91%86%E4%BC%AF%E7%89%B9%E6%B3%95%E5%89%87">中文维基百科</a></li>
</ul>
<blockquote>
<p>公司会倾向于系统地将工作能力差的员工提升到管理层，以使他们脱离工作流程。</p>
<p><em>史考特·亚当斯 (Scott Adams)</em></p>
</blockquote>
<p>呆伯特原则是由史考特·亚当斯 (Dilbert 漫画连环画的创建者) 开发的一个管理概念，灵感来源于<a href="#%e5%bd%bc%e5%be%97%e5%8e%9f%e7%90%86-the-peter-principle">彼得原理</a>。根据呆伯特原则，工作能力差的员工会被提升到管理层，从而限制他们所能造成的损害。亚当斯首先在 1995 年《华尔街日报》的一篇文章中解释了这一原则，随后在他 1996 年的商业书籍《呆伯特原则》中进行了扩展。</p>
<p>参见：</p>
<ul>
<li><a href="#the-peter-principle">The Peter Principle</a></li>
<li><a href="#%e6%99%ae%e7%89%b9%e5%ae%9a%e5%be%8b-putts-law">普特定律</a></li>
</ul>
<h3 id="帕累托法则-the-pareto-principle-or-the-8020-rule"><a class="markdownIt-Anchor" href="#帕累托法则-the-pareto-principle-or-the-8020-rule"></a> 帕累托法则 (The Pareto Principle or The 80/20 Rule)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Pareto_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>生活中大多数事情不是均匀分布的。</p>
</blockquote>
<p>帕累托法则可以帮你认识到大多数结果来自少数投入：</p>
<ul>
<li>某个软件的 80％ 代码只占了总分配时间的 20％（相反，最难的 20％ 代码部分占用了 80％ 的时间）</li>
<li>20％ 的努力产生了 80％ 的结果</li>
<li>20％ 的工作创造了 80％ 的收入</li>
<li>20％ 的错误导致了 80％ 的崩溃</li>
<li>20％ 的功能导致了 80％ 的使用量</li>
</ul>
<p>在 20 世纪 40 年代，公认为质量控制之父的美国罗马尼亚工程师约瑟夫·朱兰博士，<a href="https://en.wikipedia.org/wiki/Joseph_M._Juran">开始将帕累托法则应用于质量问题</a>。</p>
<p>这个原则也被称为<strong>二八法则</strong>，<strong>重要的少数法则</strong>和<strong>因素稀疏原则</strong>。</p>
<p>现实的例子：</p>
<ul>
<li>微软 2002 年的报告表明，修复最常出现的 20％ 错误，将消除 Windows 和 Office 中 80％ 的<br />
错误和崩溃。<a href="https://www.crn.com/news/security/18821726/microsofts-ceo-80-20-rule-applies-to-bugs-not-just-features.htm">报告地址</a></li>
</ul>
<h3 id="舍基原理-the-shirky-principle"><a class="markdownIt-Anchor" href="#舍基原理-the-shirky-principle"></a> 舍基原理 (The Shirky Principle)</h3>
<p><a href="https://kk.org/thetechnium/the-shirky-prin/">舍基原理解释</a></p>
<blockquote>
<p>Institutions will try to preserve the problem to which they are the solution.<br />
各机构会努力保留他们能够解决的问题。</p>
<p><em>克莱·舍基 (Clay Shirky)</em></p>
</blockquote>
<p>舍基原理表明，复杂的解决方案——一家公司、一个行业或一项技术——可能会过于专注于他们正在解决的问题，以至于在无意中使问题本身变得永久化。这可能是有意为之（公司努力为问题找到新的细微差别，以证明继续开发解决方案是合理的），也可能是无意之举（不愿意接受和构建一个完全解决或避免问题的解决方案）。</p>
<p>相关内容:</p>
<ul>
<li>“当一个人不理解自己的工作就能够获得酬劳时，那么他就很难再去了解这份工作了！”——厄普顿·辛克莱</li>
<li>《创新者的困境》克莱·克里斯滕森</li>
</ul>
<p>参见:</p>
<ul>
<li><a href="#%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99-the-pareto-principle-or-the-8020-rule">帕累托法则 (The Pareto Principle or The 80/20 Rule)</a></li>
</ul>
<h3 id="彼得原理-the-peter-principle"><a class="markdownIt-Anchor" href="#彼得原理-the-peter-principle"></a> 彼得原理 (The Peter Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Peter_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%E5%8E%9F%E7%90%86">中文维基百科</a></li>
</ul>
<blockquote>
<p>在等级制度中，人往往会被提升到他们的“无法胜任的水平”。</p>
<p><em>劳伦斯·彼得 (Laurence J. Peter)</em></p>
</blockquote>
<p>这是由劳伦斯·彼得提出的一个管理概念。彼得原理认为，擅长工作的人会得到提升，直到他们达到不再成功的水平 (即他们所“无法胜任的水平”)。基于此，由于他们资历更高，被公司开除的可能性较小 (除非他们表现非常糟糕)。而且他们将继续担任几乎没有本职技能的职位，即使那些原本让他们成功的能力在新工作中并无必要。</p>
<p>有的工程师对此特别感兴趣，它们最初从事的是深度的技术工作，但走上了<strong>管理</strong>其他工程师的职业道路——这意味着需要一个完全不同的技能树。</p>
<p>参见：</p>
<ul>
<li><a href="#%e5%91%86%e4%bc%af%e7%89%b9%e6%b3%95%e5%88%99">呆伯特法则</a></li>
<li><a href="#%e6%99%ae%e7%89%b9%e5%ae%9a%e5%be%8b-putts-law">普特定律</a></li>
</ul>
<h3 id="鲁棒性原则-the-robustness-principle-or-postels-law"><a class="markdownIt-Anchor" href="#鲁棒性原则-the-robustness-principle-or-postels-law"></a> 鲁棒性原则 (The Robustness Principle or Postel’s Law)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Robustness_principle">英文维基百科</a></li>
</ul>
<blockquote>
<p>在自己所做的事情上要保守, 在接受别人的事情上要自由。</p>
</blockquote>
<p>通常应用于服务器应用程序开发中，该原则指出，你发送给其他人的内容应尽可能最小且符合要求，并且处理不符合要求的输入。</p>
<p>该原则的目标是构建稳健的系统。如果可以理解意图，它们可以处理不良的输入。但是，接受错误格式的输入可能存在安全隐患，特别是此类的输入未经过充分测试。</p>
<h3 id="solid"><a class="markdownIt-Anchor" href="#solid"></a> SOLID</h3>
<p>这是一个缩写，指的是：</p>
<ul>
<li>S：<a href="#%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99-the-single-responsibility-principle">单一功能原则 (The Single Responsibility Principle)</a></li>
<li>O：<a href="#%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99-the-openclosed-principle">开闭原则 (The Open/Closed Principle)</a></li>
<li>L：<a href="#%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99-the-liskov-substitution-principle">里氏替换原则 (The Liskov Substitution Principle)</a></li>
<li>I：<a href="#%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99-the-interface-segregation-principle">接口隔离原则 (The Interface Segregation Principle)</a></li>
<li>D：<a href="#%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99-the-dependency-inversion-principle">依赖反转原则 (The Dependency Inversion Principle)</a></li>
</ul>
<p>这些是 <a href="#todo">Object-Oriented Programming</a> 的关键原则。诸如此类的设计原则能够帮助开发人员构建更易于维护的系统。</p>
<h3 id="单一功能原则-the-single-responsibility-principle"><a class="markdownIt-Anchor" href="#单一功能原则-the-single-responsibility-principle"></a> 单一功能原则 (The Single Responsibility Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Single_responsibility_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E4%B8%80%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>每个模块或者类只应该有一项功能。</p>
</blockquote>
<p><a href="#solid">SOLID</a> 的第一个原则。这个原则表明模块或者类只应该做一件事。实际上，这意味着对程序功能的单个小更改，应该只需要更改一个组件。例如，更改密码验证复杂性的方式应该只需要更改程序的一部分。</p>
<p>理论上讲，这使代码更健壮，更容易更改。知道正在更改的组件只有一个功能，这意味着测试更改更容易。使用前面的例子，更改密码复杂性组件应该只影响与密码复杂性相关的功能。变更具有许多功能的组件可能要困难得多。</p>
<p>参见：</p>
<ul>
<li><a href="#todo">Object-Orientated Programming</a></li>
<li><a href="#solid">SOLID</a></li>
</ul>
<h3 id="开闭原则-the-openclosed-principle"><a class="markdownIt-Anchor" href="#开闭原则-the-openclosed-principle"></a> 开闭原则 (The Open/Closed Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>实体应开放扩展并关闭修改。</p>
</blockquote>
<p><a href="#solid">SOLID</a> 的第二个原则。这个原则指出实体（可以是类、模块、函数等）应该能够使它们的行为易于扩展，但是它们的扩展行为不应该被修改。</p>
<p>举一个假设的例子，想象一个能够将 Markdown 转换为 HTML 的模块。如果可以扩展模块，而不修改内部模块来处理新的 markdown 特征，而无需修改内部模块，则可以认为是开放扩展。如果用户不能修改处理现有 Markdown 特征的模块，那么它被认为是关闭修改。</p>
<p>这个原则与面向对象编程紧密相关，让我们可以设计对象以便于扩展，但是可以避免以意想不到的方式改变其现有对象的行为。</p>
<p>参见：</p>
<ul>
<li><a href="#todo">Object-Orientated Programming</a></li>
<li><a href="#solid">SOLID</a></li>
</ul>
<h3 id="里氏替换原则-the-liskov-substitution-principle"><a class="markdownIt-Anchor" href="#里氏替换原则-the-liskov-substitution-principle"></a> 里氏替换原则 (The Liskov Substitution Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Liskov_substitution_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>可以在不破坏系统的情况下，用子类型替换类型。</p>
</blockquote>
<p><a href="#solid">SOLID</a> 的第三个原则。该原则指出，如果组件依赖于类型，那么它应该能够使用该类型的子类型，而不会导致系统失败或者必须知道该子类型的详细信息。</p>
<p>举个例子，假设我们有一个方法，读取 XML 文档。如果该方法使用基类型 <strong>file</strong>，则从 <strong>file</strong> 派生的任何内容，都能用在该方法中。 如果 <strong>file</strong> 支持反向查找，并且 xml 解析器使用该函数，但是派生类型 <strong>network file</strong> 尝试反向查找时失败，则 <strong>network file</strong> 将违反该原则。</p>
<p>该原则与面向对象编程紧密相关，必须仔细建模、层次结构，以避免让系统用户混淆。</p>
<p>参见：</p>
<ul>
<li><a href="#todo">Object-Orientated Programming</a></li>
<li><a href="#solid">SOLID</a></li>
</ul>
<h3 id="接口隔离原则-the-interface-segregation-principle"><a class="markdownIt-Anchor" href="#接口隔离原则-the-interface-segregation-principle"></a> 接口隔离原则 (The Interface Segregation Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Interface_segregation_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>不应强制任何客户端依赖于它不使用的方法。</p>
</blockquote>
<p><a href="#solid">SOLID</a> 的第四个原则。该原则指出组件的消费者不应该依赖于它实际上不使用的组件函数。</p>
<p>举一个例子，假设我们有一个方法，读取 XML 文档。它只需要读取文件中的字节，向前移动或向后移动。如果由于一个与文件结构不相关的功能发生更改（例如更新文件安全性的权限模型），需要更新此方法，则该原则已失效。文件最好实现 <strong>可查询流</strong> 接口，并让 XML 读取器使用该接口。</p>
<p>该原则与面向对象编程紧密相关，其中接口，层次结构和抽象类型用于不同组件的 <a href="#todo">minimise the coupling</a>。 <a href="#todo">Duck typing</a> 是一种通过消除显式接口来强制执行该原则的方法。</p>
<p>参见：</p>
<ul>
<li><a href="#todo">Object-Orientated Programming</a></li>
<li><a href="#solid">SOLID</a></li>
<li><a href="#todo">Duck Typing</a></li>
<li><a href="#todo">Decoupling</a></li>
</ul>
<h3 id="依赖反转原则-the-dependency-inversion-principle"><a class="markdownIt-Anchor" href="#依赖反转原则-the-dependency-inversion-principle"></a> 依赖反转原则 (The Dependency Inversion Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>高级模块不应该依赖于低级实现。</p>
</blockquote>
<p><a href="#solid">SOLID</a> 的第五个原则。该原则指出，更高级别的协调组件不应该知道其依赖项的详细信息。</p>
<p>举个例子，假设我们有一个从网站读取元数据的程序。我们假设主要组件必须知道下载网页内容的组件，以及可以读取元数据的组件。如果我们考虑依赖反转，主要组件将仅依赖于可以获取字节数据的抽象组件，然后是一个能够从字节流中读取元数据的抽象组件，主要组件不需要了解 TCP、IP、HTTP、HTML 等。</p>
<p>这个原则很复杂，因为它似乎可以反转系统的预期依赖性（因此得名）。实践中，这也意味着，单独的编排组件必须确保抽象类型的正确实现被使用（例如在前面的例子中，必须提供元数据读取器组件、HTTP 文件下载功能和 HTML 元标签读取器）。然后，这涉及诸如 <a href="#todo">Inversion of Control</a> 和 <a href="#todo">Dependency Injection</a> 之类的模式。</p>
<p>参见：</p>
<ul>
<li><a href="#todo">Object-Orientated Programming</a></li>
<li><a href="#solid">SOLID</a></li>
<li><a href="#todo">Inversion of Control</a></li>
<li><a href="#todo">Dependency Injection</a></li>
</ul>
<h3 id="不要重复你自己原则-the-dry-principle"><a class="markdownIt-Anchor" href="#不要重复你自己原则-the-dry-principle"></a> 不要重复你自己原则 (The DRY Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E4%B8%80%E6%AC%A1%E4%B8%94%E4%BB%85%E4%B8%80%E6%AC%A1">中文维基百科</a></li>
</ul>
<blockquote>
<p>系统中，每一块知识都必须是单一、明确而权威的。</p>
</blockquote>
<p>DRY 是 <strong>Do not Repeat Yourself</strong> 的缩写。这个原则旨在帮助开发人员减少代码的重复性，并将公共代码保存在一个地方。最初由安德鲁·亨特和戴夫·托马斯在 1999 年出版的《程序员修炼之道》中引用。</p>
<blockquote>
<p>与 DRY 相反的是 <em>WET</em>（功能实现两次或者喜欢打字 Write Everything Twice or We Enjoy Typing）。</p>
</blockquote>
<p>实际上，如果你在两个或更多的地方有相同的功能，你可以使用 DRY 原则将它们合并为一个，并在任何你需要的地方重复使用。</p>
<p>参见：</p>
<ul>
<li>《程序员修炼之道》<a href="https://en.wikipedia.org/wiki/The_Pragmatic_Programmer">英文维基百科</a></li>
<li>《程序员修炼之道》<a href="https://book.douban.com/subject/1417047/">豆瓣</a></li>
</ul>
<h3 id="kiss-原则-the-kiss-principle"><a class="markdownIt-Anchor" href="#kiss-原则-the-kiss-principle"></a> KISS 原则 (The KISS Principle)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/KISS_principle">英文维基百科</a></li>
<li><a href="https://zh.wikipedia.org/wiki/KISS%E5%8E%9F%E5%88%99">中文维基百科</a></li>
</ul>
<blockquote>
<p>保持简单和直白。</p>
</blockquote>
<p>KISS 原则指明了如果大多数的系统能够保持简单而非复杂化，那么他们便能够工作在最佳状态。因此，简单性应该是设计时的关键指标，同时也要避免不必要的复杂度。这个短语最初出自 1960 年的美国海军飞机工程师凯利 · 约翰逊 (Kelly Johnson)。</p>
<p>这一原则的最好例证便是约翰逊给设计工程师一些实用工具的故事。那时的他们正面临着一个挑战，即他们参与设计的喷气式飞机必须能够让普通的机械师在战场上仅仅用这些工具进行维修，因此，“直白”这个词应指的是损坏的事物本身和修复用工具的复杂度两者之间的关系，而非工程师们自身的能力水平。</p>
<p>参见：</p>
<ul>
<li><a href="#%e7%9b%96%e5%b0%94%e5%ae%9a%e5%be%8b-galls-law">盖尔定律</a></li>
</ul>
<h3 id="你不需要它原则-yagni"><a class="markdownIt-Anchor" href="#你不需要它原则-yagni"></a> 你不需要它原则 (YAGNI)</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it">英文维基百科</a></li>
</ul>
<p>这是 <em><strong>Y</strong>ou <strong>A</strong>ren’t <strong>G</strong>onna <strong>N</strong>eed <strong>I</strong>t</em> 的缩写。</p>
<blockquote>
<p>只有当你需要某些东西的时候，才去实现它们，而不是在你预见的时候。</p>
<p><a href="https://twitter.com/RonJeffries">Ron Jeffries</a> 是极限编程的创始人之一以及书籍《Extreme Programming Installed》的作者。</p>
</blockquote>
<p>极限编程原则告诫开发人员，他们应该只实现当前所需的功能，并避免实现未来需要的功能，仅在必要时才实现。</p>
<p>遵守这一原则可以减小代码库大小，同时避免时间和生产力浪费在没有价值的功能上。</p>
<p>参见：</p>
<ul>
<li><a href="#%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95">阅读清单《极限编程安装》</a></li>
</ul>
<h3 id="分布式计算的谬论-the-fallacies-of-distributed-computing"><a class="markdownIt-Anchor" href="#分布式计算的谬论-the-fallacies-of-distributed-computing"></a> 分布式计算的谬论 (The Fallacies of Distributed Computing)</h3>
<p><a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing">英文维基百科</a></p>
<p>又称 <em>网络计算的谬误</em>，这是一系列关于分布式计算的猜想（或者看法），这些猜想可能会引起软件开发中的失败。这些假设是：</p>
<ul>
<li>网络可靠</li>
<li>延迟为零</li>
<li>带宽无限</li>
<li>网络安全</li>
<li>拓扑恒定</li>
<li>单一管理员</li>
<li>运输成本为零</li>
<li>网络为同构的</li>
</ul>
<p>前 4 各项目由 <a href="https://en.wikipedia.org/wiki/Bill_Joy">Bill Joy</a> 和 <a href="https://twitter.com/aka_pugs">Tom Lyon</a> 于 1991 左右提出。并被 <a href="https://en.wikipedia.org/wiki/James_Gosling">James Gosling</a> 首次归类于“网络计算的谬误”；后 <a href="https://en.wikipedia.org/wiki/L._Peter_Deutsch">L. Peter Deutsch</a> 添加了第 5、6、7 个谬误；90 年代末，Gosling 添加了最后一个谬误。</p>
<p>这些内容受到了 <a href="https://en.wikipedia.org/wiki/Sun_Microsystems">太阳微系统 (Sun Microsystems)</a> 内部当时所发生的事情的启发。</p>
<p>在设计弹性代码的时候，应该仔细考虑这些谬误，并假设其中任何一个谬误都可能引起处理分布式系统的复杂性和现实性时的逻辑缺陷。</p>
<p>参见:</p>
<ul>
<li><a href="https://medium.com/baseds/foraging-for-the-fallacies-of-distributed-computing-part-1-1b35c3b85b53">寻找分布式计算的谬误（第一部分） - Vaidehi Joshion Medium</a></li>
</ul>
<h2 id="阅读清单"><a class="markdownIt-Anchor" href="#阅读清单"></a> 阅读清单</h2>
<p>如果你觉得这些概念很有趣，你可能会喜欢以下书籍。</p>
<ul>
<li>《极限编程安装》<a href="https://www.goodreads.com/en/book/show/67834">谷歌阅读地址</a> - 涵盖极限编程的核心原则。</li>
<li>《人月神话》<a href="https://www.goodreads.com/book/show/13629.The_Mythical_Man_Month">谷歌阅读地址</a>、<a href="https://book.douban.com/subject/26358448/">豆瓣地址</a> - 软件工程的经典书籍。这本书的中心主题就是<a href="#%E5%B8%83%E9%B2%81%E5%85%8B%E6%96%AF%E6%B3%95%E5%88%99-brookss-law">布鲁克斯法则</a> 。</li>
<li>《哥德尔、艾舍尔、巴赫：集异璧之大成》<a href="https://www.goodreads.com/book/show/24113.G_del_Escher_Bach">谷歌阅读地址</a>、<a href="https://book.douban.com/subject/1291204/">豆瓣地址</a> - 这本书很难分类。<a href="#%e4%be%af%e4%b8%96%e8%be%be%e5%ae%9a%e5%be%8b-hofstadters-law">侯世达定律</a> 来自此书。</li>
<li>《大教堂与市集》<a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">英文维基百科</a> - 一本关于开源的文集，<a href="#%E6%9E%97%E7%BA%B3%E6%96%AF%E5%AE%9A%E5%BE%8B-linuss-law">林纳斯定律 (Linus’s Law)</a>源于此书。</li>
<li>《呆伯特原则》<a href="https://www.goodreads.com/book/show/85574.The_Dilbert_Principle">谷歌阅读地址</a> - 一本审视美国企业的漫画书，其作者创造了<a href="#%e5%91%86%e4%bc%af%e7%89%b9%e6%b3%95%e5%88%99-the-dilbert-principle">呆伯特法则</a>。</li>
<li>《彼得原理》<a href="https://www.goodreads.com/book/show/890728.The_Peter_Principle">谷歌阅读地址</a> - 一本专注于大型组织和人员管理的挑战的漫画书，也是<a href="#%e5%bd%bc%e5%be%97%e5%8e%9f%e7%90%86-the-peter-principle">彼得原理</a>的来源。</li>
<li>《计算机程序的构造和解释》<a href="https://www.goodreads.com/book/show/43713">谷歌阅读地址</a> - 如果你是 MIT 或剑桥大学的 CS、EE 学生，这是一本编程的入门书，并且被称为“人生的转折点”。</li>
</ul>
<h2 id="在线资源"><a class="markdownIt-Anchor" href="#在线资源"></a> 在线资源</h2>
<p>一些有用的资源和阅读资料。</p>
<ul>
<li><a href="https://www.cbinsights.com/research/report/tech-laws-success-failure">CB Insights: 8 Laws Driving Success In Tech: Amazon’s 2-Pizza Rule, The 80/20 Principle, &amp; More</a> - 这是以前有趣的文章，介绍了一些对技术上产生了很大影响的定律。</li>
</ul>
<h2 id="相关项目"><a class="markdownIt-Anchor" href="#相关项目"></a> 相关项目</h2>
<ul>
<li><a href="https://tips.darekkay.com/html/hacker-laws-en.html">Tip of the Day</a> - Receive a daily hacker law/principle.</li>
<li><a href="https://github.com/umutphp/hacker-laws-cli">Hacker Laws CLI</a> - List, view and see random laws from the terminal!</li>
<li><a href="https://github.com/marketplace/actions/hacker-laws-action">Hacker Laws Action</a> - Adds a random Hacker Law to a pull request as a small gift for the contributor, thanks <a href="https://github.com/umutphp">Umut Işık</a></li>
</ul>
<h2 id="todo"><a class="markdownIt-Anchor" href="#todo"></a> TODO</h2>
<p>嗨！如果你读到这里，点击了一个我尚未编写的主题链接，我感到很抱歉。这是正在进行中的工作！</p>
<p>随意给 <a href="https://github.com/dwmkerr/hacker-laws">hacker-laws</a> 和 <a href="https://github.com/nusr/hacker-laws-zh">hacker-laws-zh</a> 提 <a href="https://github.com/dwmkerr/hacker-laws/issues">Issue</a> 或者 <a href="https://github.com/dwmkerr/hacker-laws/pulls">Pull Request</a>。</p>
]]></content>
      <categories>
        <category>资料</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title>常见bug记录</title>
    <url>/2022/05/13/%E5%B8%B8%E8%A7%81bug%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录在操作系统、浏览器中常见的bug及其解决方案。</p>
<span id="more"></span>
<p>1.<code>github</code>中网址前缀为<code>raw.githubusercontent.com</code>的资源（图片、文档等）无法访问。</p>
<p>解决方案：</p>
<p>根据 <a href="https://learnku.com/articles/43426">解决 raw.githubusercontent.com 无法访问的问题</a>，可能是由于某些原因导致 DNS 被污染，Windows系统上可以通过修改 <code>hosts</code> 文件解决该问题，步骤如下：</p>
<ul>
<li>1）通过 <a href="https://www.ipaddress.com/">IPAddress.com</a> 查询域名 <code>raw.githubusercontent.com</code>所在网址：</li>
</ul>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-14/image-20220513014334969.png" alt="image-20220513014334969" /></p>
<ul>
<li>
<p>2）在路径 <code>C:\Windows\System32\drivers\etc</code>下的<code>hosts</code>文件最后一行添加如下信息：</p>
<p><code>185.199.108.133 raw.githubusercontent.com</code></p>
<p>PS：可能<code>hosts</code>文件为只读文件，此时需要右键单击<code>hosts</code>文件修改其访问权限。</p>
</li>
</ul>
</br>
<p>2.在 Windows10 系统中，当默认浏览器设置为谷歌浏览器时，偶尔会出现点击其他应用（如飞书，TIM等）的链接无法跳转到谷歌浏览器打开此链接的情况。</p>
<p>解决方案：重启电脑</p>
</br>
<p>3.在Windows 10系统中，当使用<code>git bash</code>终端进行package的安装和初始化时，无法在选项之间切换，如下图所示，无法在 No/Yes 的两个选项之间切换：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515153036885.png" alt="image-20220515153036885" /></p>
<p>查询资料可知，<code>git bash</code>终端并不提供交互功能，因此无法进行选项切换。</p>
<p>解决方案：使用<code>cmd</code>或者其他的终端</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/55753151/cant-use-arrow-keys-in-git-bash-windows">Can’t use arrow keys in Git Bash (Windows)</a></li>
</ol>
</blockquote>
</br>
<p>4.在 <a href="https://convertio.co/zh/document-converter/">Convertio</a> 进行文件转换时，转换完成后在点击文件下载按钮后会跳转到 403 Forbidden 页面，如下图所示：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515162921157.png" alt="image-20220515162921157" /></p>
<p>推测原因：在通过 ssr 挂代理后，Convertio 不允许代理 ip 进行文件下载</p>
<p>解决方案：关闭 ssr 代理</p>
</br>
<p>5.在使用 VSCode 编辑器进行开发时，常常会遇到编辑环境变量并保存后在 VSCode 终端中环境变量并未同步更新的情况，即使关闭 VSCode 后重新打开也是如此，如下图所示，在将<code>gcc.exe</code>所在<code>bin</code>添加到环境变量后在 VSCode 终端中并没有更新：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220516004330258.png" alt="image-20220516004330258" /></p>
<p>猜测：VSCode 将之前的环境变量缓存起来，在重新启动 VSCode 后环境变量并未及时更新</p>
<p>解决方案：安装 <code>Chocolatey</code> 并运行<code>refreshenv</code> 命令更新环境变量</p>
<p>步骤：</p>
<ul>
<li>
<p>关闭代理（在打开代理的情况下安装策略不同）</p>
</li>
<li>
<p>以管理员身份运行<code>cmd</code>并运行如下命令：</p>
<pre class="line-numbers language-none"><code class="language-none">@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;[System.Net.ServicePointManager]::SecurityProtocol &#x3D; 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;community.chocolatey.org&#x2F;install.ps1&#39;))&quot; &amp;&amp; SET &quot;PATH&#x3D;%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>
<p>关闭<code>cmd</code>终端后重新打开以更新<code>Chocolatey</code>配置</p>
</li>
<li>
<p>在打开的<code>cmd</code>终端中运行<code>refreshenv</code>更新环境变量：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220516004936734.png" alt="image-20220516004936734" /></p>
</li>
<li>
<p>在<code>cmd</code>终端中运行<code>code</code>启动 VSCode</p>
</li>
<li>
<p>在打开的 VSCode 的<code>cmd</code>终端中运行<code>gcc</code>发现环境变量更新成功：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-16/image-20220516005208707.png" alt="image-20220516005208707" /></p>
</li>
</ul>
<p>PS：遗憾的是，通过右键文件夹打开 VSCode 环境变量仍然未更新</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/54653343/vs-code-refresh-integrated-terminal-environment-variables-without-restart-logout">VS Code Refresh Integrated Terminal Environment Variables without Restart/Logout</a></li>
<li><a href="https://docs.chocolatey.org/en-us/choco/setup#installing-chocolatey">Installing Chocolatey</a></li>
<li><a href="https://stackoverflow.com/questions/171588/is-there-a-command-to-refresh-environment-variables-from-the-command-prompt-in-w">Is there a command to refresh environment variables from the command prompt in Windows?</a></li>
</ol>
</blockquote>
</br>
<p>6.powershell启动时出现以下报错信息：</p>
<pre class="line-numbers language-gettext" data-language="gettext"><code class="language-gettext">File D:\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1 cannot be loaded because running scripts is disabled on this system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>以管理员身份打开powershell</li>
<li>运行<code>set-executionpolicy remotesigned</code></li>
<li>键入<code>A</code> (Yes to All) 并回车</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://answers.microsoft.com/en-us/windows/forum/all/whats-wrong-with-my-windows-powershell/f05e72f2-a429-4ee0-81fb-910c8c8a1306">What’s Wrong With My Windows PowerShell</a></li>
</ol>
</blockquote>
<p>7.IDM 总是在浏览器中下载<code>f.txt</code>文件。</p>
<p>原因：</p>
<p>在五年之前，在全世界的许多网站上都会显示Google 的广告，但由于谷歌广告系统的一个小 error，广告可能不会显示，而是将 code 下载到一个 txt 文件中，Google 已经采取措施解决了这个问题；五年前在 Firefox 浏览器上也出现了这个问题，但过几天就被解决了。对使用各种浏览器的用户来说，当浏览各种类型的网站时这个问题偶尔会发生，但是没有什么风险。</p>
<p>解决方案：</p>
<ul>
<li>清楚浏览器缓存</li>
<li>更新浏览器到最新版本</li>
<li>进行全面的病毒扫描</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://howtofix.guide/f-txt-not-virus/">F.txt Help! Computer keeps downloading “f.txt” file…</a></li>
<li><a href="https://stackoverflow.com/questions/28535603/google-chrome-forcing-download-of-f-txt-file">Google Chrome forcing download of “f.txt” file</a></li>
</ol>
</blockquote>
</br>
<p>8.打开 Microsoft Store 时出现 0x800704cf 错误，如下图所示：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220608231526381.png" alt="image-20220608231526381" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://answers.microsoft.com/zh-hans/windows/forum/all/0x800704cf/0949346c-ed7c-40d6-a72d-3dd2fd3d0306">0x800704cf</a></li>
</ol>
</blockquote>
</br>
9.当默认浏览器为google时，点击其他应用内的链接无法跳转到浏览器。
解决方案：在系统设置默认应用里将Web browser改为其他浏览器，发现可以正常跳转链接，然后改回为google，重启电脑
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220917112759.png)
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/xichengqc/article/details/102988258">win10点击超链接无法跳转到浏览器</a></li>
</ol>
</blockquote>
</br>
10.点击Windows10 OneDrive应用没有反应
> 参考资料：
> 1. [OneDrive无法打开的原因](https://zhuanlan.zhihu.com/p/343335173)
</br>
在git bash终端运行java程序无法通过`Ctrl+Z`终止`hasNext()`输入，如下图所示：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221001224702.png)
其原因在于git bash不支持通过`Ctrl+Z`发送Signal 18即`SIGTSTP`信号。在cmd中运行会发现`Ctrl+Z`后回车可以正常终止输入：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221001225100.png)
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/50110571/python-error-suppressing-signal-18-to-win32">python error Suppressing signal 18 to win32</a></li>
</ol>
</blockquote>
</br>
11.使用conda创建新环境时出现以下报错：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221016160914.png)
1. `conda clean -i`
2. 删除`.condarc`文件，关闭代理
3. 重新打开Anaconda Prompt窗口，运行命令创建新环境。（此时删除了所有镜像，使用官方源进行安装，未尝试镜像源安装）
> 参考资料：
> 1. [conda install packages error: Collecting package metadata (current_repodata.json): failed](https://stackoverflow.com/questions/61134985/conda-install-packages-error-collecting-package-metadata-current-repodata-json)
> 2. [Managing channels](https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html)
</br>
12.安装`pydensecrf`pip包时出现如下报错：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221025102938.png)
提示`Microsoft Visual C++ 14.0 or greater is required`。
解决方案：
1. 按照参考资料3安装对应Visual Studio工具
安装后使用`pip install pydensecrf`安装出现新的报错：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221025111316.png)
2. 参照参考资料4将`pydensecrf-1.0rc2-cp38-cp38-win32.whl`下载到本地安装后出现如下报错：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221025111520.png)
更换为`amd64.whl`版本后解决。
> 参考资料：
> 1. [Error "Microsoft Visual C++ 14.0 is required (Unable to find vcvarsall.bat)"](https://stackoverflow.com/questions/29846087/error-microsoft-visual-c-14-0-is-required-unable-to-find-vcvarsall-bat)
> 2. [Pip error: Microsoft Visual C++ 14.0 is required](https://stackoverflow.com/questions/44951456/pip-error-microsoft-visual-c-14-0-is-required)
> 3. [Error "Microsoft Visual C++ 14.0 is required (Unable to find vcvarsall.bat)"](https://stackoverflow.com/questions/29846087/error-microsoft-visual-c-14-0-is-required-unable-to-find-vcvarsall-bat)
> 4. [Pydensecrf 安装报错_MenahemLi的博客-CSDN博客](https://blog.csdn.net/qq_36978986/article/details/108130879)
> 5. [Archived: Python Extension Packages for Windows - Christoph Gohlke](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pydensecrf)
</br>
13.运行`npm install package-name`时，卡在`sill idealTree buildDeps`没有反应。
解决方案：
- 配置淘宝镜像：`npm config set registry https://registry.npm.taobao.org `
- 检验镜像配置：`npm config get registry `
- 继续运行：`npm install`。
- 如果问题仍然存在，运行：`npm set strict-ssl false`
> 参考资料：
> 1. [1.运行npm install 时，卡在sill idealTree buildDeps没有反应_豆豆豆豆芽的博客-CSDN博客](https://blog.csdn.net/weixin_46182244/article/details/121302702)
> 2. [[BUG] "sill idealTree buildDeps" takes a lot of time a project with workspaces · Issue #3257 · npm/cli · GitHub](https://github.com/npm/cli/issues/3257)
</br>
14.出现`RuntimeError: latex was not able to process the following string`：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221121004755.png)
解决方案：安装MiKTeX并添加到环境变量。（安装正版LaTeX更好）
> 参考资料：
> 1. [Getting MiKTeX](https://miktex.org/download)
</br>
15.Clash for Windows端口为0且无法更改，导致代理不可用：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221121235520.png)
原因：系统更新后，由于使用`Hyper-V`的功能，虚拟机需要映射一部分端口，并且在系统更新后对动态映射的端口进行了更改，导致占用了本来的`Clash`使用的端口。
解决方案：更改系统进行动态映射的端口范围
- cmd中`netsh int ipv4 show dynamicport tcp`，可以发现系统更新后动态端口范围变为从1024开始，导致原先的1080端口被占用
- `netsh int ipv4 set dynamicport tcp start=49152 num=16383`，将为tcp协议分配的端口范围进行更改
- `netsh int ipv4 set dynamicport udp start=49152 num=16383`，将为udp协议分配的端口范围进行更改
- `netsh interface ipv4 show excludedportrange protocol=tcp`，结果如下：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221122000350.png)
- 说明此时端口设置已经更新，重启电脑后可以在Clash中对端口进行设置。
>就参考资料：
>1. [解决 Clash for windows 端口为 0 导致无法使用_51CTO博客_clash for windows连不上](https://blog.51cto.com/frytea/4146902)
>2. [Clash For Windows代理端口为0问题 - 寒梦](https://siegelion.cn/2022/01/31/Clash%20For%20Windows%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3%E4%B8%BA0%E9%97%AE%E9%A2%98/)
</br>
16.v2rayN出现`v2rayN tcp:127.0.0.1: rejected proxy/socks: unknow Socks version`刷屏：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221121235442.png)
问题：系统的代理设置协议为`http`和`https`协议，而v2rayN只支持`socks5`协议，导致出错。
解决方案：将系统代理设置协议更改为`socks5`，或者将代理软件改为SSR或者Clash，此二者同时支持`http`和`socks5`协议。
> 参考资料：
> 1. [如何解决“rejected v2ray.com/core/proxy/socks: unknown Socks version: ”的问题 - Xuing的个人博客](https://xuing.cn/security/v2ray_unknown_socks.html)
</br>
<p>17.桌面出现<code>Microsoft OneNote Namespace Extension for Windows Desktop Search</code>文件夹无法删除。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://superuser.com/questions/1674358/cant-delete-microsoft-onenote-namespace-extension-for-windows-desktop-search">Can’t delete “Microsoft OneNote Namespace Extension for Windows Desktop Search” from desktop - automatically gets restored - Super User</a></li>
</ol>
</blockquote>
</br>
18.Windows系统删除文件时出现`该项目不在XX中，请确认该项目的位置然后重试`。
解决方案见参考资料：
> 参考资料：
> 1. [解决删除文件时出现“该项目不在XX中，请确认该项目的位置然后重试”的提示-阿里云开发者社区](https://developer.aliyun.com/article/910256)
</br>
19.windows10无法编辑系统环境变量（Can't edit system variables）
解决方案：`Win+X -> Y -> Advanced system settings`进入编辑
> 参考资料：
> 1. [Redirecting](https://answers.microsoft.com/en-us/windows/forum/all/cant-edit-environment-variables-in-windows-10/29ca1561-5c4d-4c0d-ab93-808411a062a3)
</br>
20.VSCode Copilot报错`GitHub Copilot could not connect to server. Extension activation failed: "Unexpected token 'N', "Not Found" is not valid JSON"`
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/orgs/community/discussions/14305">VSCode Extension GitHub Copilot could not connect to server · community · Discussion #14305 · GitHub</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows10右键菜单添加功能</title>
    <url>/2022/05/15/%E5%9C%A8Windows10%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>本文记录一下在Windows10右键菜单中添加各项功能的流程：</p>
<span id="more"></span>
<p>1.Windows10 右键新建菜单中添加<code>.md</code>文件。</p>
<p>步骤如下：</p>
<ul>
<li>安装 Typora，一个<code>md</code>文件编辑器</li>
<li>键盘 <code>Win + R</code>快捷键打开窗口，输入<code>regedit</code>打开注册表编辑器 (registry editor)</li>
<li>定位到 <code>HKEY_CLASSES_ROOT\.md</code></li>
<li>点击 <code>.md</code> 文件夹，双击右侧 (默认，Default) 项编辑字符串，将数值数据 (value data) 改为 <code>Typora.md</code></li>
<li>右键 <code>.md</code> 文件夹，新建项 (key) ，将新建项命名为 <code>ShellNew</code></li>
<li>右键 <code>ShellNew</code> ，新建字符串项 (string value) ，把新建的字符串项改为 <code>NullFile</code></li>
</ul>
<p>结果如图：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515202646881.png" alt="image-20220515202646881" /></p>
<blockquote>
<p>参考资料：<a href="https://www.zhihu.com/question/267616299">Win10下如何在右键新建菜单中添加.md文件</a></p>
<p>PS：答案有误，应该将答案中的 <code>Typora.exe</code> 改为 <code>Typora.md</code></p>
</blockquote>
</br>
<p>2.Windows10 右键菜单中添加在此处打开WSL (Windows Subsystem for Linux)。</p>
<p>步骤如下：</p>
<ul>
<li>键盘 <code>Win + R</code>快捷键打开窗口，输入<code>regedit</code>打开注册表编辑器 (registry editor)</li>
<li>定位到 <code>HKEY_CLASSES_ROOT\Directory\Background\shell</code></li>
<li>点击<code>shell</code>文件夹，新建项 (key) ,将新建项命名为<code>Ubuntu</code></li>
<li>点击<code>Ubuntu</code>文件夹，双击右侧 (默认，Default) 项编辑字符串，将数值数据 (value data) 改为 <code>Open Ubuntu here :-)</code></li>
<li>右键<code>Ubuntu</code>文件夹，新建项 (key) ，并将其命名为<code>command</code>，点击<code>command</code>文件夹，双击右侧 (默认，Default) 项编辑字符串，将数值数据 (value data) 改为 <code>C:\Windows\System32\wsl.exe</code> (即wsl.exe文件所在位置)</li>
<li>右键<code>Ubuntu</code>文件夹，新建字符串项 (string value) ，名称设为 Icon，值改为<code>C:\Windows\System32\wsl.exe</code>。此操作用于给右键WSL添加图标</li>
</ul>
<p>结果如图：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515202553533.png" alt="image-20220515202553533" /></p>
<blockquote>
<p>参考资料：<a href="https://www.i4k.xyz/article/gulang03/79177500">将 Windows10 中的 WSL 添加至右键菜单</a></p>
</blockquote>
</br>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>常见概念和术语记录</title>
    <url>/2022/05/13/%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5%E5%92%8C%E6%9C%AF%E8%AF%AD%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录在编程学习中常见的概念和术语及其对应的操作。</p>
<span id="more"></span>
<p>1.容器：</p>
<ul>
<li><a href="https://linux.cn/article-14584-1.html?utm_source=qqmail&amp;utm_medium=qqmail">当下运行容器的 3 个步骤</a></li>
<li><a href="https://opensource.com/article/22/5/guide-containers-images">A hands-on guide to images and containers for developers</a></li>
</ul>
</br>
<p>2.Socket</p>
<ol>
<li><a href="https://www.zhihu.com/question/21383903">Socket 为什么要翻译成套接字？ - 知乎</a></li>
<li><a href="https://www.cnblogs.com/h5l0/p/15114948.html#:~:text=%E5%A5%97%E6%8E%A5%E5%AD%97%E7%9A%84%E6%A0%B9%E6%BA%90,%E7%9F%A5%E4%B9%8E%E7%94%A8%E6%88%B7%E7%9A%84%E5%9B%9E%E7%AD%94%EF%BC%89%E3%80%82">套接字为什么叫套接字？ - H5L0 - 博客园</a></li>
</ol>
</br>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>概念</tag>
        <tag>术语</tag>
      </tags>
  </entry>
  <entry>
    <title>开发和学习工具整理</title>
    <url>/2022/09/10/%E5%BC%80%E5%8F%91%E5%92%8C%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文记录一下好用的开发工具：</p>
<span id="more"></span>
<h3 id="配置文件可视化"><a class="markdownIt-Anchor" href="#配置文件可视化"></a> 配置文件可视化</h3>
<ol>
<li><a href="https://github.com/AykutSarac/jsoncrack.com">JSON Crack</a>：将JSON数据可视化为图的形式：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220910171015.png" alt="" /></li>
<li><a href="https://altearius.github.io/tools/json/index.html">JSON Visualization</a></li>
<li><a href="https://editor.herowand.com/">https://editor.herowand.com</a>：对JSON/YAML/XML/TOML/CSV等配置文件进行可视化。</li>
</ol>
<h3 id="软件内部信息可视化"><a class="markdownIt-Anchor" href="#软件内部信息可视化"></a> 软件内部信息可视化</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://lmy.medium.com/7-tools-for-visualizing-a-codebase-41b7cddb1a14">7 tools for visualizing a codebase</a></li>
</ol>
</blockquote>
<h3 id="编程字体"><a class="markdownIt-Anchor" href="#编程字体"></a> 编程字体</h3>
<ol>
<li><a href="https://www.programmingfonts.org">https://www.programmingfonts.org</a> ：可以在线查看300种字体的代码风格和样式</li>
</ol>
<h3 id="linux-和-shell"><a class="markdownIt-Anchor" href="#linux-和-shell"></a> Linux 和 Shell</h3>
<ol>
<li><a href="https://links.bestxtools.com/explainshell.com/">explainshell.com</a>：输入一段shell命令行，将参数和对应帮助文本匹配</li>
<li><a href="https://dashdash.io/">Linux Man Pages – Dash Dash</a>：将Linux Manual Page以更友好的方式组织</li>
</ol>
<h3 id="uml图工具"><a class="markdownIt-Anchor" href="#uml图工具"></a> UML图工具</h3>
<ol>
<li><a href="https://plantuml.com/zh/">PlantUML</a>：通过类似于markdown的纯文本语法生成UML图，VSCode插件中使用Alt+D打开预览。<a href="http://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000">PlantUML在线编辑器</a></li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://gaoxiang15125.gitee.io/2020/10/07/VSCode%E4%B8%8BPlantUML%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/">VSCode下PlantUML使用教程</a></li>
<li><a href="https://www.bilibili.com/video/BV1kv411q7Kt/">VSCode还能绘制UML图?</a></li>
</ol>
</blockquote>
<h3 id="大型txt文件打开工具"><a class="markdownIt-Anchor" href="#大型txt文件打开工具"></a> 大型txt文件打开工具</h3>
<ol>
<li><a href="https://www.emeditor.com/">emeditor</a>：可以秒开几十G的文件，已经支持16TB文件。</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/279637736">超大txt用什么工具秒开？</a></li>
</ol>
</blockquote>
<h3 id="本地代码搜索工具"><a class="markdownIt-Anchor" href="#本地代码搜索工具"></a> 本地代码搜索工具</h3>
<ol>
<li><a href="https://www.mythicsoft.com/agentransack/download/">agent ransack</a>：询问chatGPT得知</li>
</ol>
<h3 id="数据结构和算法可视化"><a class="markdownIt-Anchor" href="#数据结构和算法可视化"></a> 数据结构和算法可视化</h3>
<ol>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">Data Structure Visualization</a>：洛杉矶大学提供的数据结构可视化在线网站</li>
<li><a href="https://visualgo.net/zh">visualgo</a>：数据结构和算法动态可视化中文版。新加坡国立大学提供。</li>
<li><a href="https://algorithm-visualizer.org/">Algorithm Visualizer</a></li>
</ol>
<h3 id="sql数据库"><a class="markdownIt-Anchor" href="#sql数据库"></a> SQL数据库</h3>
<ol>
<li><a href="https://sqlflow.gudusoft.com/?utm_content=buffer137ea&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer#/">SQLFlow</a></li>
<li><a href="https://www.sqlchat.ai/">SQL Chat</a>：将自然语言转换为SQL查询语句</li>
</ol>
<h3 id="各种画图工具"><a class="markdownIt-Anchor" href="#各种画图工具"></a> 各种画图工具</h3>
<ol>
<li>awesome-diagramming](<a href="https://github.com/shubhamgrg04/awesome-diagramming">https://github.com/shubhamgrg04/awesome-diagramming</a>)：该仓库整理了用于画各种图的工具</li>
</ol>
<h3 id="打字练习"><a class="markdownIt-Anchor" href="#打字练习"></a> 打字练习</h3>
<ol>
<li><a href="https://www.keybr.com/">Typing Practice</a>：界面最为简洁友好的打字网站（英文）</li>
<li><a href="https://www.speedcoder.net/">Speedcoder</a>：练习各种编程语言语法的打字网站（英文）</li>
</ol>
<h3 id="kubernetes"><a class="markdownIt-Anchor" href="#kubernetes"></a> Kubernetes</h3>
<ol>
<li><a href="https://github.com/guangzhengli/k8s-tutorials">k8s-tutorials</a>：k8s教程（中文）</li>
<li><a href="https://github.com/up9inc/mizu">mizu</a>：k8s API流量查看工具</li>
<li><a href="https://opensource.com/article/22/12/kubernetes-articles">6 Kubernetes articles every open source enthusiast should read | Opensource.com</a></li>
<li></li>
</ol>
<h3 id="chrome实用插件"><a class="markdownIt-Anchor" href="#chrome实用插件"></a> Chrome实用插件</h3>
<ol>
<li><a href="https://www.escapelife.site/posts/28dc24ac.html">Vimium浏览器插件使用 | Escape</a></li>
</ol>
<h3 id="postgres数据库在线练习环境"><a class="markdownIt-Anchor" href="#postgres数据库在线练习环境"></a> Postgres数据库在线练习环境</h3>
<ol>
<li><a href="https://www.crunchydata.com/developers/tutorials">Postgres Tutorials | Crunchy Data</a></li>
</ol>
<h3 id="git教程"><a class="markdownIt-Anchor" href="#git教程"></a> Git教程</h3>
<ol>
<li><a href="https://github.com/bg6cq/learngit">GitHub - bg6cq/learngit: 大家一起学git</a></li>
<li><a href="https://backlog.com/git-tutorial/cn/">猴子都能懂的GIT入门 | 贝格乐（Backlog）</a></li>
</ol>
<h3 id="快捷键练习网站"><a class="markdownIt-Anchor" href="#快捷键练习网站"></a> 快捷键练习网站</h3>
<ol>
<li><a href="https://www.shortcutfoo.com/?utm_source=bestxtools.com">Learn shortcuts and commands | ShortcutFoo</a>：Vim/VSCode/Git等工具的快捷键练习网站</li>
</ol>
<h3 id="在线编译网站"><a class="markdownIt-Anchor" href="#在线编译网站"></a> 在线编译网站</h3>
<ol>
<li><a href="https://godbolt.org/">Compiler Explorer</a>：可以在线将高级语言汇编为汇编语言</li>
<li><a href="https://dogbolt.org/">Decompiler Explorer</a>：可以将二进制文件反编译为原始文件</li>
</ol>
<h3 id="写作工具"><a class="markdownIt-Anchor" href="#写作工具"></a> 写作工具：</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230102002712.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://twitter.com/xyz98/status/1607731247987433473">Tweet / Twitter</a></li>
</ol>
</blockquote>
<h3 id="jupyter和jupyterlab"><a class="markdownIt-Anchor" href="#jupyter和jupyterlab"></a> Jupyter和JupyterLab</h3>
<ol>
<li>可以使用如下命令指定Jupyter或JupyterLab打开的系统盘</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jupyter notebook --notebook-dir<span class="token operator">=</span>D:/

jupyter lab --notebook-dir<span class="token operator">=</span>D:/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>也可以根据下面参考资料3更改Jupyter打开的默认文件夹</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html">Starting JupyterLab — JupyterLab 3.6.0b0 documentation</a></li>
<li><a href="https://stackoverflow.com/questions/55078484/open-jupyter-notebook-from-a-drive-other-than-c-drive">python - Open Jupyter Notebook from a Drive Other than C Drive - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/35254852/how-to-change-the-jupyter-start-up-folder#:~:text=In%20the%20start%20menu%2C%20right,new%20%22D%3A%5Cpath%22%20.">path - How to change the Jupyter start-up folder - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h3>
<ol>
<li><a href="https://www.highflux.io/blog/what-makes-git-hard-to-use">What makes Git so hard to use? | HighFlux</a></li>
</ol>
<h3 id="各种语言-框架在线运行网站"><a class="markdownIt-Anchor" href="#各种语言-框架在线运行网站"></a> 各种语言、框架在线运行网站</h3>
<ol>
<li><a href="https://replit.com/@huanguanghoulai/SillyUncommonPipeline#main.cpp">SillyUncommonPipeline - Replit</a>：C++在线REPL</li>
<li><a href="https://stackblitz.com/">StackBlitz | Instant Dev Environments | Click. Code. Done.</a>：包括JavaScript/TypeScript/React/Vue 3等语言和框架的在线编写环境</li>
<li><a href="https://go.dev/play/">Go Playground - The Go Programming Language</a>：go语言官方在线编写环境</li>
<li><a href="https://pythontutor.com/visualize.html#mode=edit">Python Tutor code visualizer: Visualize code in Python, JavaScript, C, C++, and Java</a>：Python/JavaScript/C/C++/Java等在线可视化代码环境</li>
<li><a href="https://www.jdoodle.com/online-java-compiler/">Online Java Compiler - Online Java Editor - Java Code Online</a>：Java在线编写环境</li>
<li><a href="https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021">Rust Playground</a>：Rust在线编写环境</li>
<li><a href="https://codepen.io/trending">CodePen: Online Code Editor and Front End Web Developer Community</a>：HTML/CSS/JavaScript三件套在线编写环境</li>
<li><a href="https://jvns.ca/blog/2023/04/17/a-list-of-programming-playgrounds/">A list of programming playgrounds</a>：别人整理的编程palygrounds列表</li>
<li><a href="https://www.typescriptlang.org/play">TypeScript: TS Playground - An online editor for exploring TypeScript and JavaScript</a>：TypeScript在线运行</li>
</ol>
<h3 id="调试工具"><a class="markdownIt-Anchor" href="#调试工具"></a> 调试工具</h3>
<ol>
<li><a href="https://github.com/microsoft/vscode-recipes">GitHub - microsoft/vscode-recipes</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>开发环境配置</title>
    <url>/2022/12/03/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下各种开发环境的配置：</p>
<span id="more"></span>
<h3 id="scheme"><a class="markdownIt-Anchor" href="#scheme"></a> Scheme</h3>
<p>Tips:</p>
<ol>
<li>安装DrRacket包时如果无法在GUI中安装，可以关闭GUI后通过<code>raco pkg install package_name</code>来安装。</li>
</ol>
<blockquote>
<p>参考资料：<br />
1. <a href="https://chee5e.space/sicp-vscode-setup/">VS Code 搭建 SICP 环境 | 芝士部落格</a><br />
2. <a href="https://zhuanlan.zhihu.com/p/344423980">使用VSCode来做SICP习题 - 知乎</a><br />
3. <a href="https://zhuanlan.zhihu.com/p/37056659">DrRacket 的安装与 SICP 的配置 - 知乎</a><br />
4. <a href="https://zhuanlan.zhihu.com/p/262180614">AyaSEditor:在vscode中写scheme/racket - 知乎</a><br />
5. <a href="https://www.zhihu.com/question/295010022">如何使用终端运行 Racket？ - 知乎</a></p>
</blockquote>
<h3 id="emacs和standard-ml"><a class="markdownIt-Anchor" href="#emacs和standard-ml"></a> Emacs和Standard ML</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/swy_swy_swy/article/details/122253920">Windows10 Emacs-SML开发环境搭建_swy_swy_swy的博客-CSDN博客</a></li>
<li><a href="https://www.bilibili.com/video/BV12P4y1j7EL/">21天学会Emacs 2022年版本（第一天）_哔哩哔哩_bilibili</a></li>
<li><a href="https://book.emacs-china.org/#org8733b41">Master Emacs in 21 Days</a></li>
<li><a href="https://www.coursera.org/learn/programming-languages/supplement/mi5oU/part-a-software-installation-and-use-sml-and-emacs">use sml and emacs</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Scheme</tag>
      </tags>
  </entry>
  <entry>
    <title>开阔视野的文章和博客</title>
    <url>/2022/12/26/%E5%BC%80%E9%98%94%E8%A7%86%E9%87%8E%E7%9A%84%E6%96%87%E7%AB%A0%E5%92%8C%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>本文记录一下一些开阔视野的文章和博客：</p>
<span id="more"></span>
<h3 id="lambda-cube"><a class="markdownIt-Anchor" href="#lambda-cube"></a> Lambda cube</h3>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Lambda_cube">Lambda cube - Wikipedia</a></li>
</ol>
<h3 id="interpreters-vs-compilers"><a class="markdownIt-Anchor" href="#interpreters-vs-compilers"></a> interpreters vs compilers</h3>
<ol>
<li><a href="https://javascript.plainenglish.io/the-most-common-programming-misconception-interpreted-vs-compiled-languages-5d38e1904c8d">The Most Common Programming Misconception: Interpreted Vs. Compiled Languages | by Nicholas Obert | JavaScript in Plain English</a></li>
</ol>
<h3 id="closures-闭包-和-objects-对象"><a class="markdownIt-Anchor" href="#closures-闭包-和-objects-对象"></a> Closures (闭包) 和 Objects (对象)</h3>
<ol>
<li><a href="https://www.iteye.com/blog/rednaxelafx-245022">关于对象与闭包的关系的一个有趣小故事 - Script Ahead, Code Behind - ITeye博客</a>：评论是精髓</li>
<li><a href="https://www.zhihu.com/question/27416568/answer/36565794">JVM的规范中允许编程语言语义中创建闭包(closure)吗？ - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/28190927">为什么Java闭包不能通过返回值之外的方式向外传递值？ - 知乎</a></li>
</ol>
<h3 id="y组合子y-combinator"><a class="markdownIt-Anchor" href="#y组合子y-combinator"></a> Y组合子（Y combinator）</h3>
<ol>
<li><a href="https://yinwang0.wordpress.com/2012/04/09/reinvent-y/">How to reinvent the Y combinator – Surely I Am Joking</a></li>
<li><a href="http://mindhacks.cn/2006/10/15/cantor-godel-turing-an-eternal-golden-diagonal/">康托尔、哥德尔、图灵——永恒的金色对角线(rev#2) – 刘未鹏 | Mind Hacks</a></li>
<li><a href="https://www.zhihu.com/question/21099081">Y不动点组合子用在哪里？ - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/20115649/answer/14029761">函数式编程的 Y Combinator 有哪些实用价值？ - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/262284625">Y组合子（Y Combinator）| The Little Schemer 第九章 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/547191928">Y组合子的一个启发式推导 - 知乎</a></li>
<li><a href="https://matt.might.net/articles/compiling-up-to-lambda-calculus/">Compiling up to the λ-calculus: Church encodings and the Y combinator</a></li>
</ol>
<h3 id="cps-continuation-passing-style"><a class="markdownIt-Anchor" href="#cps-continuation-passing-style"></a> CPS (Continuation-Passing Style)</h3>
<ol>
<li><a href="https://matt.might.net/articles/by-example-continuation-passing-style/">By example: Continuation-passing style in JavaScript</a></li>
<li><a href="https://sighingnow.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/continuation_passing_style.html">Continuation Passing Style | HE Tao</a></li>
<li><a href="https://kb.cnblogs.com/page/94325/">示例：JavaScript中的后续传递风格_知识库_博客园</a></li>
</ol>
<h3 id="协变-逆变和不变"><a class="markdownIt-Anchor" href="#协变-逆变和不变"></a> 协变、逆变和不变</h3>
<ol>
<li><a href="https://zh.m.wikipedia.org/zh-hans/%E5%8D%8F%E5%8F%98%E4%B8%8E%E9%80%86%E5%8F%98">协变与逆变 - 维基百科，自由的百科全书</a></li>
<li><a href="https://blog.csdn.net/B1151937289/article/details/119523464">协变 (Covariant)、逆变 (Contravariant) 与不变 (Invariant)_小麦先生的博客-CSDN博客_contravariant</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/41814387">逆变、协变与子类型，以及Rust - 知乎</a></li>
</ol>
<h3 id="递归函数和语义"><a class="markdownIt-Anchor" href="#递归函数和语义"></a> 递归函数和语义</h3>
<ol>
<li><a href="https://thzt.github.io/2017/02/24/recursive-function-1/">递归函数（一）：开篇 | 何幻</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%8C%87%E7%A7%B0%E8%AF%AD%E4%B9%89">指称语义 - 维基百科，自由的百科全书</a></li>
<li><a href="https://www.zhihu.com/question/23861885">操作语义、指称语义、代数语义、公理语义学，谁能简单介绍下？ - 知乎</a></li>
</ol>
<h3 id="惰性求值-lazy-evaluation-和-贪婪求值-greedy-evaluation"><a class="markdownIt-Anchor" href="#惰性求值-lazy-evaluation-和-贪婪求值-greedy-evaluation"></a> 惰性求值 (Lazy Evaluation) 和 贪婪求值 (Greedy evaluation)</h3>
<ol>
<li><a href="https://existentialtype.wordpress.com/2011/04/24/the-real-point-of-laziness/">The Point of Laziness | Existential Type</a></li>
<li><a href="https://zh.m.wikipedia.org/zh-hans/%E5%8F%8A%E6%97%A9%E6%B1%82%E5%80%BC">及早求值 - 维基百科，自由的百科全书</a>：Eage Evaluation，又称贪婪求值</li>
<li><a href="https://zh.m.wikipedia.org/zh-hans/%E6%83%B0%E6%80%A7%E6%B1%82%E5%80%BC">惰性求值 - 维基百科，自由的百科全书</a></li>
</ol>
<h3 id="代数数据类型-algebraic-data-type"><a class="markdownIt-Anchor" href="#代数数据类型-algebraic-data-type"></a> 代数数据类型 (algebraic data type)</h3>
<ol>
<li><a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E6%95%B0%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B#:~:text=%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%B0%A4%E5%85%B6,%E5%A4%9A%E4%B8%AA%E5%80%BC%EF%BC%8C%E5%8D%B3%E5%AD%97%E6%AE%B5%E3%80%82">代数数据类型 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/383030756">ReScript的特性二: 代数数据类型 - 知乎</a></li>
<li><a href="https://www.tweag.io/blog/2022-09-08-fp1-typopaedia-pythonica/">Functional Python, Part I: Typopædia Pythonica - Tweag</a>：Python代数数据类型</li>
<li><a href="https://www.tweag.io/blog/2023-01-19-fp2-dial-m-for-monoid/">Functional Python, Part II: Dial M for Monoid - Tweag</a>：Python Monoid</li>
<li><a href="https://brian-candler.medium.com/functional-programming-illustrated-5974586a8cf0">Functional Programming illustrated in Python: Part 0 | by Brian Candler | Medium</a>：Python中的FP系列文章</li>
</ol>
<h3 id="类型系统"><a class="markdownIt-Anchor" href="#类型系统"></a> 类型系统</h3>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Type_system#Existential_types">Type system - Wikipedia</a></li>
<li><a href="https://zh.wikipedia.org/zh-cn/%E9%A1%9E%E5%9E%8B%E7%B3%BB%E7%B5%B1">类型系统 - 维基百科，自由的百科全书</a></li>
<li><a href="https://cstheory.stackexchange.com/questions/39814/what-is-the-difference-between-system-f-and-hindley-milner-type-system">What is the difference between System F and Hindley-Milner type system? - Theoretical Computer Science Stack Exchange</a></li>
<li><a href="https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system">Hindley–Milner type system - Wikipedia</a></li>
<li><a href="https://zh.wikipedia.org/zh-sg/%E5%9E%8B%E5%88%A5%E5%AE%89%E5%85%A8">类型安全 - 维基百科，自由的百科全书</a></li>
<li><a href="https://www.zhihu.com/question/29072167">OCaml 类型系统的缺陷有哪些？ - 知乎</a>：有关于<a href="https://en.wikipedia.org/wiki/Value_restriction">value restriction</a> (值限制)的部分。</li>
</ol>
<h3 id="collections-container-and-iterators"><a class="markdownIt-Anchor" href="#collections-container-and-iterators"></a> Collections, Container and Iterators</h3>
<ol>
<li><a href="https://computersciencewiki.org/index.php/Collections">Collections - Computer Science Wiki</a></li>
<li><a href="https://en.wikipedia.org/wiki/Container_(type_theory)">Container (type theory) - Wikipedia</a></li>
<li><a href="https://en.wikipedia.org/wiki/Collection_(abstract_data_type)">Collection (abstract data type) - Wikipedia</a></li>
<li><a href="https://en.wikipedia.org/wiki/Iterator">Iterator - Wikipedia</a></li>
</ol>
<h3 id="type-inference-和-type-check"><a class="markdownIt-Anchor" href="#type-inference-和-type-check"></a> type inference 和 type check</h3>
<ol>
<li><a href="https://pingfangx.github.io/java-tutorials/java/generics/genTypeInference.html">类型推断(Java™ 教程-Java Tutorials 中文版&gt;学习 Java 语言&gt;泛型(更新))</a></li>
<li><a href="https://www.cnblogs.com/yeak2001/articles/6028850.html">你不知道的JAVA系列一 Type Inference - yeak2001 - 博客园</a></li>
<li><a href="https://pingfangx.github.io/java-tutorials/java/generics/genTypeInference.html">类型推断(Java™ 教程-Java Tutorials 中文版&gt;学习 Java 语言&gt;泛型(更新))</a></li>
<li><a href="https://shzhangji.com/cnblogs/2020/10/04/python-static-typing/#:~:text=Python%20%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%9F%A5%E6%98%AF,%E6%97%A0%E6%B3%95%E4%BD%9C%E4%B8%BA%E4%BB%BB%E6%84%8F%E7%B1%BB%E5%9E%8B%E4%BD%BF%E7%94%A8%E3%80%82">Python 类型检查实践 | 张吉的博客</a></li>
</ol>
<h3 id="write-a-linter"><a class="markdownIt-Anchor" href="#write-a-linter"></a> write a linter</h3>
<ol>
<li><a href="https://github.com/caramelomartins/awesome-linters">GitHub - caramelomartins/awesome-linters.</a>：该仓库收集了针对各种语言的linter</li>
<li><a href="https://python.plainenglish.io/asts-and-making-a-python-linter-from-scratch-79e66e8d99b8">Making a Python Linter from Scratch | by Benjamin Campbell | Python in Plain English</a></li>
<li><a href="https://guicommits.com/how-to-write-linter-python/">How to write a linter in Python 🐍✨</a></li>
</ol>
<h3 id="多态-polymorphism"><a class="markdownIt-Anchor" href="#多态-polymorphism"></a> 多态 (polymorphism)</h3>
<ol>
<li><a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E6%80%81_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)">多态 (计算机科学) - 维基百科，自由的百科全书</a></li>
<li><a href="https://en.wikipedia.org/wiki/Polymorphism_(computer_science)">Polymorphism (computer science) - Wikipedia</a></li>
<li><a href="https://zh.m.wikipedia.org/zh/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B">鸭子类型 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/382098633">ReScript的特性一: 鲜为人知的Row polymorphism - 知乎</a></li>
<li><a href="https://en.wikipedia.org/wiki/Row_polymorphism">Row polymorphism - Wikipedia</a></li>
</ol>
<h3 id="multimethod-multiple-dispatch"><a class="markdownIt-Anchor" href="#multimethod-multiple-dispatch"></a> multimethod (multiple dispatch)</h3>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/105953560">为什么要多重派发？（Why multiple dispatch?) - 知乎</a></li>
<li><a href="https://juejin.cn/post/6844903426577399821">Python 有什么奇技淫巧？ - 知乎 - 掘金</a></li>
<li><a href="https://clojure.org/reference/multimethods">Clojure - Multimethods and Hierarchies</a></li>
<li><a href="https://clojure.org/about/runtime_polymorphism">Clojure - Runtime Polymorphism</a></li>
</ol>
<h3 id="meta-programming"><a class="markdownIt-Anchor" href="#meta-programming"></a> meta-programming</h3>
<ol>
<li><a href="https://www.zhihu.com/question/23856985">怎么理解元编程？ - 知乎</a>：编写能改变语言语法特性或者运行时特性的程序。一种语言本来做不到的事情，通过你编程来修改它就可以做到。</li>
<li><a href="https://www.destroyallsoftware.com/talks/wat">Wat</a>：其中给出了运行时meta programming的经典范例</li>
</ol>
<h3 id="callcc"><a class="markdownIt-Anchor" href="#callcc"></a> call/cc</h3>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Call-with-current-continuation">call-with-current-continuation - Wikipedia</a></li>
</ol>
<h3 id="parsers"><a class="markdownIt-Anchor" href="#parsers"></a> Parsers</h3>
<ol>
<li><a href="https://engineering.desmos.com/articles/pratt-parser/">How Desmos uses Pratt Parsers - Desmos Engineering</a>：编译器如何将代码解析为AST</li>
</ol>
<h3 id="dynamic-programming-动态规划"><a class="markdownIt-Anchor" href="#dynamic-programming-动态规划"></a> Dynamic Programming (动态规划)</h3>
<ol>
<li><a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">动态规划 - 维基百科，自由的百科全书</a></li>
<li><a href="https://www.zhihu.com/question/23995189/answer/35429905">什么是动态规划（Dynamic Programming）？动态规划的意义是什么？ - 知乎</a></li>
<li><a href="https://patterns.eecs.berkeley.edu/?page_id=416">Dynamic Programming Pattern | Our Pattern Language</a></li>
</ol>
<h3 id="抽象泄露"><a class="markdownIt-Anchor" href="#抽象泄露"></a> 抽象泄露</h3>
<ol>
<li><a href="https://zh.m.wikipedia.org/zh-hans/%E6%8A%BD%E8%B1%A1%E6%B3%84%E6%BC%8F">抽象泄漏 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26803553">关于Leaky Abstraction - 知乎</a></li>
<li><a href="https://www.51cto.com/article/669206.html">一篇文章带你了解抽象泄漏（Leaky Abstractions）-51CTO.COM</a></li>
</ol>
<h3 id="不同语言处理机制"><a class="markdownIt-Anchor" href="#不同语言处理机制"></a> 不同语言处理机制</h3>
<ol>
<li><a href="https://www.amazingcto.com/best-way-to-handle-errors-for-a-programming-language/">Musings about the best error handling mechanism | Amazing CTO</a></li>
<li><a href="https://andreabergia.com/blog/2023/05/error-handling-patterns/">Error handling patterns · Andrea Bergia’s Website</a></li>
</ol>
<h3 id="软件架构"><a class="markdownIt-Anchor" href="#软件架构"></a> 软件架构</h3>
<ol>
<li><a href="https://arc42.org/overview">arc42 Template Overview - arc42</a>：Software Architecture Template。</li>
<li><a href="https://www.workingsoftware.dev/software-architecture-documentation-the-ultimate-guide/">The Ultimate Guide To Software Architecture Documentation</a></li>
<li><a href="https://herbcaudill.com/words/20190219-rewrite-refactor-reinvent">Rewrite, refactor, or reinvent? | Herb Caudill</a>：项目是否应该推翻重写的6个案例</li>
</ol>
<h3 id="competitive-programming"><a class="markdownIt-Anchor" href="#competitive-programming"></a> Competitive Programming</h3>
<ol>
<li><a href="https://github.com/ShahjalalShohag/Competitive-Programming-A-Complete-Guideline">Competitive-Programming-A-Complete-Guideline</a>：关于Competitive Programming的介绍</li>
</ol>
<h3 id="开发实践"><a class="markdownIt-Anchor" href="#开发实践"></a> 开发实践</h3>
<ol>
<li><a href="https://www.piglei.com/articles/the-answer-is-in-the-code-fulfill-requirements/">答案在代码中：“实现需求”的双重含义 | Piglei</a></li>
</ol>
<h3 id="正则表达式"><a class="markdownIt-Anchor" href="#正则表达式"></a> 正则表达式</h3>
<ol>
<li><a href="https://mp.weixin.qq.com/s/i_C4ATnajxRDGlTA8dJDHg">Weixin Official Accounts Platform</a></li>
</ol>
<h3 id="一些概念"><a class="markdownIt-Anchor" href="#一些概念"></a> 一些概念</h3>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Language_primitive">Language primitive - Wikipedia</a>：language primitives是在一种编程语言中可以使用的最简单的元素。一个primitive是对程序员来说可以获得的最小&quot;unit of processing&quot;，或者可以是语言中表达式的atomic元素。Primitives是units with a meaning，也就是是语言中的semantic value。它们不同于parser中的tokens，其是最小的elements of syntax (语法元素)。</li>
<li><a href="https://www.programiz.com/c-programming/c-keywords-identifier#:~:text=Keywords%20are%20predefined%2C%20reserved%20words,be%20used%20as%20an%20identifier.">C Keywords and Identifiers</a>：keywords是预定义的，保留的单词，其对compiler/interpreter有专门的meaning。keywords是语法的一部分，不能作为一个identifier。identifier指那些对给定entities (如variable, functions, structures等)的名称。</li>
</ol>
<h3 id="发展历史"><a class="markdownIt-Anchor" href="#发展历史"></a> 发展历史</h3>
<ol>
<li><a href="https://thevaluable.dev/guide-terminal-shell-console/?continueFlag=43b44873b1c6d9c4016629ebd5706bdf">A Guide to the Terminal, Console, and Shell</a>：讲述了Terminal/Console/Shell的由来和发展</li>
<li><a href="https://www.swyx.io/the-end-of-localhost">The End of Localhost</a>：该文讲述使用localhost进行本地调试的方法可能被云端调试终结</li>
</ol>
<h3 id="其它领域"><a class="markdownIt-Anchor" href="#其它领域"></a> 其它领域</h3>
<ol>
<li><a href="https://colah.github.io/posts/2015-09-Visual-Information/">Visual Information Theory – colah’s blog</a>：视觉信息论，通过可视化表示信息。该博客的其它文章也非常推荐，作者引用高达60000</li>
</ol>
<h3 id="有限状态机"><a class="markdownIt-Anchor" href="#有限状态机"></a> 有限状态机</h3>
<ol>
<li><a href="https://stately.ai/viz">XState Visualizer</a>：实现了有限状态机的JS库，设计很简洁</li>
<li></li>
</ol>
<h3 id="浏览器"><a class="markdownIt-Anchor" href="#浏览器"></a> 浏览器</h3>
<ol>
<li><a href="https://mp.weixin.qq.com/s/wjrcO2Ej7BEThWVsCnXEtA">Chrome 浏览器运行原理你了解多少？</a>：介绍了Chrome浏览器的运行原理</li>
</ol>
<h3 id="linux相关"><a class="markdownIt-Anchor" href="#linux相关"></a> Linux相关</h3>
<ol>
<li><a href="https://jvns.ca/blog/2023/08/03/behind--hello-world/">Behind “Hello World” on Linux</a>：在Linux上运行一个简单的<code>.py</code>文件后，背后发生了什么</li>
</ol>
<h3 id="网络"><a class="markdownIt-Anchor" href="#网络"></a> 网络</h3>
<ol>
<li><a href="https://jvns.ca/blog/2023/07/28/why-is-dns-still-hard-to-learn/">Why is DNS still hard to learn?</a></li>
<li><a href="https://www.kawabangga.com/posts/5330">有关 TLS/SSL 证书的一切 | 卡瓦邦噶！</a></li>
</ol>
<h3 id="内存管理"><a class="markdownIt-Anchor" href="#内存管理"></a> 内存管理</h3>
<ol>
<li><a href="https://johnnysswlab.com/measuring-memory-subsystem-performance/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=measuring-memory-subsystem-performance">Measuring Memory Subsystem Performance - Johnny’s Software Lab</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>开阔视野</tag>
      </tags>
  </entry>
  <entry>
    <title>成组概念厘清</title>
    <url>/2022/05/15/%E6%88%90%E7%BB%84%E6%A6%82%E5%BF%B5%E5%8E%98%E6%B8%85/</url>
    <content><![CDATA[<p>本文记录一下成组的易混淆或者应该加以区分的概念。</p>
<span id="more"></span>
<p>1.Error vs Exception：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/5813614/what-is-difference-between-errors-and-exceptions">What is difference between Errors and Exceptions?</a></li>
<li><a href="https://stackoverflow.com/questions/912334/differences-between-exception-and-error">Differences between Exception and Error</a></li>
</ol>
</blockquote>
</br>
2.`Execution` vs `Applying/Application` vs `Invoking/Invocation` vs `Calling`：
>参考资料：
>1. [What's the difference between "call" and "invoke"?](https://stackoverflow.com/questions/18505422/whats-the-difference-between-call-and-invoke)
</br>
3.`override` vs `overload` in Java：
- override：在Java中指superclass和subclass中具有相同的method signature的方法。
- overload：在Java中指相同类中具有相同方法名，但是具有不同的参数的方法。
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220911212932.png)
> 参考资料：
> 1. [Overriding vs Overloading in Java](https://www.digitalocean.com/community/tutorials/overriding-vs-overloading-in-java)
</br>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>概念</tag>
      </tags>
  </entry>
  <entry>
    <title>当键入google.com发生了什么</title>
    <url>/2022/05/18/%E5%BD%93%E9%94%AE%E5%85%A5google.com%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/</url>
    <content><![CDATA[<p>本文转载自 github 项目 <a href="https://github.com/skyline75489/what-happens-when-zh_CN">当···时发生了什么</a>，放在博客上便于查看。</p>
<span id="more"></span>
<p>这个仓库试图回答一个古老的面试问题：当你在浏览器中输入 <a href="http://google.com">google.com</a> 并且按下回车之后发生了什么？</p>
<p>不过我们不再局限于平常的回答，而是想办法回答地尽可能具体，不遗漏任何细节。</p>
<p>这将是一个协作的过程，所以深入挖掘吧，并且帮助我们一起完善它。仍然有大量的细节等待着你来添加，欢迎向我们发送Pull Requset！</p>
<p>这些内容使用 <a href="https://creativecommons.org/publicdomain/zero/1.0/">Creative Commons Zero</a> 协议发布</p>
<h2 id="按下g键"><a class="markdownIt-Anchor" href="#按下g键"></a> 按下&quot;g&quot;键</h2>
<p>接下来的内容介绍了物理键盘和系统中断的工作原理，但是有一部分内容却没有涉及。当你按下&quot;g&quot;键，浏览器接收到这个消息之后，会触发自动完成机制。浏览器根据自己的算法，以及你是否处于隐私浏览模式，会在浏览器的地址框下方给出输入建议。大部分算法会优先考虑根据你的搜索历史和书签等内容给出建议。你打算输入<br />
“<a href="http://google.com">google.com</a>”，因此给出的建议并不匹配。但是输入过程中仍然有大量的代码在后台运行，你的每一次按键都会使得给出的建议更加准确。甚至有可能在你输入之前，浏览器就将&quot;<a href="http://google.com">google.com</a>&quot; 建议给你。</p>
<h2 id="回车键按下"><a class="markdownIt-Anchor" href="#回车键按下"></a> 回车键按下</h2>
<p>为了从零开始，我们选择键盘上的回车键被按到最低处作为起点。在这个时刻，一个专用于回车键的电流回路被直接地或者通过电容器间接地闭合了，使得少量的电流进入了键盘的逻辑电路系统。这个系统会扫描每个键的状态，对于按键开关的电位弹跳变化进行噪音消除(debounce)，并将其转化为键盘码值。在这里，回车的码值是13。键盘控制器在得到码值之后，将其编码，用于之后的传输。现在这个传输过程几乎都是通过通用串行总线(USB)或者蓝牙(Bluetooth)来进行的，以前是通过PS/2或者ADB连接进行。</p>
<p><em>USB键盘：</em></p>
<ul>
<li>键盘的USB元件通过计算机上的USB接口与USB控制器相连接，USB接口中的第一号针为它提供了5V的电压</li>
<li>键码值存储在键盘内部电路一个叫做&quot;endpoint&quot;的寄存器内</li>
<li>USB控制器大概每隔10ms便查询一次&quot;endpoint&quot;以得到存储的键码值数据，这个最短时间间隔由键盘提供</li>
<li>键值码值通过USB串行接口引擎被转换成一个或者多个遵循低层USB协议的USB数据包</li>
<li>这些数据包通过D+针或者D-针(中间的两个针)，以最高1.5Mb/s的速度从键盘传输至计算机。速度限制是因为人机交互设备总是被声明成&quot;低速设备&quot;（USB2.0 compliance）</li>
<li>这个串行信号在计算机的USB控制器处被解码，然后被人机交互设备通用键盘驱动进行进一步解释。之后按键的码值被传输到操作系统的硬件抽象层</li>
</ul>
<p><em>虚拟键盘（触屏设备）：</em></p>
<ul>
<li>在现代电容屏上，当用户把手指放在屏幕上时，一小部分电流从传导层的静电域经过手指传导，形成了一个回路，使得屏幕上触控的那一点电压下降，屏幕控制器产生一个中断，报告这次&quot;点击&quot;的坐标</li>
<li>然后移动操作系统通知当前活跃的应用，有一个点击事件发生在它的某个GUI部件上了，现在这个部件是虚拟键盘的按钮</li>
<li>虚拟键盘引发一个软中断，返回给OS一个&quot;按键按下&quot;消息</li>
<li>这个消息又返回来向当前活跃的应用通知一个&quot;按键按下&quot;事件</li>
</ul>
<h2 id="产生中断非usb键盘"><a class="markdownIt-Anchor" href="#产生中断非usb键盘"></a> 产生中断[非USB键盘]</h2>
<p>键盘在它的中断请求线(IRQ)上发送信号，信号会被中断控制器映射到一个中断向量，实际上就是一个整型数<br />
。CPU使用中断描述符表(IDT)把中断向量映射到对应函数，这些函数被称为中断处理器，它们由操作系统内核提供。当一个中断到达时，CPU根据IDT和中断向量索引到对应的中断处理器，然后操作系统内核出场了。</p>
<h2 id="windows一个-wm_keydown-消息被发往应用程序"><a class="markdownIt-Anchor" href="#windows一个-wm_keydown-消息被发往应用程序"></a> (Windows)一个 <code>WM_KEYDOWN</code> 消息被发往应用程序</h2>
<p>HID把键盘按下的事件传送给 <code>KBDHID.sys</code>驱动，把HID的信号转换成一个扫描码(Scancode)，这里回车的扫描码是<code>VK_RETURN(0x0d)</code>。 <code>KBDHID.sys</code> 驱动和 <code>KBDCLASS.sys</code>(键盘类驱动,keyboard classdriver)进行交互，这个驱动负责安全地处理所有键盘和小键盘的输入事件。之后它又去调用<code>Win32K.sys</code>，在这之前有可能把消息传递给安装的第三方键盘过滤器。这些都是发生在内核模式。</p>
<p><code>Win32K.sys</code> 通过 <code>GetForegroundWindow()</code>API函数找到当前哪个窗口是活跃的。这个API函数提供了当前浏览器的地址栏的句柄。Windows系统的&quot;message pump&quot;机制调用 <code>SendMessage(hWnd, WM_KEYDOWN, VK_RETURN, lParam)</code> 函数，<code>lParam</code>是一个用来指示这个按键的更多信息的掩码，这些信息包括按键重复次数（这里是0），实际扫描码（可能依赖于OEM厂商，不过通常不会是<code>VK_RETURN</code> ），功能键（alt, shift, ctrl）是否被按下（在这里没有），以及一些其他状态。</p>
<p>Windows的<code>SendMessage</code> API直接将消息添加到特定窗口句柄 <code>hWnd</code>的消息队列中，之后赋给 <code>hWnd</code> 的主要消息处理函数 <code>WindowProc</code>将会被调用，用于处理队列中的消息。</p>
<p>当前活跃的句柄 <code>hWnd</code> 实际上是一个edit control控件，这种情况下，<code>WindowProc</code> 有一个用于处理 <code>WM_KEYDOWN</code><br />
消息的处理器，这段代码会查看 <code>SendMessage</code> 传入的第三个参数 <code>wParam</code>，因为这个参数是 <code>VK_RETURN</code> ，于是它知道用户按下了回车键。</p>
<h2 id="mac-os-x一个-keydown-nsevent被发往应用程序"><a class="markdownIt-Anchor" href="#mac-os-x一个-keydown-nsevent被发往应用程序"></a> (Mac OS X)一个 <code>KeyDown</code> NSEvent被发往应用程序</h2>
<p>中断信号引发了I/O Kit Kext键盘驱动的中断处理事件，驱动把信号翻译成键码值，然后传给OS X的<code>WindowServer</code> 进程。然后， <code>WindowServer</code>将这个事件通过Mach端口分发给合适的（活跃的，或者正在监听的）应用程序，这个信号会被放到应用程序的消息队列里。队列中的消息可以被拥有足够高权限的线程使用<code>mach_ipc_dispatch</code> 函数读取到。这个过程通常是由 <code>NSApplication</code>主事件循环产生并且处理的，通过 <code>NSEventType</code> 为 <code>KeyDown</code> 的 <code>NSEvent</code>。</p>
<h2 id="gnulinuxxorg-服务器监听键码值"><a class="markdownIt-Anchor" href="#gnulinuxxorg-服务器监听键码值"></a> (GNU/Linux)Xorg 服务器监听键码值</h2>
<p>当使用图形化的 X Server 时，X Server会按照特定的规则把键码值再一次映射，映射成扫描码。当这个映射过程完成之后，X Server 把这个按键字符发送给窗口管理器(DWM，metacity, i3等等)，窗口管理器再把字符发送给当前窗口。当前窗口使用有关图形API把文字打印在输入框内。</p>
<h2 id="解析url"><a class="markdownIt-Anchor" href="#解析url"></a> 解析URL</h2>
<ul>
<li>
<p>浏览器通过 URL 能够知道下面的信息：</p>
<blockquote>
<ul>
<li>
<dl>
<dt><code>Protocol</code> “http”</dt>
<dd>使用HTTP协议</dd>
</dl>
</li>
<li>
<dl>
<dt><code>Resource</code> “/”</dt>
<dd>请求的资源是主页(index)</dd>
</dl>
</li>
</ul>
</blockquote>
</li>
</ul>
<h2 id="输入的是-url-还是搜索的关键字"><a class="markdownIt-Anchor" href="#输入的是-url-还是搜索的关键字"></a> 输入的是 URL 还是搜索的关键字？</h2>
<p>当协议或主机名不合法时，浏览器会将地址栏中输入的文字传给默认的搜索引擎。大部分情况下，在把文字传递给搜索引擎的时候，URL会带有特定的一串字符，用来告诉搜索引擎这次搜索来自这个特定浏览器。</p>
<h2 id="转换非-ascii-的-unicode-字符"><a class="markdownIt-Anchor" href="#转换非-ascii-的-unicode-字符"></a> 转换非 ASCII 的 Unicode 字符</h2>
<ul>
<li>浏览器检查输入是否含有不是 <code>a-z</code>， <code>A-Z</code>，<code>0-9</code>， <code>-</code> 或者 <code>.</code>的字符</li>
<li>这里主机名是 <code>google.com</code>，所以没有非ASCII的字符；如果有的话，浏览器会对主机名部分使用<br />
<a href="https://en.wikipedia.org/wiki/Punycode">Punycode</a> 编码</li>
</ul>
<h2 id="检查-hsts-列表"><a class="markdownIt-Anchor" href="#检查-hsts-列表"></a> 检查 HSTS 列表</h2>
<ul>
<li>浏览器检查自带的&quot;预加载 HSTS（HTTP严格传输安全）&quot;列表，这个列表里包含了那些请求浏览器只使用HTTPS进行连接的网站</li>
<li>如果网站在这个列表里，浏览器会使用 HTTPS 而不是 HTTP协议，否则，最初的请求会使用HTTP协议发送</li>
<li>注意，一个网站哪怕不在 HSTS 列表里，也可以要求浏览器对自己使用 HSTS 政策进行访问。浏览器向网站发出第一个 HTTP 请求之后，网站会返回浏览器一个响应，请求浏览器只使用 HTTPS 发送请求。然而，就是这第一个 HTTP 请求，却可能会使用户受到 <a href="http://en.wikipedia.org/wiki/SSL_stripping">downgrade attack</a> 的威胁，这也是为什么现代浏览器都预置了 HSTS 列表。</li>
</ul>
<h2 id="dns-查询"><a class="markdownIt-Anchor" href="#dns-查询"></a> DNS 查询</h2>
<ul>
<li>浏览器检查域名是否在缓存当中（要查看 Chrome 当中的缓存， 打开<a href="chrome://net-internals/#dns">chrome://net-internals/#dns</a>）。</li>
<li>如果缓存中没有，就去调用 <code>gethostbyname</code>库函数（操作系统不同函数也不同）进行查询。</li>
<li><code>gethostbyname</code> 函数在试图进行DNS解析之前首先检查域名是否在本地 Hosts 里，Hosts 的位置 <a href="">不同的操作系统有所不同</a></li>
<li>如果 <code>gethostbyname</code> 没有这个域名的缓存记录，也没有在 <code>hosts</code>里找到，它将会向 DNS 服务器发送一条 DNS 查询请求。DNS服务器是由网络通信栈提供的，通常是本地路由器或者 ISP 的缓存 DNS服务器。</li>
<li>查询本地 DNS 服务器</li>
<li>如果 DNS 服务器和我们的主机在同一个子网内，系统会按照下面的 ARP 过程对 DNS 服务器进行 ARP查询</li>
<li>如果 DNS 服务器和我们的主机在不同的子网，系统会按照下面的 ARP 过程对默认网关进行查询</li>
</ul>
<h2 id="arp-过程"><a class="markdownIt-Anchor" href="#arp-过程"></a> ARP 过程</h2>
<p>要想发送 ARP（地址解析协议）广播，我们需要有一个目标 IP 地址，同时还需要知道用于发送 ARP 广播的接口的 MAC 地址。</p>
<ul>
<li>首先查询 ARP 缓存，如果缓存命中，我们返回结果：目标 IP = MAC</li>
</ul>
<p>如果缓存没有命中：</p>
<ul>
<li>查看路由表，看看目标 IP 地址是不是在本地路由表中的某个子网内。是的话，使用跟那个子网相连的接口，否则使用与默认网关相连的接口。</li>
<li>查询选择的网络接口的 MAC 地址</li>
<li>我们发送一个二层（ <a href="https://en.wikipedia.org/wiki/OSI_model">OSI模型</a> 中的数据链路层）ARP 请求：</li>
</ul>
<p><code>ARP Request</code>:</p>
<pre><code>Sender MAC: interface:mac:address:here
Sender IP: interface.ip.goes.here
Target MAC: FF:FF:FF:FF:FF:FF (Broadcast)
Target IP: target.ip.goes.here
</code></pre>
<p>根据连接主机和路由器的硬件类型不同，可以分为以下几种情况：</p>
<p>直连：</p>
<ul>
<li>如果我们和路由器是直接连接的，路由器会返回一个 <code>ARP Reply</code>（见下面）。</li>
</ul>
<p>集线器：</p>
<ul>
<li>如果我们连接到一个集线器，集线器会把 ARP 请求向所有其它端口广播，如果路由器也&quot;连接&quot;在其中，它会返回一个<code>ARP Reply</code> 。</li>
</ul>
<p>交换机：</p>
<ul>
<li>如果我们连接到了一个交换机，交换机会检查本地 CAM/MAC 表，看看哪个端口有我们要找的那个 MAC<br />
地址，如果没有找到，交换机会向所有其它端口广播这个 ARP 请求。</li>
<li>如果交换机的 MAC/CAM 表中有对应的条目，交换机会向有我们想要查询的 MAC 地址的那个端口发送 ARP 请求</li>
<li>如果路由器也&quot;连接&quot;在其中，它会返回一个 <code>ARP Reply</code></li>
</ul>
<p><code>ARP Reply</code>:</p>
<pre><code>Sender MAC: target:mac:address:here
Sender IP: target.ip.goes.here
Target MAC: interface:mac:address:here
Target IP: interface.ip.goes.here
</code></pre>
<p>现在我们有了 DNS 服务器或者默认网关的 IP 地址，我们可以继续 DNS 请求了：</p>
<ul>
<li>使用 53 端口向 DNS 服务器发送 UDP 请求包，如果响应包太大，会使用 TCP 协议</li>
<li>如果本地/ISP DNS 服务器没有找到结果，它会发送一个递归查询请求，一层一层向高层 DNS 服务器做查询，直到查询到起始授权机构，如果找到会把结果返回</li>
</ul>
<h2 id="使用套接字"><a class="markdownIt-Anchor" href="#使用套接字"></a> 使用套接字</h2>
<p>当浏览器得到了目标服务器的 IP 地址，以及 URL 中给出来端口号（http 协议默认端口号是 80， https 默认端口号是 443），它会调用系统库函数<code>socket</code> ，请求一个 TCP流套接字，对应的参数是 <code>AF_INET/AF_INET6</code> 和<br />
<code>SOCK_STREAM</code> 。</p>
<ul>
<li>这个请求首先被交给传输层，在传输层请求被封装成 TCP segment。目标端口会被加入头部，源端口会在系统内核的动态端口范围内选取（Linux下是ip_local_port_range)</li>
<li>TCP segment 被送往网络层，网络层会在其中再加入一个 IP 头部，里面包含了目标服务器的IP地址以及本机的IP地址，把它封装成一个IP packet。</li>
<li>这个 TCP packet 接下来会进入链路层，链路层会在封包中加入 frame 头部，里面包含了本地内置网卡的MAC地址以及网关（本地路由器）的 MAC 地址。像前面说的一样，如果内核不知道网关的 MAC 地址，它必须进行 ARP 广播来查询其地址。</li>
</ul>
<p>到了现在，TCP 封包已经准备好了，可以使用下面的方式进行传输：</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/IEEE_802.3">以太网</a></li>
<li><a href="https://en.wikipedia.org/wiki/IEEE_802.11">WiFi</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cellular_data_communication_protocol">蜂窝数据网络</a></li>
</ul>
<p>对于大部分家庭网络和小型企业网络来说，封包会从本地计算机出发，经过本地网络，再通过调制解调器把数字信号转换成模拟信号，使其适于在电话线路，有线电视光缆和无线电话线路上传输。在传输线路的另一端，是另外一个调制解调器，它把模拟信号转换回数字信号，交由下一个<a href="https://en.wikipedia.org/wiki/Computer_network#Network_nodes">网络节点</a>处理。节点的目标地址和源地址将在后面讨论。</p>
<p>大型企业和比较新的住宅通常使用光纤或直接以太网连接，这种情况下信号一直是数字的，会被直接传到下一个<br />
<a href="https://en.wikipedia.org/wiki/Computer_network#Network_nodes">网络节点</a>进行处理。</p>
<p>最终封包会到达管理本地子网的路由器。在那里出发，它会继续经过自治区域(autonomous system, 缩写<br />
AS)的边界路由器，其他自治区域，最终到达目标服务器。一路上经过的这些路由器会从IP数据报头部里提取出目标地址，并将封包正确地路由到下一个目的地。IP数据报头部 time to live (TTL) 域的值每经过一个路由器就减1，如果封包的TTL变为0，或者路由器由于网络拥堵等原因封包队列满了，那么这个包会被路由器丢弃。上面的发送和接受过程在 TCP 连接期间会发生很多次：</p>
<ul>
<li>
<p>客户端选择一个初始序列号(ISN)，将设置了 SYN 位的封包发送给服务器端，表明自己要建立连接并设置了初始序列号</p>
</li>
<li>
<p>服务器端接收到 SYN 包，如果它可以建立连接：</p>
<ul>
<li>服务器端选择它自己的初始序列号</li>
<li>服务器端设置 SYN 位，表明自己选择了一个初始序列号</li>
<li>服务器端把 (客户端ISN + 1) 复制到 ACK 域，并且设置 ACK位，表明自己接收到了客户端的第一个封包</li>
</ul>
</li>
<li>
<p>客户端通过发送下面一个封包来确认这次连接：</p>
<ul>
<li>自己的序列号+1</li>
<li>接收端 ACK+1</li>
<li>设置 ACK 位</li>
</ul>
</li>
<li>
<p>数据通过下面的方式传输：</p>
<ul>
<li>当一方发送了N个 Bytes 的数据之后，将自己的 SEQ 序列号也增加N</li>
<li>另一方确认接收到这个数据包（或者一系列数据包）之后，它发送一个</li>
<li>ACK 包，ACK 的值设置为接收到的数据包的最后一个序列号</li>
</ul>
</li>
<li>
<p>关闭连接时：</p>
<ul>
<li>要关闭连接的一方发送一个 FIN 包</li>
<li>另一方确认这个 FIN 包，并且发送自己的 FIN 包</li>
<li>要关闭的一方使用 ACK 包来确认接收到了 FIN</li>
</ul>
</li>
</ul>
<h2 id="tls-握手"><a class="markdownIt-Anchor" href="#tls-握手"></a> TLS 握手</h2>
<ul>
<li>客户端发送一个 <code>ClientHello</code> 消息到服务器端，消息中同时包含了它的 Transport Layer Security (TLS) 版本，可用的加密算法和压缩算法。</li>
<li>服务器端向客户端返回一个 <code>ServerHello</code>消息，消息中包含了服务器端的TLS版本，服务器所选择的加密和压缩算法，以及数字证书认证机构（Certificate Authority，缩写 CA）签发的服务器公开证书，证书中包含了公钥。客户端会使用这个公钥加密接下来的握手过程，直到协商生成一个新的对称密钥</li>
<li>客户端根据自己的信任CA列表，验证服务器端的证书是否可信。如果认为可信，客户端会生成一串伪随机数，使用服务器的公钥加密它。这串随机数会被用于生成新的对称密钥</li>
<li>服务器端使用自己的私钥解密上面提到的随机数，然后使用这串随机数生成自己的对称主密钥</li>
<li>客户端发送一个 <code>Finished</code>消息给服务器端，使用对称密钥加密这次通讯的一个散列值</li>
<li>服务器端生成自己的 hash值，然后解密客户端发送来的信息，检查这两个值是否对应。如果对应，就向客户端发送一个<code>Finished</code> 消息，也使用协商好的对称密钥加密</li>
<li>从现在开始，接下来整个 TLS 会话都使用对称秘钥进行加密，传输应用层（HTTP）内容</li>
</ul>
<h2 id="http-协议"><a class="markdownIt-Anchor" href="#http-协议"></a> HTTP 协议</h2>
<p>如果浏览器是 Google 出品的，它不会使用 HTTP 协议来获取页面信息，而是会与服务器端发送请求，商讨使用 SPDY 协议。</p>
<p>如果浏览器使用 HTTP 协议而不支持 SPDY 协议，它会向服务器发送这样的一个请求:</p>
<pre><code>GET / HTTP/1.1
Host: google.com
Connection: close
[其他头部]
</code></pre>
<p>&quot;其他头部&quot;包含了一系列的由冒号分割开的键值对，它们的格式符合HTTP协议标准，它们之间由一个换行符分割开来。（这里我们假设浏览器没有违反HTTP协议标准的bug，同时假设浏览器使用<br />
<code>HTTP/1.1</code> 协议，不然的话头部可能不包含 <code>Host</code> 字段，同时 <code>GET</code>请求中的版本号会变成 <code>HTTP/1.0</code> 或者 <code>HTTP/0.9</code> 。）</p>
<p>HTTP/1.1 定义了&quot;关闭连接&quot;的选项&quot;close&quot;，发送者使用这个选项指示这次连接在响应结束之后会断开。例如：</p>
<blockquote>
<p>Connection:close</p>
</blockquote>
<p>不支持持久连接的 HTTP/1.1 应用必须在每条消息中都包含 “close” 选项。</p>
<p>在发送完这些请求和头部之后，浏览器发送一个换行符，表示要发送的内容已经结束了。</p>
<p>服务器端返回一个响应码，指示这次请求的状态，响应的形式是这样的:</p>
<pre><code>200 OK
[响应头部]
</code></pre>
<p>然后是一个换行，接下来有效载荷(payload)，也就是 <code>www.google.com</code>的HTML内容。服务器下面可能会关闭连接，如果客户端请求保持连接的话，服务器端会保持连接打开，以供之后的请求重用。</p>
<p>如果浏览器发送的HTTP头部包含了足够多的信息（例如包含了 Etag 头部），以至于服务器可以判断出，浏览器缓存的文件版本自从上次获取之后没有再更改过，服务器可能会返回这样的响应:</p>
<pre><code>304 Not Modified
[响应头部]
</code></pre>
<p>这个响应没有有效载荷，浏览器会从自己的缓存中取出想要的内容。</p>
<p>在解析完 HTML之后，浏览器和客户端会重复上面的过程，直到HTML页面引入的所有资源（图片，CSS，favicon.ico等等）全部都获取完毕，区别只是头部的<code>GET / HTTP/1.1</code> 会变成 <code>GET /$(相对www.google.com的URL) HTTP/1.1</code> 。</p>
<p>如果HTML引入了 <code>www.google.com</code>域名之外的资源，浏览器会回到上面解析域名那一步，按照下面的步骤往下一步一步执行，请求中的<code>Host</code> 头部会变成另外的域名。</p>
<h2 id="http-服务器请求处理"><a class="markdownIt-Anchor" href="#http-服务器请求处理"></a> HTTP 服务器请求处理</h2>
<p>HTTPD(HTTP Daemon)在服务器端处理请求/响应。最常见的 HTTPD 有 Linux 上常用的 Apache 和 nginx，以及 Windows 上的 IIS。</p>
<ul>
<li>
<p>HTTPD 接收请求</p>
</li>
<li>
<p>服务器把请求拆分为以下几个参数：</p>
<ul>
<li>HTTP 请求方法(<code>GET</code>, <code>POST</code>, <code>HEAD</code>, <code>PUT</code>, <code>DELETE</code>,</li>
<li><code>CONNECT</code>, <code>OPTIONS</code>, 或者 <code>TRACE</code>)。直接在地址栏中输入 URL</li>
<li>这种情况下，使用的是 GET 方法</li>
<li>域名：<a href="http://google.com">google.com</a></li>
<li>请求路径/页面：/ (我们没有请求google.com下的指定的页面，因此 / 是默认的路径)</li>
</ul>
</li>
<li>
<p>服务器验证其上已经配置了 <a href="http://google.com">google.com</a> 的虚拟主机</p>
</li>
<li>
<p>服务器验证 <a href="http://google.com">google.com</a> 接受 GET 方法</p>
</li>
<li>
<p>服务器验证该用户可以使用 GET 方法(根据 IP 地址，身份信息等)</p>
</li>
<li>
<p>如果服务器安装了 URL 重写模块（例如 Apache 的 mod_rewrite 和 IIS 的 URL Rewrite），服务器会尝试匹配重写规则，如果匹配上的话，服务器会按照规则重写这个请求</p>
</li>
<li>
<p>服务器根据请求信息获取相应的响应内容，这种情况下由于访问路径是 “/”, 会访问首页文件（你可以重写这个规则，但是这个是最常用的）。</p>
</li>
<li>
<p>服务器会使用指定的处理程序分析处理这个文件，假如 Google 使用 PHP，服务器会使用 PHP 解析 index 文件，并捕获输出，把 PHP 的输出结果返回给请求者</p>
</li>
</ul>
<h2 id="浏览器背后的故事"><a class="markdownIt-Anchor" href="#浏览器背后的故事"></a> 浏览器背后的故事</h2>
<p>当服务器提供了资源之后（HTML，CSS，JS，图片等），浏览器会执行下面的操作：</p>
<ul>
<li>解析 ------ HTML，CSS，JS</li>
<li>渲染 ------ 构建 DOM 树 -&gt; 渲染 -&gt; 布局 -&gt; 绘制</li>
</ul>
<h2 id="浏览器"><a class="markdownIt-Anchor" href="#浏览器"></a> 浏览器</h2>
<p>浏览器的功能是从服务器上取回你想要的资源，然后展示在浏览器窗口当中。资源通常是 HTML 文件，也可能是<br />
PDF，图片，或者其他类型的内容。资源的位置通过用户提供的 URI(Uniform Resource Identifier) 来确定。</p>
<p>浏览器解释和展示 HTML 文件的方法，在 HTML 和 CSS 的标准中有详细介绍。这些标准由 Web 标准组织 W3C(World Wide Web Consortium) 维护。</p>
<p>不同浏览器的用户界面大都十分接近，有很多共同的 UI 元素：</p>
<ul>
<li>一个地址栏</li>
<li>后退和前进按钮</li>
<li>书签选项</li>
<li>刷新和停止按钮</li>
<li>主页按钮</li>
</ul>
<p><strong>浏览器高层架构</strong></p>
<p>组成浏览器的组件有：</p>
<ul>
<li><strong>用户界面</strong><br />
用户界面包含了地址栏，前进后退按钮，书签菜单等等，除了请求页面之外所有你看到的内容都是用户界面的一部分</li>
<li><strong>浏览器引擎</strong> 浏览器引擎负责让 UI 和渲染引擎协调工作</li>
<li><strong>渲染引擎</strong> 渲染引擎负责展示请求内容。如果请求的内容是 HTML，渲染引擎会解析 HTML 和 CSS，然后将内容展示在屏幕上</li>
<li><strong>网络组件</strong> 网络组件负责网络调用，例如 HTTP 请求等，使用一个平台无关接口，下层是针对不同平台的具体实现</li>
<li><strong>UI后端</strong> UI 后端用于绘制基本 UI 组件，例如下拉列表框和窗口。UI 后端暴露一个统一的平台无关的接口，下层使用操作系统的 UI 方法实现</li>
<li><strong>Javascript 引擎</strong> Javascript 引擎用于解析和执行 Javascript 代码</li>
<li><strong>数据存储</strong><br />
数据存储组件是一个持久层。浏览器可能需要在本地存储各种各样的数据，例如 Cookie 等。浏览器也需要支持诸如 localStorage，IndexedDB，WebSQL 和 FileSystem 之类的存储机制</li>
</ul>
<h2 id="html-解析"><a class="markdownIt-Anchor" href="#html-解析"></a> HTML 解析</h2>
<p>浏览器渲染引擎从网络层取得请求的文档，一般情况下文档会分成8kB大小的分块传输。</p>
<p>HTML 解析器的主要工作是对 HTML 文档进行解析，生成解析树。</p>
<p>解析树是以 DOM 元素以及属性为节点的树。DOM是文档对象模型(Document Object Model)的缩写，它是 HTML 文档的对象表示，同时也是 HTML 元素面向外部(如Javascript)的接口。树的根部是&quot;Document&quot;对象。整个 DOM 和 HTML 文档几乎是一对一的关系。</p>
<p><strong>解析算法</strong></p>
<p>HTML不能使用常见的自顶向下或自底向上方法来进行分析。主要原因有以下几点:</p>
<ul>
<li>语言本身的&quot;宽容&quot;特性</li>
<li>HTML 本身可能是残缺的，对于常见的残缺，浏览器需要有传统的容错机制来支持它们</li>
<li>解析过程需要反复。对于其他语言来说，源码不会在解析过程中发生变化，但是对于HTML 来说，动态代码，例如脚本元素中包含的<code>document.write()</code>方法会在源码中添加内容，也就是说，解析过程实际上会改变输入的内容</li>
</ul>
<p>由于不能使用常用的解析技术，浏览器创造了专门用于解析 HTML的解析器。解析算法在 HTML5 标准规范中有详细介绍，算法主要包含了两个阶段：标记化（tokenization）和树的构建。</p>
<p><strong>解析结束之后</strong></p>
<p>浏览器开始加载网页的外部资源（CSS，图像，Javascript 文件等）。</p>
<p>此时浏览器把文档标记为可交互的（interactive），浏览器开始解析处于&quot;推迟（deferred）“模式的脚本，也就是那些需要在文档解析完毕之后再执行的脚本。之后文档的状态会变为&quot;完成（complete）”，浏览器会触发&quot;加载（load）&quot;事件。</p>
<p>注意解析 HTML 网页时永远不会出现&quot;无效语法（Invalid Syntax）&quot;错误，浏览器会修复所有错误内容，然后继续解析。</p>
<h2 id="css-解析"><a class="markdownIt-Anchor" href="#css-解析"></a> CSS 解析</h2>
<ul>
<li>根据 <a href="http://www.w3.org/TR/CSS2/grammar.html">CSS词法和句法</a><br />
分析CSS文件和 <code>&lt;style&gt;</code> 标签包含的内容以及 style 属性的值</li>
<li>每个CSS文件都被解析成一个样式表对象（<code>StyleSheet object</code>），这个对象里包含了带有选择器的CSS规则，和对应CSS语法的对象</li>
<li>CSS解析器可能是自顶向下的，也可能是使用解析器生成器生成的自底向上的解析器</li>
</ul>
<h2 id="页面渲染"><a class="markdownIt-Anchor" href="#页面渲染"></a> 页面渲染</h2>
<ul>
<li>通过遍历DOM节点树创建一个&quot;Frame 树&quot;或&quot;渲染树&quot;，并计算每个节点的各个CSS样式值</li>
<li>通过累加子节点的宽度，该节点的水平内边距(padding)、边框(border)和外边距(margin)，自底向上的计算&quot;Frame 树&quot;中每个节点的首选(preferred)宽度</li>
<li>通过自顶向下的给每个节点的子节点分配可行宽度，计算每个节点的实际宽度</li>
<li>通过应用文字折行、累加子节点的高度和此节点的内边距(padding)、边框(border)和外边距(margin)，自底向上的计算每个节点的高度</li>
<li>使用上面的计算结果构建每个节点的坐标</li>
<li>当存在元素使用 <code>floated</code>，位置有 <code>absolutely</code> 或 <code>relatively</code>属性的时候，会有更多复杂的计算，详见http://dev.w3.org/csswg/css2/ 和<a href="http://www.w3.org/Style/CSS/current-work">http://www.w3.org/Style/CSS/current-work</a></li>
<li>创建layer(层)来表示页面中的哪些部分可以成组的被绘制，而不用被重新栅格化处理。每个帧对象都被分配给一个层</li>
<li>页面上的每个层都被分配了纹理(?)</li>
<li>每个层的帧对象都会被遍历，计算机执行绘图命令绘制各个层，此过程可能由CPU执行栅格化处理，或者直接通过 D2D/SkiaGL 在GPU上绘制</li>
<li>上面所有步骤都可能利用到最近一次页面渲染时计算出来的各个值，这样可以减少不少计算量</li>
<li>计算出各个层的最终位置，一组命令由 Direct3D/OpenGL 发出，GPU命令缓冲区清空，命令传至GPU并异步渲染，帧被送到Window Server。</li>
</ul>
<h2 id="gpu-渲染"><a class="markdownIt-Anchor" href="#gpu-渲染"></a> GPU 渲染</h2>
<ul>
<li>在渲染过程中，图形处理层可能使用通用用途的<code>CPU</code>，也可能使用图形处理器 <code>GPU</code></li>
<li>当使用 <code>GPU</code>用于图形渲染时，图形驱动软件会把任务分成多个部分，这样可以充分利用<code>GPU</code> 强大的并行计算能力，用于在渲染过程中进行大量的浮点计算。</li>
</ul>
<h2 id="window-server"><a class="markdownIt-Anchor" href="#window-server"></a> Window Server</h2>
<h2 id="后期渲染与用户引发的处理"><a class="markdownIt-Anchor" href="#后期渲染与用户引发的处理"></a> 后期渲染与用户引发的处理</h2>
<p>渲染结束后，浏览器根据某些时间机制运行JavaScript代码(比如Google Doodle动画)或与用户交互(在搜索栏输入关键字获得搜索建议)。类似Flash和Java的插件也会运行，尽管Google主页里没有。这些脚本可以触发网络请求，也可能改变网页的内容和布局，产生又一轮渲染与绘制。</p>
]]></content>
      <categories>
        <category>资料</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title>模型信息记录</title>
    <url>/2023/01/14/%E6%A8%A1%E5%9E%8B%E4%BF%A1%E6%81%AF%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录一下在调试模型的过程中输出的信息：</p>
<span id="more"></span>
<h3 id="fc-sod"><a class="markdownIt-Anchor" href="#fc-sod"></a> FC-SOD</h3>
<ol>
<li>下面为<code>run.py</code>文件中下述打印信息的输出：</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;train_full_wraper: &quot;</span>, train_full_wraper)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;semi_wrapper: &quot;</span>, semi_wrapper)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;gt_full_wraper: &quot;</span>, gt_full_wraper)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;adv_loss_func: &quot;</span>, adv_loss_func)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sal_loss_function: &quot;</span>, sal_loss_function)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;config.MAX_ITER: &quot;</span>, config.MAX_ITER)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ignore_value: &quot;</span>, sal_dataset.ignore_value)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;generator_optim_create_func: &quot;</span>, G_optim_obj)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;discriminator_optim_create_func: &quot;</span>, D_optim_obj)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;device: &quot;</span>, device)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;model_saver: &quot;</span>, model_saver)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;pretrained_model_path: &quot;</span>, config.PRETRAINED_MODEL_PATH)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;is_use_grab: &quot;</span>, config.USE_GRAB)</span><br></pre></td></tr></table></figure>
<p>输出信息为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train_full_wraper:  &#123;<span class="string">&#x27;dataloader&#x27;</span>: &lt;data_provider.sod_dataloader.SOD_Dataloader <span class="built_in">object</span> at <span class="number">0x7f0564504f70</span>&gt;, <span class="string">&#x27;lambda_sal&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;lambda_adv&#x27;</span>: <span class="number">0.01</span>, <span class="string">&#x27;start_time&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;mask_T&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">semi_wrapper:  &#123;<span class="string">&#x27;dataloader&#x27;</span>: &lt;data_provider.sod_dataloader.SOD_Dataloader <span class="built_in">object</span> at <span class="number">0x7f05644b3bb0</span>&gt;, <span class="string">&#x27;lambda_sal&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;lambda_adv&#x27;</span>: <span class="number">0.007</span>, <span class="string">&#x27;start_time&#x27;</span>: <span class="number">5000</span>, <span class="string">&#x27;mask_T&#x27;</span>: <span class="number">0.2</span>&#125;</span><br><span class="line">gt_full_wraper:  &#123;<span class="string">&#x27;dataloader&#x27;</span>: &lt;data_provider.sod_dataloader.SOD_Dataloader <span class="built_in">object</span> at <span class="number">0x7f0564504fd0</span>&gt;, <span class="string">&#x27;lambda_sal&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;lambda_adv&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;start_time&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;mask_T&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">adv_loss_func:  BCELossWithLogits_Mask()</span><br><span class="line">sal_loss_function:  BCELossWithLogits_Mask()</span><br><span class="line">config.MAX_ITER:  <span class="number">25000</span></span><br><span class="line">ignore_value:  <span class="number">255.0</span></span><br><span class="line">generator_optim_create_func:  &lt;helper.optim.Optimizer <span class="built_in">object</span> at <span class="number">0x7f0548df3e50</span>&gt;</span><br><span class="line">discriminator_optim_create_func:  &lt;helper.optim.Optimizer <span class="built_in">object</span> at <span class="number">0x7f0548df3d60</span>&gt;</span><br><span class="line">device:  cuda</span><br><span class="line">model_saver:  &lt;helper.model_saver.ModelSaver <span class="built_in">object</span> at <span class="number">0x7f056444bb80</span>&gt;</span><br><span class="line">pretrained_model_path:  ./pretrained/resnet101COCO-41f33a49.pth</span><br><span class="line">is_use_grab:  <span class="literal">False</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
        <tag>模型信息</tag>
      </tags>
  </entry>
  <entry>
    <title>模式识别考试题目</title>
    <url>/2021/12/14/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E8%80%83%E8%AF%95%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<p>本文主要记录一下模式识别的考试题目及其答案，并且熟悉在markdown文档中数学公式的语法。</p>
<span id="more"></span>
<p>1.什么叫做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>−</mo><mi>M</mi><mi>e</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">K-Means</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span> ？简述其基本步骤？并简述 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 如何选取？</p>
<p>传统的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>−</mo><mi>M</mi><mi>e</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">K-Means</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span> 算法流程：</p>
<p>输入是样本集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>m</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">D=\{x_1,x_2,...x_m\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>, 聚类的簇数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> ，最大迭代次数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></p>
<p>输出是簇划分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C=\{C_1,C_2,...C_k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p>
<p>1）从数据集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 中随机选择 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 个样本作为初始的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 个质心向量： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>μ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>μ</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>μ</mi><mi>k</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\mu_1,\mu_2,...,\mu_k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p>
<p>2）对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">n=1,2,...N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></p>
<p>  a）将簇划分初始化为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi><mspace width="1em"/><mi>t</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><mi>k</mi></mrow><annotation encoding="application/x-tex">C_t=\varnothing\quad t=1,2...k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69675em;vertical-align:-0.08167em;"></span><span class="mord amsrm">∅</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></p>
<p>  b）对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">i=1,2...m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault">m</span></span></span></span> , 计算样本中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和各个质心向量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu_j(j=1,2...k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>的距离：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mo stretchy="false">∥</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>j</mi></msub><mo stretchy="false">∥</mo><msup><mrow></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">d_{ij}=\lVert x_i-\mu_j \rVert{^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∥</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1002159999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">∥</span><span class="mord"><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> ，将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 标记为最小的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>所对应的类别 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\lambda_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，此时更新 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><msub><mi>λ</mi><mi>i</mi></msub></msub><mo>=</mo><msub><mi>C</mi><msub><mi>λ</mi><mi>i</mi></msub></msub><mo>∪</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C_{\lambda_i}=C_{\lambda_i}\cup\{x_i\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p>
<p>  c）对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><mi>k</mi></mrow><annotation encoding="application/x-tex">j=1,2...k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">C_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中所有的样本点重新计算新的质心 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mi>j</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mo fence="true">∣</mo><msub><mi>C</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow></mfrac><msub><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><msub><mi>C</mi><mi>j</mi></msub></mrow></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">\mu_j=\frac{1}{\left| C_i \right|}\sum_{x \in C_j}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999997em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span></span></span></span></p>
<p>  d）如果所有的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 个质心向量都没有发生变化，则转到步骤3</p>
<p>3）输出簇划分 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mrow><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>C</mi><mi>k</mi></msub></mrow></mrow><annotation encoding="application/x-tex">C={C_1,C_2,...C_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>参数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 如何选取：</p>
<p>1）手肘法：</p>
<p>手肘法的核心指标是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">SSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> (sum of the squared errors, 误差平方和)。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><munder><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><msub><mi>C</mi><mi>i</mi></msub></mrow></munder><msup><mrow><mo fence="true">∣</mo><mi>p</mi><mo>−</mo><msub><mi>m</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">SSE=\sum_{i=1}^k\sum_{p \in C_i} \left| p-m_i \right|^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2665570000000006em;vertical-align:-1.430444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.430444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其核心思想在于，随着聚类数的增大，样本划分会更加精细，每个簇的聚合程度会逐渐提高，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">SSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 自然会逐渐减小。当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 小于真实聚类数目时， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">SSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 的下降幅度会很大。当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 达到真实聚类数后，再增加 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 提高聚合程度的回报会迅速变小，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">SSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 下降幅度会骤减，然后随着 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 值的继续增大而趋于平缓。因此，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">SSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的关系图是一个手肘的形状，这个肘部对应的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 值就是数据的真实聚类数。</p>
<p>2）轮廓系数法：</p>
<p>其核心指标是轮廓系数 (Silhouette Coefficient) ，某个样本点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的轮廓系数定义如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>=</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">S=\frac{b-a}{max(a,b)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中，a是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与同簇的其他样本的平均距离，称为凝聚度；b是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与最近簇中所有样本的平均距离，称为分离度。其中最近簇的定义是：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mspace width="0.5em"/><mi>m</mi><mi>i</mi><msub><mi>n</mi><msub><mi>C</mi><mi>k</mi></msub></msub><mfrac><mn>1</mn><mi>n</mi></mfrac><munder><mo>∑</mo><mrow><mi>p</mi><mo>∈</mo><msub><mi>C</mi><mi>k</mi></msub></mrow></munder><mrow><mo fence="true">∣</mo><mi>p</mi><mo>−</mo><msub><mi>X</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">C_j=arg \enspace min_{C_k} \frac{1}{n} \sum_{p \in C_k} \left| p-X_i \right|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.751884em;vertical-align:-1.430444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.5em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25586em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.430444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span> 是某个簇 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">C_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中的样本。上述公式是用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到某个簇所有样本平均距离作为衡量该点到该簇的距离后，选择离 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 最近的一个簇作为最近簇。</p>
<p>求出所有样本的轮廓系数后再求平均值就得到了平均轮廓系数。平均轮廓系数的取值范围为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> ，且簇内样本的距离越近，簇间样本距离越远，平均轮廓系数越大，聚类效果越好。那么，很自然地，平均轮廓系数最大的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 便是最佳聚类数。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/pinard/p/6164214.html">K-Means原理初探</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1327397">K-Means中K值的选取</a></li>
<li><a href="https://medium.com/analytics-vidhya/how-to-determine-the-optimal-k-for-k-means-708505d204eb">How to Determine the Optimal K for K-Means</a></li>
</ol>
</br>
</br>
<p>2.什么叫模式识别，研究模式识别有何意义？</p>
<p>定义1：</p>
<p>模式识别（英语：Pattern recognition），就是通过计算机用数学技术方法来研究模式的自动处理和判读。我们把环境与客体统称为“模式”。随着计算机技术的发展，人类有可能研究复杂的信息处理过程。信息处理过程的一个重要形式是生命体对环境及客体的识别。对人类来说，特别重要的是对光学信息（通过视觉器官来获得）和声学信息（通过听觉器官来获得）的识别。这是模式识别的两个重要方面。</p>
<p>定义2：</p>
<p>模式识别是通过计算机用数学技术方法来研究模式的自动处理和判读。是对表征事 物或现象的各种形式的(数值的、文字的和逻辑关系的)信息进行处理和分析，以对事物或现象进行描述、辨认、分类和解释的过程，是信息科学和人工智能的重要组成部分。</p>
<p>意义：</p>
<p>人们为了掌握客观事物，按事物相似的程度组成类别。模式识别的作用和目的就在于面对某一具体事物时将其正确地归入某一类别。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB">模式识别</a></li>
</ol>
</br>
</br>
<p>3.模式识别预处理有哪些内容</p>
<p>预处理的目的：</p>
<p>预处理的目的是去除噪声, 加强有用的信息, 并对输入测量仪器或其他因素 所造成的退化现象进行复原。</p>
<p>预处理的两种情况：</p>
<p>1）一是使数据的质量更好, 比如用一些数字信号处理的方法去除信号中的噪声, 或者对一幅模糊的图像进行图像增强等, 需要注意的是要确保这种预处理是有利于后期的模式识别工作的；</p>
<p>2）另一种预处理相对没有得到足够的重视, 即样本集的预处理, 比如样本集中野值的剔除、类别的合并或分裂等。这一工作一般可以根据领域的专门知识进行, 也可以采用模式识别中的一些技术, 比如在进行后续工作之前先对样本集进行一次聚类分析。</p>
</br>
</br>
<p>4.极大似然方法与贝叶斯估计的差异</p>
<p>极大似然方法将要待估计的未知参数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 看作是一个常数，其目标是得到使得当前样本对应的事件发生的可能性最大的参数估计值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mrow><mi>m</mi><mi>l</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{\theta}_{mle}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078799999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</p>
<p>贝叶斯估计则是将待估计的未知参数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 看作一个随机变量，其具备某种先验分布。下面是关于贝叶斯推断的总结：</p>
<p>1）假定未知随机变量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 具有某种先验分布 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi mathvariant="normal">Θ</mi></msub></mrow><annotation encoding="application/x-tex">p_{\Theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
<p>2）得到观测向量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span> 的条件分布 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>X</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Θ</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{X|\Theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="mord mtight">∣</span><span class="mord mtight">Θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
<p>3）一旦 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span> 的一个特定值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 被观测到后，运用贝叶斯法计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 的后验分布 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mrow><mi mathvariant="normal">Θ</mi><mi mathvariant="normal">∣</mi><mi>X</mi></mrow></msub><mrow><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">p_{\Theta|X}{(\theta|x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Θ</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span> 。然后通过后验分布来得到参数的估计值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mrow><mi>b</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{\theta}_{be}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078799999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/54082000/answer/1632000258">如何理解似然函数</a></li>
<li><a href="https://www.zhihu.com/question/54082000/answer/1632000258">极大似然估计和贝叶斯估计</a></li>
<li>《概率导论》（第二版）</li>
</ol>
</br>
</br>
<p>5.简述 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>V</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">SVM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 的基本思想</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>V</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">SVM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 的核心思想是：尽最大努力使两个类别之间有最大间隔，这样才能使分隔具有更高的可信度，并且对于未知的新样本也有很好的分类预测能力，即泛化能力。</p>
<p>其过程为：对于给定的数据集，在样本空间中找到一个划分超平面 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>W</mi><mi>T</mi></msup><mi>X</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">W^TX + b = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，将不同类别的样本分开。</p>
</br>
</br>
<p>6.神经网络训练时，是否可以将所有的参数初始化为零，为什么？</p>
<p>两层的前馈网络（不包含隐藏层，如逻辑回归）的收敛性不受初始值影响，各个权值可以全设定为零；</p>
<p>三层以上的前馈网络，即至少包含一个隐藏层的网络，如果初始值都为零，那么通过网络后计算的输出值相同，使用反向传播算法计算的梯度值也相同，对各个参数的更新也是相同的，故每个权重在训练过程中保持一致，也就失去了训练的价值。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://www.cnblogs.com/hejunlin1992/p/13022391.html">谈谈神经网络权重为什么不能初始化为0</a></li>
</ol>
</br>
</br>
<p>7.<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 函数作为激活函数有什么缺点？</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 函数表达式为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\sigma(z)=\frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。</p>
<p>优点：</p>
<p>1）输出映射在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 之间，适用于将预测概率作为输出的模型；</p>
<p>2）函数可微，梯度平滑，避免出现跳跃的输出值。</p>
<p>缺点：</p>
<p>1）在变量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 取值为较大的正值或负值时，输出接近于1或0，函数对输入不敏感。当使用反向传播算法进行权重更新时，会出现梯度消失的情况，权重更新很慢。</p>
<p>2）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 函数进行指数运算，会有较大的计算复杂度，降低训练速度。</p>
<p>3）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 函数的输出不是0均值的，将其输出作为后层的输入时，会降低权重更新的效率。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/71882757">温故知新——激活函数及其各自的优缺点</a></li>
<li><a href="https://finance.sina.com.cn/tech/2021-02-24/doc-ikftssap8455930.shtml">深度学习领域最常用的10个激活函数，一文详解数学原理及优缺点</a></li>
</ol>
</br>
</br>
<p>8.简述 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 近邻分类的方法</p>
<p>1）选择近邻的数量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 和距离度量方法</p>
<p>2）对新的输入实例，在给定数据集中找到与该实例最邻近的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 的实例（即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 个邻居），这 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 个实例的多数属于某个类，就将该输入实例分类到该类中。</p>
<p>在实践过程中，我们一般选取较小的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 值，然后通过交叉验证法来选取最优的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 值。</p>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/25994179">一文搞懂k近邻（k-NN）算法（一）</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26029567">完结篇|一文搞懂k近邻（k-NN）算法（二）</a></li>
<li>《Python机器学习》</li>
</ol>
</br>
</br>
<p>9.06年之前，神经网络都很少有人使用，那么根据上课内容说明深度神经网络能够快速应用的技术突破有哪些？</p>
<p>1）硬件方面，GPU算力的增长，使得在2012年的ImageNet比赛中，AlexNet模型获得冠军。后续GPU算力的进一步增长使得在大规模数据上运用神经网络模型成为可能。</p>
<p>２）2015年ResNet模型的提出克服了过深的神经网络所出现的梯度爆炸和梯度消失的问题，使得模型训练精度进一步提高。</p>
<p>3）MXnet、PyTorch以及TensorFlow等深度学习框架大大提高了研究者开发和改进模型的效率，推动了神经网络模型的迭代和应用。</p>
<p>4）2017年Transformer模型将多头自注意力机制应用到 Encoder-Decoder 架构中，使得神经网络模型在自然语言处理领域的训练效果进一步提升，后续将Transformer架构迁移到计算机视觉领域的ViT模型也为其带来了新的突破。</p>
</br>
</br>
<p>10.简述马尔可夫模型的三个核心问题</p>
<p>1）评估问题（概率计算问题）</p>
<p>已知模型 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lambda=(A,B,\pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span> 和观测序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>o</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>o</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=(o_1,o_2,..,o_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，计算在模型 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 下观测序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span> 出现的概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>O</mi><mi mathvariant="normal">∣</mi><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(O|\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord">∣</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span> 。</p>
<p>对应解决该问题的算法为向前-向后算法。</p>
<p>2）解码问题（预测问题）</p>
<p>给定模型 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lambda=(A,B,\pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span> 和观测序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>o</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>o</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=(o_1,o_2,..,o_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，求给定观测序列条件概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>I</mi><mi mathvariant="normal">∣</mi><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(I|O)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mclose">)</span></span></span></span> 最大的状态序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo separator="true">,</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>i</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I=(i_1,i_2,,...,i_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。即给定观测序列，求最有可能的相应的状态序列。</p>
<p>对应解决该问题的算法我维特比算法。</p>
<p>3）学习问题</p>
<p>已知观测序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>o</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>o</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=(o_1,o_2,...,o_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，估计模型 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lambda=(A,B,\pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span> 参数，使得在该模型下观测序列概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>O</mi><mi mathvariant="normal">∣</mi><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(O|\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord">∣</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span> 最大，即最大似然估计。</p>
<p>对应解决该问题的算法为鲍姆-韦尔奇（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>a</mi><mi>u</mi><mi>m</mi><mo>−</mo><mi>W</mi><mi>e</mi><mi>l</mi><mi>c</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">Baum-Welch</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span></span></span></span>）算法</p>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/151011287">一文掌握马尔科夫链与隐马尔可夫模型</a></li>
<li><a href="https://www.jianshu.com/p/da633461684f">01 隐马尔可夫模型 - 马尔可夫链、HMM参数和性质</a></li>
<li><a href="https://www.jianshu.com/p/c80ca0aa4213">02 隐马尔可夫模型 - HMM的三个问题 - 概率计算问题</a></li>
</ol>
]]></content>
      <categories>
        <category>考试</category>
      </categories>
      <tags>
        <tag>模式识别</tag>
      </tags>
  </entry>
  <entry>
    <title>流行工具和框架资料整理</title>
    <url>/2022/08/15/%E6%B5%81%E8%A1%8C%E5%B7%A5%E5%85%B7%E5%92%8C%E6%A1%86%E6%9E%B6%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文整理一下流行的工具和框架的学习文档和资料：</p>
<span id="more"></span>
<h3 id="react"><a class="markdownIt-Anchor" href="#react"></a> React</h3>
<h4 id="综合教程"><a class="markdownIt-Anchor" href="#综合教程"></a> 综合教程</h4>
<ol>
<li><a href="https://hyf.js.org/react-naive-book/">React.js 小书</a></li>
<li><a href="https://react.iamkasong.com/">React技术揭秘</a></li>
</ol>
<h4 id="文章收集"><a class="markdownIt-Anchor" href="#文章收集"></a> 文章收集</h4>
<ol>
<li><a href="https://www.tuicool.com/articles/7b2uma2">全网最优雅的 React 源码调试方式</a></li>
</ol>
<h3 id="vuejs"><a class="markdownIt-Anchor" href="#vuejs"></a> Vue.js</h3>
<h4 id="综合教程-2"><a class="markdownIt-Anchor" href="#综合教程-2"></a> 综合教程</h4>
<ol>
<li><a href="https://cn-vuejs-challenges.netlify.app/">Vue.js 挑战</a></li>
</ol>
<h3 id="electron"><a class="markdownIt-Anchor" href="#electron"></a> electron</h3>
<h4 id="文章收集-2"><a class="markdownIt-Anchor" href="#文章收集-2"></a> 文章收集</h4>
<ol>
<li><a href="https://www.tuicool.com/articles/yAZVZjV">electron 应用开发优秀实践</a></li>
</ol>
<h3 id="redis"><a class="markdownIt-Anchor" href="#redis"></a> Redis</h3>
<ol>
<li><a href="https://architecturenotes.co/redis/">Redis Explained</a></li>
</ol>
<h3 id="manim"><a class="markdownIt-Anchor" href="#manim"></a> Manim</h3>
<ol>
<li><a href="https://manim.org.cn/docs">Manim Kindergarten</a></li>
<li><a href="https://docs.manim.org.cn/">ManimGL 教程文档</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>指南</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习环境配置</title>
    <url>/2022/09/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下深度学习的环境配置：</p>
<span id="more"></span>
<p>1.查看已安装的CUDA和cudnn版本号</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://bbs.huaweicloud.com/blogs/140384#:~:text=1.%20%E6%9F%A5%E7%9C%8BCUDA%E7%89%88%E6%9C%ACcuda,%2Flocal%20%7C%20gre...">Linux上查看已安装的CUDA和cuDNN版本号</a></li>
</ol>
</blockquote>
</br>
2.CUDA, CUDA toolkit, CUDNN和NVCC关系
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_41094058/article/details/116207333">一文讲清楚CUDA、CUDA toolkit、CUDNN、NVCC关系</a></li>
</ol>
</blockquote>
</br>
3.安装CUDA和cudnn到指定目录。安装cudatoolkit：
<ul>
<li><code>sh cuda_11.1.0_455.23.05_linux.run --help</code>：查看选项</li>
<li><code>sh cuda_11.1.0_455.23.05_linux.run --toolkit --toolkitpath=/storage/FT/local/cuda-11.1 --tmpdir=/storage/FT/local/tmp</code>：指定安装选项，安装目录，和tmp目录</li>
<li>运行上述步骤后会出现交互式界面让你选择安装哪些部分，可以根据需求选择。</li>
</ul>
<p>安装完的界面如下所示：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220914102908.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive</a></li>
<li><a href="https://blog.csdn.net/yinxingtianxia/article/details/80462892">ubuntu 安装多个CUDA版本并可以随时切换</a></li>
<li><a href="https://blog.csdn.net/kxqt233/article/details/113825524">安装CUDA和cuDNN到指定目录</a></li>
<li><a href="https://blog.csdn.net/qq_35498453/article/details/110532839">非root用户在服务器上安装CUDA和cudnn到指定目录</a></li>
<li><a href="https://stackoverflow.com/questions/40517083/multiple-cuda-versions-on-machine-nvcc-v-confusion">Multiple CUDA versions on machine nvcc -V confusion</a></li>
<li><a href="https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path">How to correctly add a path to PATH?</a></li>
</ol>
</blockquote>
</br>
4.进行模型训练时出现`Could not load dynamic library 'libnvinfer.so.7'`。此为TensorFlow警告，可以通过设置环境变量：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">TF_CPP_MIN_LOG_LEVEL</span><span class="token operator">=</span><span class="token string">"2"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
使系统不显示警告。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/60368298/could-not-load-dynamic-library-libnvinfer-so-6">Could not load dynamic library ‘libnvinfer.so.6’</a></li>
</ol>
</blockquote>
</br>
5.VSCode配置OpenCV (Windows)
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/m0_37833142/article/details/105686820">VS code配置C/C++、OpenCV(Windows)</a></li>
<li><a href="https://www.cnblogs.com/czlhxm/p/13848278.html">再整理：Visual Studio Code(vscode)下的基于C++的OpenCV的最新搭建攻略解析</a></li>
<li><a href="https://cuda-chen.github.io/programming/image%20processing/2020/01/21/vscode-with-opencv-cpp-on-windows10-explained.html">VS Code with OpenCV C++ on Windows 10 Explained</a></li>
</ol>
</blockquote>
</br>
6. 将home目录下的.vscode-server迁移至其他目录
例如，迁移到`/storage/user`下面：
1. `cd /storage/user`
2. `mv ~/.vscode-server ./`
3. `ln -s /storage/user/.vscode-server ~/.vscode-server`
<blockquote>
<p>参考资料：</p>
<ol>
<li>
<h1 id="how-to-change-vscode-server-directory"><a class="markdownIt-Anchor" href="#how-to-change-vscode-server-directory"></a> <a href="https://stackoverflow.com/questions/62613523/how-to-change-vscode-server-directory">How to change vscode-server directory</a></h1>
</li>
</ol>
</blockquote>
</br>
7.查看当前目录文件夹占用大小：`du -lh --max-depth=1`
> 参考资料：
> 1. [du](https://wangchujiang.com/linux-command/c/du.html)
</br>
8.将home目录下的.cache迁移至其他目录
例如，迁移到`/storage`下面：
1. `cd /storage`
2. `mv ~/.cache ./`
3. `ln -s /storage/user/.cache ~/.cache`
</br>
9.安装OpenCV C++版：
> 参考资料：
> 1. [超详细windows 安装opencv以及在VS中配置opencv_sqzeng的博客-CSDN博客](https://blog.csdn.net/zengshaoqing/article/details/105046277)
> 2. [[C/C++] OpenCV 4.1.0 windows下安装、配置实践及问题解决_枪枪枪的博客-CSDN博客_opencv c++安装](https://blog.csdn.net/az9996/article/details/89715309)
> 3. [如何在 Visual Studio 2022 安裝 OpenCV C++ 開發環境？ - 偵錯桐人](https://tedliou.com/opencv-cpp-visual-studio-2022/)
</br>
10.在Windows10上安装Caffe：
> 参考资料：
> 1. [Windows10 下RTX30系列Caffe安装教程 - BrianX - 博客园](https://www.cnblogs.com/zhongzhaoxie/p/15267489.html)
> 2. [教程 | Caffe在Windows10系统上安装与配置 - 腾讯云开发者社区-腾讯云](https://cloud.tencent.com/developer/article/1545949)
> 3. [Site Unreachable](https://www.zmonster.me/2015/07/21/caffe-base-usage.html)
> 4. [VS2015下载地址和安装教程（图解）](http://c.biancheng.net/view/453.html)
> 5. [Caffe: Problem in downloading prebuilt dependenies · Issue #5679 · BVLC/caffe · GitHub](https://github.com/BVLC/caffe/issues/5679)
> 6. [如何在 Windows 10(GPU) 環境中安裝 Caffe framework--VS2015+CUDA10.0+Python3.5.6篇](https://davistseng.blogspot.com/2020/01/windows-10gpu-caffe-framework.html)
> 7. [Download Visual Studio 2015 (ISO / Offline Installer + Web Installer) | Kunal Chowdhury](https://www.kunal-chowdhury.com/2015/07/download-visualstudio-2015.html)
> 8. [Caffe+Visual Studio 2015编译可以有多简单？_冰不语的博客-CSDN博客](https://blog.csdn.net/xingchenbingbuyu/article/details/72765612)
> 9. [Caffe Windows 配置 - 黄钢的部落格|Canary Blog](https://alberthg.github.io/2018/04/12/Caffe-Windows-%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/)
> 10. [protobuf requires Python ‘＞=3.7‘ but the running Python is 3.6.5的解决方法_LucyGill的博客-CSDN博客](https://blog.csdn.net/LucyGill/article/details/125268665)
</br>
11.在Python环境中用Caffe创建LeNet：
> 参考资料：
> 1. [Solving in Python with LeNet](https://nbviewer.org/github/BVLC/caffe/blob/master/examples/01-learning-lenet.ipynb)
</br>
12.`opencv` vs `opencv-contrib-python` vs `opencv-python-headless` vs `opencv-contrib-python-headless`
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/64902852/the-difference-between-opencv-python-and-opencv-contrib-python">The difference between opencv-python and opencv-contrib-python - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
13.关闭启动Ubuntu环境时自动启动anaconda
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda config --set auto_activate_base <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [安装conda后取消命令行前出现的base，取消每次启动自动激活conda的基础环境_南国那片枫叶的博客-CSDN博客_auto_activate_base](https://blog.csdn.net/u014734886/article/details/90718719)
</br>
14.Anaconda官方安装文档
> 参考资料：
> 1. [Installing on Linux — Anaconda documentation](https://docs.anaconda.com/anaconda/install/linux/)
</br>
15.Anaconda镜像源配置
> 参考资料：
> 1. [Anaconda镜像源配置 - mirage_mc - 博客园](https://www.cnblogs.com/mirage-mc/p/16072075.html)
</br>
16.pip镜像源配置：
> 参考资料：
> 1. [pip 使用国内镜像源 | 菜鸟教程](https://www.runoob.com/w3cnote/pip-cn-mirror.html)
> 2. [pip设置全局镜像源-阿里云开发者社区](https://developer.aliyun.com/article/976828)
</br>
17.VSCode无法连接远程服务器：
解决方案：
- 本地VSCode运行`Remote-SSH: Kill VS Code Server on Host...`。
> 参考资料：
> 1. [SSH stops working · Issue #5982 · microsoft/vscode-remote-release · GitHub](https://github.com/microsoft/vscode-remote-release/issues/5982)
</br>
18.报错`MaxRetryError: HTTPSConnectionPool(host='huggingface.co', port=443): Max retries exceeded with url`。如下图所示：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327093410.png)
将clash设置为如下（打开TUN模式和Service Mode）：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230327093515.png) 
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/microsoft/visual-chatgpt/issues">运行成功，能进ui。这之后需要挂梯子吗 · Issue #112 · microsoft/visual-chatgpt · GitHub</a></li>
<li><a href="https://github.com/microsoft/visual-chatgpt/issues/121"># 中国人不骗中国人，把star都取消了吧 · Issue #121 · microsoft/visual-chatgpt · GitHub</a></li>
</ol>
</blockquote>
</br>
18.安装`pydensecrf`时出现如下报错：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230407213158.png)
原因：`pydensecrf`不支持python3.7。
解决方案1：已验证python3.6.13的环境可以安装
解决方案2：从git安装更新版本
`pip install git+https://github.com/lucasb-eyer/pydensecrf.git`。但由于服务器上对git的访问不稳定，直接按上述方法安装响应很慢。此时可以按照如下步骤（参考资料5）安装：
- 先下载git仓库的`pydensecrf-master.zip`文件，`unzip pydensecrf-master.zip`。
- `cd pydensecrf-master`
- `pip install .`
> 参考资料：
> 1. [PyDenseCRF 包的安装与使用（1）_彦&博的博客-CSDN博客](https://blog.csdn.net/hongyanjinli/article/details/114481913)
> 2. [GitHub - lucasb-eyer/pydensecrf: Python wrapper to Philipp Krähenbühl's dense (fully connected) CRFs with gaussian edge potentials.](https://github.com/lucasb-eyer/pydensecrf)
> 3. [Install by pip fails in Python 3.7](https://github.com/lucasb-eyer/pydensecrf/issues/78)
> 4. [python - How to use pydensecrf in Python3.7? - Stack Overflow](https://stackoverflow.com/questions/62517791/how-to-use-pydensecrf-in-python3-7)
> 5. [install python module using a zip file - Stack Overflow](https://stackoverflow.com/questions/30148335/install-python-module-using-a-zip-file)
</br>
19.从git仓库进行`pip install`
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://adamj.eu/tech/2019/03/11/pip-install-from-a-git-repository/">‘pip install’ From a Git Repository - Adam Johnson</a></li>
<li><a href="https://stackoverflow.com/questions/20101834/pip-install-from-git-repo-branch">python - pip install from git repo branch - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
20.为什么不应该用`pip install`，应该用`python -m pip install`？
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://adamj.eu/tech/2020/02/25/use-python-m-pip-everywhere/">Use ‘python -m pip’ Everywhere - Adam Johnson</a></li>
</ol>
</blockquote>
</br>
21.更改anaconda默认环境：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://askubuntu.com/questions/1335235/anaconda-change-base-environment-permanently-to-a-different-environment-myenv">command line - Anaconda change ‘base’ environment permanently to a different environment ‘myenv’ to startup at terminal openings - Ask Ubuntu</a></li>
<li><a href="https://stackoverflow.com/questions/28436769/how-to-change-default-anaconda-python-environment">How to change default Anaconda python environment - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/34534513/calling-conda-source-activate-from-bash-script">macos - calling conda source activate from bash script - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/61915607/commandnotfounderror-your-shell-has-not-been-properly-configured-to-use-conda">python - CommandNotFoundError: Your shell has not been properly configured to use ‘conda activate’ - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
22.使用crontab执行定时任务：
- 创建应该编写crontab文件，例如`FTcron`，内容如下：
<pre class="line-numbers language-bashobsidian://open?vault" data-language="bashobsidian://open?vault"><code class="language-bashobsidian://open?vault">SHELL&#x3D;&#x2F;bin&#x2F;bash
PATH&#x3D;&#x2F;usr&#x2F;bin:&#x2F;bin:&#x2F;storage&#x2F;FT&#x2F;anaconda3&#x2F;bin
0 20 * * * source activate py38; cd &#x2F;storage&#x2F;FT&#x2F;SCWSSOD&#x2F;SCWSSOD49; nohup python
test.py&gt;test.out
30 20 * * * source activate py38; cd &#x2F;storage&#x2F;FT&#x2F;SCWSSOD&#x2F;SCWSSOD50; nohup python test.py&gt;test.out<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
- `crontab FTcron`：将其添加到crontab任务。里面的两个任务分别在每天的20:00和20:30执行。
- `crontab -e`：编辑文件中的任务
- `crontab -l`：列出添加的crontab文件
- `crontab -r`：删除crontab文件。
具体细节见参考资料1。
> 参考资料：
> 1. [19. crontab 定时任务 — Linux Tools Quick Tutorial](https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html)
> 2. [Linux Crontab 定时任务 | 菜鸟教程](https://www.runoob.com/w3cnote/linux-crontab-tasks.html)
> 3. [javascript - linux crontab 执行多个定时任务 - SegmentFault 思否](https://segmentfault.com/q/1010000020045109)
> 4. [crontab 使用 conda env 运行 python 脚本 - 知乎](https://zhuanlan.zhihu.com/p/337608389)
]]></content>
      <categories>
        <category>深度学习</category>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员延寿指南</title>
    <url>/2022/05/09/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BB%B6%E5%AF%BF%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文转载自 github 上的 <a href="https://github.com/geekan/HowToLiveLonger">程序员健康项目</a>，放在博客上便于查看。另一个有用的网站是 <a href="https://m.youlai.cn/jijiu">急救指南</a></p>
<span id="more"></span>
<hr />
<h3 id="术语"><a class="markdownIt-Anchor" href="#术语"></a> 术语</h3>
<ul>
<li>ACM: All-Cause Mortality / 全因死亡率</li>
</ul>
<h3 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h3>
<ul>
<li>稳健地活得更久</li>
</ul>
<h3 id="关键结果"><a class="markdownIt-Anchor" href="#关键结果"></a> 关键结果</h3>
<ul>
<li>降低66.67%全因死亡率</li>
<li>增加~20年预期寿命</li>
<li><s>维持多巴胺于中轴</s></li>
</ul>
<h3 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h3>
<ul>
<li>主要参考：对ACM的学术文献相对较多，可以作为主要参考</li>
<li>增加寿命与ACM关系非线性：显然增加寿命与ACM关系是非线性函数，这里假设 <code>DeltaLifeSpan=(1/(1+DeltaACM)-1)*10</code>（DeltaACM为ACM变化值；公式欢迎优化）</li>
<li>变量无法简单叠加：显然各个变量之间并不符合独立同分布假设，变量之间的实际影响也并不明确</li>
<li>存在矛盾观点：所有的证据都有文献/研究对应，但注意到：有些文献之间有显著矛盾的观点（如对于碳水摄入比例的矛盾）；有些文献存在较大争议（如认为22点前睡觉会提升43%全因死亡率）</li>
<li>研究仅表达相关：所有文献表明的更多是相关而非因果，在阅读时要考虑文献是否充分证明了因果 —— 如某文献表明了日均&gt;=7000步的人有显著低的全因死亡率。但步数少的人可能包含更多长期病患，如果没有合理的排除这块数据，那此文献调查失真</li>
</ul>
<h3 id="行动"><a class="markdownIt-Anchor" href="#行动"></a> 行动</h3>
<ul>
<li>输入
<ul>
<li>固体：吃白肉（-11%~-3% ACM）、蔬果为主（-26%~-17% ACM），多吃辣（-23% ACM），多吃坚果（-27%~-4% ACM），<em>少吃蛋黄（否则+7% ACM/0.5颗/天）（存在争议）</em>，中量碳水、多吃植物蛋白（-10% ACM），少吃超加工食物（-62%~-18%）</li>
<li>液体：喝咖啡（-22%~-12% ACM），喝牛奶（-17%~-10% ACM），喝茶（-15%~-8% ACM），少喝或不喝甜味饮料（否则每天一杯+7% ACM，+多巴胺），戒酒或每周100g（纯酒精量(g)=饮酒量(ml)×酒精浓度(%)×酒精密度0.8g/ml）内（否则+~50% ACM，无上限）</li>
<li>气体：不吸烟（否则+~50% ACM，-12~-11年寿命）</li>
<li>光照：晒太阳（-~40% ACM）</li>
<li>药物：二甲双胍（糖尿病人相比正常人可以+3年）、复合维生素（-8%癌症风险）、亚精胺（-60%~-30% ACM）、葡萄糖胺（-39% ACM）</li>
</ul>
</li>
<li>输出
<ul>
<li>运动：每周3次45分钟挥拍运动（-47% ACM）</li>
<li>日常：刷牙（-25% ACM）</li>
<li>睡眠：每天睡7小时全因死亡率最低；且22-24点间最好，<em>早睡+43% ACM，晚睡+15% ACM（存在争议）</em></li>
</ul>
</li>
<li>上下文
<ul>
<li>体重：减肥（-54% ACM）</li>
</ul>
</li>
</ul>
<h3 id="证据"><a class="markdownIt-Anchor" href="#证据"></a> 证据</h3>
<h4 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h4>
<h5 id="固体"><a class="markdownIt-Anchor" href="#固体"></a> 固体</h5>
<ul>
<li>白肉
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/268401670">JAMA子刊：食用红肉和加工肉类会增加心脏病和死亡风险！鱼肉和家禽肉则不会</a>
<ul>
<li>出处：<a href="https://jamanetwork.com/journals/jamainternalmedicine/articlepdf/2759737/jamainternal_zhong_2020_oi_190112.pdf">Associations of Processed Meat, Unprocessed Red Meat, Poultry, or Fish Intake With Incident Cardiovascular Disease and All-Cause Mortality</a></li>
<li>增加红肉摄入与死亡风险相关。八年内平均每天增加至少半份红肉摄入（半份红肉相当于14g加工红肉或40g非加工红肉）的调查对象，在接下来八年内全因死亡风险增加10％（HR, 1.10; 95%CI, 1.04-1.17）；每周吃两份红肉或加工肉类（但不包括家禽或鱼类）会使全因死亡风险增加3%</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163703960-6f321de5-4daa-4ea5-95b9-af9c96f1c1bc.jpg" alt="红肉" /></li>
</ul>
</li>
<li><a href="https://www.zhihu.com/question/67223570/answer/809785380">红肉和白肉最大的区别是什么？为啥要这么分呢？</a></li>
</ul>
</li>
<li>蔬果
<ul>
<li><a href="https://www.sohu.com/a/322360740_164924">每年54万人死亡，竟是因为水果吃得少！？这已成十大死亡因素之一！</a>
<ul>
<li>出处：<a href="https://academic.oup.com/cdn/article-abstract/3/Supplement_1/nzz028.FS01-01-19/5516583">Estimated Global, Regional, and National Cardiovascular Disease Burdens Related to Fruit and Vegetable Consumption: An Analysis from the Global Dietary Database (FS01-01-19) </a></li>
<li>每天摄入200克新鲜水果可使死亡率降低17%，糖尿病大血管并发症（如中风、缺血性心脏病等）风险降低13%，及糖尿病小血管并发症（如糖尿病肾病、糖尿病眼病、糖尿病足病等）风险降低28%</li>
</ul>
</li>
<li><a href="https://mp.weixin.qq.com/s/E6BAi-Vnhr1jXBm0Pys2ZQ">《自然》子刊：每天二两西兰花，健康长寿都有啦！分析近6万人23年的数据发现，吃含黄酮类食物与死亡风险降低20%相关丨临床大发现</a>
<ul>
<li>出处：<a href="https://www.nature.com/articles/s41467-019-11622-x">Flavonoid intake is associated with lower mortality in the Danish Diet Cancer and Health Cohort</a></li>
<li>吃含黄酮类食物与死亡风险降低20%相关</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163703969-42e64f88-e727-4e7d-85f2-07a92e29b613.jpg" alt="黄酮" /></li>
<li>Bondonno博士说道“吃不同蔬菜、水果补充，不同种类的黄酮类化合物是很重要的，这很容易通过饮食实现：一杯茶、一个苹果、一个橘子、100克蓝莓，或100克西兰花，就能提供各种黄酮类化合物，并且总含量超过500毫克。</li>
</ul>
</li>
</ul>
</li>
<li>辣椒
<ul>
<li><a href="https://3g.163.com/dy/article/F6Q7I1ME053228ZU.html">辣椒成死亡克星？据调研，常吃辣患病死亡风险可降低61%</a>
<ul>
<li>出处1：<a href="https://www.sciencedirect.com/science/article/pii/S0735109719382063">Chili pepper consumption and mortality in Italian adults</a></li>
<li>出处2：<a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0169876">The Association of Hot Red Chili Pepper Consumption and Mortality: A Large Population-Based Cohort Study</a></li>
<li>2017年Plos One 的另一项来自美国的研究以16179名，年龄在18岁以上的人群为对象，并对其进行了高达19年的随访，发现在4946例死亡患者中，食用辣椒的参与者的全因死亡率为21.6％，而未食用辣椒的参与者的全因死亡率为33.6％。相较于不吃辣或很少吃（少于每周两次）的人群，每周吃辣＞4次的人群总死亡风险降低23%，心血管死亡风险降低34%。</li>
</ul>
</li>
</ul>
</li>
<li>鸡蛋
<ul>
<li><a href="https://m.thepaper.cn/baijiahao_11540780">每天多吃半个蛋，增加7%的全因和心血管死亡风险？</a>
<ul>
<li>出处：<a href="https://dietandhealth.cancer.gov/">NIH-AARP工作主页</a>、<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7872242/">Egg and cholesterol consumption and mortality from cardiovascular and different causes in the United States: A population-based cohort study</a></li>
<li>每天多吃半个蛋，增加7%的全因和心血管死亡风险？在假设性替代分析中，研究者发现，用等量的蛋清/鸡蛋替代物、家禽、鱼、乳制品、坚果和豆类分别替代半只全蛋（25克/天）可以降低6%、8%、9%、7%、13%和10%的全因死亡率。<br />
*<a href="https://raw.githubusercontent.com/qhy040404/Image-Resources-Repo/master/pmed.1003508.g002.jpg">鸡蛋</a></li>
</ul>
</li>
</ul>
</li>
<li>坚果
<ul>
<li><a href="https://www.163.com/dy/article/GKVOMMMF05148PF4.html">哈佛20年研究：吃核桃的人更长寿，显著减少全因死亡，延长寿命</a>
<ul>
<li>出处：<a href="https://www.mdpi.com/2072-6643/13/8/2699/pdf">Association of Walnut Consumption with Total and Cause-Specific Mortality and Life Expectancy in US Adults</a></li>
<li>通过分析发现，经常食用核桃可以延长寿命，降低心血管疾病死亡风险。比起不吃核桃，每周食用核桃5份以上（1份28克）的健康预期寿命延长1.3岁，全因死亡风险降低14%，心血管疾病死亡率降低25%。</li>
</ul>
</li>
<li><a href="https://zhuanlan.zhihu.com/p/44454030">研究：每日食生坚果，死亡率降20%</a>
<ul>
<li>出处1：<a href="https://www.nejm.org/doi/full/10.1056/NEJMoa1307352">Association of nut consumption with total and cause-specific mortality</a></li>
<li>出处2：<a href="https://americanpistachios.cn/sites/china/files/inline-files/APG_Health-%26-Nutrition-Research-Brochure_DEC-19-18.pdf">APG_Health-&amp;-Nutrition-Research-Brochure_DEC-19-18</a></li>
<li>研究人员发现，每周吃树坚果低于1盎司份量的人，死亡率降低7％。而每周吃了1盎司份量的人，减少11％的死亡率；每周吃2份量的人，减低13％；每周5至6份量者，减少了15％；一周7份以上的人，死亡率则减少20％。</li>
<li>另外两篇发表在《公共科学图书馆在线期刊》(Public Library of Science Online Journal)和《生物医学中心》(BioMed Central)上的医学预科研究论文，展示了试验开始时的横断面数据。这两项研究都评估了7,216名对象，以及他们食用坚果的频率和数量之间的关系。那些每周食用三份以上坚果(包括开心果)的研究对象的死亡率降低39%。</li>
</ul>
</li>
</ul>
</li>
<li>钠（存有大量争议）
<ul>
<li><a href="https://nursing.medsci.cn/article/show_article.do;jsessionid=A34E8A33918A152CB55BDD2E5FB1798D?id=afe720486ee7">Eur Heart J：钠摄入量与预期寿命、全因死亡率的关系</a>
<ul>
<li>出处：<a href="https://europepmc.org/backend/ptpmcrender.fcgi?accid=PMC8169157&amp;blobtype=pdf">Messerli F H, Hofstetter L, Syrogiannouli L, et al. Sodium intake, life expectancy, and all-cause mortality[J]. European heart journal, 2021, 42(21): 2103-2112.</a></li>
<li><img src="https://user-images.githubusercontent.com/2707039/164894778-9710f18d-e055-4f62-bdcb-618687771d77.jpeg" alt="ehaa947f6" /></li>
<li>在该分析所包含的181个国家中，研究人员发现钠摄入量与出生时的健康预期寿命（β=2.6年/克每日钠摄入量，R<sup>2</sup>=0.66，P&lt;0.001）和60岁时的健康预期寿命（β=0.3年/克每日钠摄入量，R<sup>2</sup>=0.60，P=0.048）之间存在正相关关系，但与非传染性疾病死亡（β=17次事件/克每日钠摄入量，R<sup>2</sup>=0.43，P=0.100）无关。相反，全因死亡率与钠摄入量成负相关（β=−131次事件/克每日钠摄入量，R<sup>2</sup>=0.60，P&lt;0.001）。在仅限于46个收入最高国家的敏感性分析中，钠摄入量与出生时的健康预期寿命呈正相关（β=3.4年/克每日钠摄入量，R<sup>2</sup>=0.53，P&lt;0.001），而与全因死亡率（β=−168次事件/克每日钠摄入量，R<sup>2</sup>=0.50，P&lt;0.001）呈负相关。</li>
<li>该（大范围）研究认为更多的钠摄入与显著更低的全因死亡率有关</li>
<li><a href="https://www.tctmd.com/news/fresh-foray-salt-wars-life-expectancy-higher-greater-sodium-intake">针对该论文的延伸解读和讨论：A Fresh Foray in the Salt Wars: Life Expectancy Higher With Greater Sodium Intake</a></li>
</ul>
</li>
<li><a href="https://ibook.antpedia.com/x/669028.html">NEJM/Lancet：不要吃太多盐，中国饮食所致心血管病和癌症死亡全球第一，吃低钠盐可降低全因死亡率</a>
<ul>
<li>但也有多项研究认为用低钠盐可以降低一系列疾病的发生概率，对全因死亡率的减少有积极影响</li>
</ul>
</li>
</ul>
</li>
<li>碳水（存有大量争议）
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/137815934">低碳生酮饮食（四）碳水化合物与长期死亡率</a>
<ul>
<li>出处：The Lancet Public Health - <a href="https://www.sciencedirect.com/science/article/pii/S246826671830135X">Dietary carbohydrate intake and mortality: a prospective cohort study and meta-analysis</a></li>
<li>碳水越低，寿命越短；碳水越高，寿命也轻微缩短；碳水50%左右（其实按照一般的说法，这也算高碳水）是最长寿命区间</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163703985-a2e2f8ac-101a-4f3c-903b-6850507f144b.jpg" alt="碳水" /></li>
</ul>
</li>
<li><a href="https://www.chinacdc.cn/gwxx/202003/t20200323_214639.html">最强营养搭配！BMJ：这么吃，心血管疾病和死亡风险更低</a></li>
</ul>
</li>
<li>槟榔
<ul>
<li><a href="https://www.zhihu.com/question/312784161/answer/603370131">如何看待槟榔嚼出来的癌症？槟榔致癌风险究竟有多大？ - 丁香医生的回答 - 知乎</a>
<ul>
<li>出处：Chewing Betel Quid and the Risk of Metabolic Disease, Cardiovascular Disease, and All-Cause Mortality: A Meta-Analysis(<a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0070679">https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0070679</a>)</li>
<li>嚼槟榔会增加21%的全因死亡率</li>
</ul>
</li>
</ul>
</li>
<li>热量限制
<ul>
<li><a href="https://www.zhihu.com/question/31395511">怎么看待BBC《进食、断食与长寿》？</a>
<ul>
<li>限制卡路里动物实验：CR（热量限制，即少吃）延迟了恒河猴的多种疾病发病和死亡率，与CR动物相比，正常喂养的猴子的各种疾病患病风险增加2.9倍，死亡风险增加3.0倍。</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163703988-8767185b-326a-4783-b2e2-f190322bb7d6.jpg" alt="热量限制-恒河猴" /></li>
</ul>
</li>
</ul>
</li>
<li>综合
<ul>
<li><a href="https://www.chinacdc.cn/gwxx/202003/t20200323_214639.html">最强营养搭配！BMJ：这么吃，心血管疾病和死亡风险更低</a></li>
<li><a href="https://doi.org/10.1136/bmj.m688">Associations of fat and carbohydrate intake with cardiovascular disease and mortality: prospective cohort study of UK Biobank participants</a>
<ul>
<li>通过对这些参与者的数据进行分析，研究人员发现碳水化合物（糖、淀粉和纤维）和蛋白质的摄入与全因死亡率呈非线性关系，而脂肪则与全因死亡率呈线性相关。其中，较高的糖分摄入与全因死亡风险和患心血管疾病的风险较高均有关联，而较高的饱和脂肪酸摄入与全因死亡风险较高有关。</li>
<li>图1：各种营养元素与全因死亡之间的关系</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163702022-8c2bfea9-ed5d-4fe0-8ead-e8740014b92b.jpg" alt="各种营养元素与全因死亡之间的关系" /></li>
<li>图2：各种营养元素与心血管疾病之间的关系</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163702084-97fb4a03-707c-475d-b88e-6fe2f8e87f92.jpg" alt="各种营养元素与心血管疾病之间的关系" /></li>
<li><strong>进一步研究表明，在所有的饮食模式中，全因死亡率风险最低的饮食方式为：10-30g高纤维、14-30%蛋白质、10-25%单不饱和脂肪酸、5%-7%多不饱和脂肪酸以及20%-30%淀粉摄入。</strong></li>
<li><strong>最优能量来源配比：&lt;24%淀粉，15%-17%蛋白质，&gt;15%单不饱和脂肪酸，&lt;15%糖，6%饱和脂肪酸，6%多不饱和脂肪酸，30g+高纤维</strong></li>
</ul>
</li>
<li><a href="https://med.ckcest.cn/details.html?id=5183272274855936&amp;classesEn=news">BMJ | 常吃薯片汉堡巧克力等食品，平均死亡年龄仅仅为58岁，死亡风险剧增</a>
<ul>
<li><a href="https://www.bmj.com/content/365/bmj.l1949.full">Rico-Campà A, Martínez-González M A, Alvarez-Alvarez I, et al. Association between consumption of ultra-processed foods and all cause mortality: SUN prospective cohort study[J]. bmj, 2019, 365.</a></li>
<li><a href="https://www.bmj.com/content/365/bmj.l1451">Srour B, Fezeu L K, Kesse-Guyot E, et al. Ultra-processed food intake and risk of cardiovascular disease: prospective cohort study (NutriNet-Santé)[J]. bmj, 2019, 365.</a></li>
<li><a href="https://www.researchgate.net/profile/Phillip-Baker-5/publication/333483796_Ultra-processed_food_and_adverse_health_outcomes/links/5f0c646ca6fdcc2f32336a95/Ultra-processed-food-and-adverse-health-outcomes.pdf">Lawrence M A, Baker P I. Ultra-processed food and adverse health outcomes[J]. bmj, 2019, 365.</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="液体"><a class="markdownIt-Anchor" href="#液体"></a> 液体</h5>
<ul>
<li>牛奶
<ul>
<li><a href="https://www.sohu.com/a/253940257_419768">《柳叶刀》调研21个国家13万人：每天1斤牛奶或酸奶，心血管死亡风险下降23%</a></li>
<li>出处：<a href="http://mdrf-eprints.in/1114/1/Association_of_dietary_patterns_and_dietary_diversity_with_cardiometabolic_disease_risk_factors.pdf">Association of dairy intake with cardiovascular disease and mortality in 21 countries from five continents (PURE): a prospective cohort study</a></li>
<li>与不食用乳制品的人相比，每天摄入两份乳制品（一份指244克牛奶/酸奶，15克奶酪或5克黄油）的人，<strong>全因死亡风险下降了17%</strong>，心血管死亡风险下降23%，中风风险下降33%</li>
</ul>
</li>
<li>茶
<ul>
<li><a href="https://www.jianshu.com/p/5461a205cf95?utm_campaign=hugo">10万中国人随访7年发现，每周喝三次茶与全因死亡风险降低15%，预期寿命增加1.26年相关 </a></li>
<li>出处：<a href="https://www.researchgate.net/profile/Fangchao-Liu-4/publication/338483323_Tea_consumption_and_the_risk_of_atherosclerotic_cardiovascular_disease_and_all-cause_mortality_The_China-PAR_project/links/5e55e5e94585152ce8efe511/Tea-consumption-and-the-risk-of-atherosclerotic-cardiovascular-disease-and-all-cause-mortality-The-China-PAR-project.pdf">Tea consumption and the risk of atherosclerotic cardiovascular disease and all-cause mortality: The China-PAR project</a></li>
<li><a href="http://rs.yiigle.com/CN112338202202/1351516.htm">中国成年人饮茶与死亡风险的前瞻性关联研究</a></li>
<li>纳入分析的438 443例研究对象随访11.1年共发生死亡34 661例。与从不饮茶者相比，当前非每日饮茶者和每日饮茶者全因死亡HR值（95%CI）依次为0.89（0.86-0.91）和0.92（0.88-0.95）。分性别分析显示，饮茶对全因死亡风险的保护作用主要见于男性（交互P&lt;0.05）</li>
</ul>
</li>
<li>无糖（甜味）饮料
<ul>
<li><a href="https://www.zhihu.com/question/418598272/answer/1450648364">「无糖饮料使死亡风险增加 26 %」，是真的吗？</a>
<ul>
<li>相比于软饮料摄入量＜1杯/月的参与者，混合软饮料摄入≥1杯/天的参与者死亡风险增加18%，而<strong>摄入含糖软饮料或无糖软饮料会令死亡风险分别增加11%和27%。</strong></li>
<li><img src="https://user-images.githubusercontent.com/2707039/163704346-e7d92e7f-eba5-4673-8f15-3a96782c2e32.png" alt="饮料" /></li>
</ul>
</li>
<li><a href="https://jamanetwork.com/journals/jamainternalmedicine/fullarticle/2749350">Association Between Soft Drink Consumption and Mortality in 10 European Countries</a></li>
</ul>
</li>
<li>有糖饮料
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/400746073">可乐和奶茶，增加全因死亡率高达62%！果汁降低免疫力，影响肝代谢！含糖饮料那些事</a>
<ul>
<li>每天1杯含糖饮料增加7%全因死亡率，2杯21%</li>
<li>在34年的随访中，研究人员发现，相比那些一个月喝1杯或者更少含糖饮料的人，每天喝2杯的人总体死亡风险升高了21%，心血管疾病死亡风险升高了31%，癌症死亡风险上升了16%。</li>
<li>只要每天多喝一杯含糖饮料，总体死亡风险将增加7%，心血管疾病的风险将增加10%，癌症相关的死亡风险将16%。</li>
<li>发表在国际顶级期刊《BMJ》上的一篇论文就证明了含糖饮料会在增加患癌风险，当然这篇文章验证的不仅仅是果汁，奶茶也有份——和含糖饮料相关的总体患癌风险要高出通常值18%，100%的鲜榨果汁也会使得整体的患癌风险上升12%。</li>
</ul>
</li>
</ul>
</li>
<li>果汁
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/66513350">JAMA子刊：100%纯果汁可能比含糖饮料更危险</a>
<ul>
<li>每天多摄入一份12盎司的含糖饮料，全因死亡率风险增加11%；</li>
<li>每天多摄入一份12盎司的果汁，全因死亡率风险增加24%。</li>
</ul>
</li>
</ul>
</li>
<li>咖啡
<ul>
<li><a href="https://news.bioon.com/article/6725420.html">重磅！多篇研究证实喝咖啡与人群全因死亡率降低直接相关</a></li>
<li><a href="https://www.sohu.com/a/439412995_100003595">科普 | 喝咖啡又多了一个新理由：降低死亡率！ </a></li>
<li><a href="https://fanyi.pdf365.cn/help/249">地中海成年人咖啡消耗量及全因，心血管疾病和癌症的死亡率</a>
<ul>
<li>在最近的荟萃分析中，该研究包括来自不同国家的40项研究和3,852,651名受试者。在这项荟萃分析显示，咖啡摄入量与各种原因的死亡率，CVD和癌症死亡率之间存在非线性关系，每天摄入两杯咖啡的癌症死亡率最低(RR = 0.96)，CVD最低的死亡率，每天2.5杯(RR= 0.83)，全天最低死亡率为每天3.5杯(RR= 0.85)，并且随着咖啡消费量的增加，死亡率没有进一步降低或增加</li>
</ul>
</li>
</ul>
</li>
<li>亚精胺
<ul>
<li><a href="https://www.medsci.cn/article/show_article.do?id=420d12904103">Science：科学背书！从精液中发现的亚精胺，竟然有着抗衰老、抗癌、保护心血管和神经、改善肥胖和2型糖尿病等逆天神效</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/388942219">饮食中亚精胺摄入量高会降低死亡率</a></li>
</ul>
</li>
</ul>
<h5 id="气体"><a class="markdownIt-Anchor" href="#气体"></a> 气体</h5>
<ul>
<li>吸烟
<ul>
<li><a href="https://www.medsci.cn/article/show_article.do?id=02ca2083319b">即使是低强度吸烟，也增加死亡风险！</a>
<ul>
<li>研究发现：在42 416名男性和86 735名女性（年龄在35-89岁之间，以前没有患病）中，18 985名男性（45%）和18 072名女性（21%）目前吸烟，其中33%的男性吸烟者和39%的女性吸烟者并不每天吸烟。8866名男性（21%）和53 912名女性（62%）从不吸烟。在随访期间，与从不吸烟相比，每天&lt;10支烟或每天≥10支烟的全因死亡率危险比分别为1.17（95%置信区间1.10-1.25）和1.54（1.42-1.67）。无论年龄或性别，危险比相似。与每日吸烟关系最密切的疾病是呼吸道癌症、慢性阻塞性肺病和胃肠道及血管疾病。在招募时已经戒烟的人的死亡率低于现在每天吸烟者。</li>
<li>吸烟者平均减少寿命11-12年</li>
</ul>
</li>
<li><a href="https://www.zhihu.com/question/24846224/answer/1719798177">吸烟让人过瘾是什么原理？有节制的吸烟依旧有害吗？</a></li>
</ul>
</li>
</ul>
<h5 id="光照"><a class="markdownIt-Anchor" href="#光照"></a> 光照</h5>
<ul>
<li>晒太阳
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/76301306">晒太阳和死亡率的关系，如何科学，安全的晒太阳？<br />
</a>
<ul>
<li>丹麦一项长达26年的研究发现，多晒太阳能显著延长寿命，即使是由于过度暴晒诱发皮肤癌的患者，平均寿命也比普通人长了6岁。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="药物"><a class="markdownIt-Anchor" href="#药物"></a> 药物</h5>
<ul>
<li>NMN</li>
<li>二甲双胍
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/419202902">“胍”吹必看 丨我就是神药——二甲双胍</a>
<ul>
<li>二甲双胍不仅在多种肿瘤、心血管疾病及糖尿病中发挥保护作用，而且在肥胖、肝病、肾病及衰老方面也大放异彩。</li>
</ul>
</li>
<li><a href="https://zhuanlan.zhihu.com/p/357807109">二甲双胍2020最值得了解的“吃瓜”大新闻——护胃、健脑、抗衰、防癌还是致癌？</a></li>
<li><a href="https://baijiahao.baidu.com/s?id=1729999374705305768">二甲双胍真的那么神吗？美研究：父亲服用二甲双胍或致子女有缺陷</a></li>
<li><img src="https://user-images.githubusercontent.com/2707039/163702325-5d427542-9ae5-4311-8979-d0d326a9832f.jpg" alt="二甲双胍" /></li>
<li>不良反应
<ul>
<li>作为一种使用近百年的药物，二甲双胍的不良反应已经非常明确，常见的有：维生素B12缺乏（7%-17.4%），胃肠道不良反应（最高53%），疲倦（9%），头痛（6%）；严重但不常见的不良反应包括乳酸酸中毒、肝损伤；也有研究表明可能对胎儿致畸</li>
</ul>
</li>
</ul>
</li>
<li>复合维生素
<ul>
<li><a href="https://health.qq.com/a/20121023/000026.htm">服用复合维生素可降低癌症危险8%，其他效果并不显著</a></li>
</ul>
</li>
<li>葡萄糖胺
<ul>
<li><a href="https://www.sohu.com/a/436372221_120873241">神奇！氨糖降低心血管死亡率65%，与定期运动效果相当</a></li>
<li>美国西弗吉尼亚大学最新研究发现 氨糖（软骨素） 可以降低心血管死亡率65%，降低总体死亡率39%，效果与坚持定期运动相对</li>
<li>该研究使用1999年至2010年，16,686名成年人的国家健康和营养检查(NHANES)数据，参与者的中位追踪时间为107个月，而其中有648位参与者定期且每服用日500-1000毫克的葡萄糖胺/软骨素一年以上。</li>
</ul>
</li>
<li>亚精胺
<ul>
<li><a href="https://www.medsci.cn/article/show_article.do?id=420d12904103">Science：科学背书！从精液中发现的亚精胺，竟然有着抗衰老、抗癌、保护心血管和神经、改善肥胖和2型糖尿病等逆天神效</a></li>
<li>亚精胺是最容易从人体肠道吸收的多胺。许多的食物中都含有大量的亚精胺，例如新鲜的青椒、小麦胚芽、花椰菜、西兰花、蘑菇和各种奶酪，尤其在纳豆等大豆制品、香菇和榴莲中含量更高。在本实验中，研究人员选择了829位年龄在45-84岁之间的参与者进行了为期20年的随访，分析了饮食中亚精胺摄入量与人类死亡率之间的潜在关联。</li>
<li>研究发现，女性的亚精胺摄入量高于男性，并且摄入量都会随着年龄的增长而下降。亚精胺的主要来源是全谷物（占13.4%）、苹果和梨（占13.3%）、沙拉（占9.8%）、芽菜（占7.3%）和马铃薯（占6.4%）。研究根据亚精胺摄入量将人群分为三组，低摄入量组（&lt;62.2 µmol / d）、中摄入量组（62.2–79.8 µmol / d）和高摄入量组（&gt; 79.8 µmol / d）。随访期间共记录了341例死亡，其中血管疾病137例，癌症94例，其他原因110例。经计算低中高三组的粗略死亡率分别为40.5%、23.7%和15.1%，这些数据表明亚精胺摄入量与全因死亡率之间的负相关关系显著。随着逐步对年龄、性别和热量的比例进行调整，这种相关关系依然显著。</li>
</ul>
</li>
<li>综合
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/145495570">《自然》子刊深度综述：如何开发抗衰老药</a></li>
<li><img src="https://user-images.githubusercontent.com/2707039/163702474-205baeec-f0ce-4e8d-96a4-36efe47534de.jpg" alt="如何开发抗衰老药" /></li>
</ul>
</li>
</ul>
<h4 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h4>
<h5 id="挥拍运动"><a class="markdownIt-Anchor" href="#挥拍运动"></a> 挥拍运动</h5>
<ul>
<li><a href="https://www.sohu.com/a/535581770_121124216">哪种运动性价比最高？权威医学杂志“柳叶刀”给出答案了 </a>
<ul>
<li>一周三次，每次45-60分钟，挥拍运动，降低~47%全因死亡率</li>
<li>羽毛球、乒乓球、网球等都算挥拍运动，但由于西化研究背景，可能指网球更多。这隐式的表达了全身锻炼更为重要</li>
</ul>
</li>
</ul>
<h5 id="走路"><a class="markdownIt-Anchor" href="#走路"></a> 走路</h5>
<ul>
<li><a href="http://www.shcell.org/219/3571.html">走路降低全因死亡率超过50%！每天走多少步最合适？《JAMA》子刊超10年研究告诉你答案</a>
<ul>
<li><img src="https://user-images.githubusercontent.com/2707039/163704147-afec1c79-799b-4db8-b547-1a2431d504c9.jpg" alt="走路降低全因死亡率" /></li>
<li>注1：这项研究参与者的平均年龄为45.2岁</li>
<li>注2：平均步数的多少与职业有关，此项研究仅表明相关性，还没有更深度的因果分析</li>
</ul>
</li>
</ul>
<h5 id="刷牙"><a class="markdownIt-Anchor" href="#刷牙"></a> 刷牙</h5>
<ul>
<li><a href="https://www.cn-healthcare.com/articlewm/20211209/content-1293760.html">50万国人研究证实：不好好刷牙，致癌！血管疾病也会增多！</a>
<ul>
<li>经常不刷牙的人：癌症、慢性阻塞性肺病及肝硬化风险分别增加了9%、12%和25%，过早死亡风险增加25%。</li>
</ul>
</li>
</ul>
<h5 id="泡澡"><a class="markdownIt-Anchor" href="#泡澡"></a> 泡澡</h5>
<ul>
<li><a href="https://www.cn-healthcare.com/article/20200326/content-533379.html">定期洗澡降低心血管疾病发作风险</a>
<ul>
<li>与每周一至两次泡澡或根本不泡澡相比，每天洗热水澡可以降低28%的心血管疾病总风险，降低26%的中风总风险，脑出血风险下降46%。而浴缸浴的频率与心源性猝死的风险增加无关。</li>
</ul>
</li>
</ul>
<h5 id="做家务老年男性"><a class="markdownIt-Anchor" href="#做家务老年男性"></a> 做家务（老年男性）</h5>
<ul>
<li><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0061529">Housework Reduces All-Cause and Cancer Mortality in Chinese Men</a>
<ul>
<li>72岁之后男性每周做重型家务可以减少29%平均死亡率</li>
<li>重型家务：吸尘、擦地板、拖地、擦洗窗户、洗车、搬动家具、搬煤气罐等等。</li>
<li>轻型家务：掸灰尘、洗碗、手洗衣服、熨烫、晾衣服、做饭、买日用品等等。</li>
</ul>
</li>
</ul>
<h5 id="睡眠"><a class="markdownIt-Anchor" href="#睡眠"></a> 睡眠</h5>
<ul>
<li><a href="https://med.sina.com/article_detail_103_1_105491.html">超30万亚洲人数据：每天睡几个小时最有益长寿？</a>
<ul>
<li>在男性中，与睡眠时长为7小时相比：睡眠持续时间≥10小时与全因死亡风险增加34%相关；</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163704166-226b7ebb-92ce-4753-a3e7-77a87652a104.jpg" alt="睡眠-男" /></li>
<li>在女性中，与睡眠持续时间7小时相比：睡眠持续时间≥10小时与全因死亡风险增加48%相关；</li>
<li><img src="https://user-images.githubusercontent.com/2707039/163704169-c5c715aa-7130-403b-b0d1-ec34fab094d8.png" alt="睡眠-女" /></li>
</ul>
</li>
<li><a href="https://www.thepaper.cn/newsDetail_forward_14461799">颠覆认知！加拿大研究发现：早睡比熬夜或许更伤身，几点睡才好？</a>
<ul>
<li>其中一个结论为，就寝时间与全因死亡率的关联性强，过早睡觉和过晚睡觉都会影响健康，但是早睡增加的全因死亡率比晚睡增加的死亡率高，早睡增加了43%的死亡风险，而晚睡增加了15%的死亡风险。</li>
<li>这项调查研究，还存在很多局限性，比如没有直接证明就寝时间与死亡的关系，仅仅说明相关性，通过参与人群自我报告统计睡眠时间，数据不够客观</li>
</ul>
</li>
</ul>
<h4 id="上下文"><a class="markdownIt-Anchor" href="#上下文"></a> 上下文</h4>
<h5 id="情绪"><a class="markdownIt-Anchor" href="#情绪"></a> 情绪</h5>
<ul>
<li><a href="https://www.x-mol.com/paper/1288184397379059712/t?recommendPaper=1263704526086578176">悲观情绪与更高的全因死亡率和心血管疾病死亡率有关，但乐观情绪并不能起到保护作用</a></li>
<li><a href="https://www.nature.com/articles/s41598-020-69388-y?utm_source=xmol&amp;utm_medium=affiliate&amp;utm_content=meta&amp;utm_campaign=DDCN_1_GL01_metadata_scirep">Pessimism is associated with greater all-cause and cardiovascular mortality, but optimism is not protective</a>
<ul>
<li>在1993-1995年间，一项针对50岁以上澳大利亚人健康的双胞胎研究中包括了生活取向测试（LOT），其中包含乐观和悲观的项目。平均20年后，参与者与来自澳大利亚国家死亡指数的死亡信息相匹配。在2,978名具有很多可用分数的参与者中，有1,068人死亡。生存分析测试了各种乐观因素和悲观情绪分数与任何原因，癌症，心血管疾病或其他已知原因的死亡率之间的关联。年龄调整后的悲观量表上的核心与全因和心血管疾病死亡率相关（每1个标准差单位的危险比，95％置信区间和p值1.134、1.065–1.207、8.85×10 –5和1.196、1.045–1.368、0.0093 ），但不会因癌症死亡。乐观得分与悲观得分之间的相关性很弱（年龄调整后的等级相关系数= − 0.176），但与总死亡率或特定原因死亡率没有显着相关性。反向因果关系（引起悲观情绪的疾病）是不可能的，因为在那种情况下，心血管疾病和癌症都会导致悲观情绪。</li>
</ul>
</li>
</ul>
<h5 id="贫富"><a class="markdownIt-Anchor" href="#贫富"></a> 贫富</h5>
<ul>
<li><a href="https://www.cn-healthcare.com/articlewm/20210727/content-1246348.html">JAMA子刊：贫富差距真能影响寿命？这可能是真的！</a>
<ul>
<li>该研究使用1994-1996年第一次收集的数据，并通过生存模型来分析净资产和长寿之间的关联。结果显示，共收纳5414 名参与者，平均年龄为 46.7岁，包括 2766 名女性。较高的净资产与较低的死亡风险相关。特别是在兄弟姐妹和双胞胎中（n = 2490），在较高的净资产和较低的死亡率之间观察到类似的关联，表明拥有更多财富的兄弟姐妹或双胞胎比拥有更少财富的兄弟姐妹/双胞胎活得更久。</li>
</ul>
</li>
</ul>
<h5 id="体重"><a class="markdownIt-Anchor" href="#体重"></a> 体重</h5>
<ul>
<li><a href="https://www.chinacdc.cn/gwxx/202009/t20200904_218959.html">JAMA子刊：减肥要趁早，才能有效降低死亡率风险</a>
<ul>
<li>对体重减轻的死亡率风险评估发现，体重从肥胖减轻到超重的成年人与稳定肥胖人群相比，全因死亡率降低了54％（危险比为0.46），然而从成年初期的超重减轻到中年以前的正常体重的人群的死亡率风险并未降低（风险比为1.12）。</li>
<li><img src="https://raw.githubusercontent.com/qhy040404/Image-Resources-Repo/master/zoi200509t3_1596761185.02415.png" alt="Table3" /></li>
</ul>
</li>
</ul>
<h5 id="新冠"><a class="markdownIt-Anchor" href="#新冠"></a> 新冠</h5>
<ul>
<li><a href="https://www.nature.com/articles/s41591-020-1112-0.pdf">Magnitude, demographics and dynamics of the effect of the first wave of the COVID-19 pandemic on all-cause mortality in 21 industrialized countries</a>
<ul>
<li>目前来看，新冠死亡率（美国）在1.5%左右，人均预期寿命减少了2年</li>
</ul>
</li>
<li><a href="https://www.zhihu.com/question/510943670/answer/2308499719">如何看待美国CDC宣称新冠死亡人数被高估？</a></li>
<li><a href="https://www.cdc.gov/nchs/nvss/deaths.htm">NVSS deaths</a></li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>健康</tag>
      </tags>
  </entry>
  <entry>
    <title>编程中的惯例</title>
    <url>/2022/09/24/%E7%BC%96%E7%A8%8B%E4%B8%AD%E7%9A%84%E6%83%AF%E4%BE%8B/</url>
    <content><![CDATA[<p>本文记录一下编程中的一些约定俗成的惯例：</p>
<span id="more"></span>
<h3 id="在代码中类似fixme-todo的code-comments"><a class="markdownIt-Anchor" href="#在代码中类似fixme-todo的code-comments"></a> 在代码中类似<code>FIXME</code>、<code>TODO</code>的code comments</h3>
<ul>
<li><code>NOTE</code>：描述代码如何工作（当代码功能不显然的时候）</li>
<li><code>XXX</code>：警告可能的陷阱，可以用作<code>NOTE:XXX:</code></li>
<li><code>HACK</code>：代码写的不好或者代码变形可能导致bug，应该用作<code>HACK:FIXME</code></li>
<li><code>FIXME</code>：代码可以工作，但是可以改进（通常用于代码写得很匆忙需要重写）</li>
<li><code>BUG</code>：有问题</li>
<li><code>TODO</code>：没有问题，但是要额外的代码需要编写，通常用于跳过某些功能的实现时。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/1452934/what-is-the-meaning-of-xxx-in-code-comments">What is the meaning of #XXX in code comments?</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>概念</tag>
      </tags>
  </entry>
  <entry>
    <title>编程语言资料整理</title>
    <url>/2022/08/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文汇总一下目前接触到的各编程语言的学习资料：</p>
<span id="more"></span>
<h3 id="c语言"><a class="markdownIt-Anchor" href="#c语言"></a> C语言</h3>
<h4 id="综合教程"><a class="markdownIt-Anchor" href="#综合教程"></a> 综合教程</h4>
<ol>
<li><a href="https://www.runoob.com/cprogramming/c-tutorial.html">C 语言教程（菜鸟教程）</a></li>
<li><a href="https://devdocs.io/c/">C Programming Language (devdocs)</a></li>
<li><a href="http://me.52fhy.com/linux-c/#/">Linux C 编程一站式学习</a></li>
<li><a href="https://wangdoc.com/clang/intro.html">C语言教程（网道）</a></li>
<li><a href="https://en.cppreference.com/w/c/language">C language (cppreference)</a></li>
<li><a href="https://doc.bccnsoft.com/docs/cfuncs_color/">C语言函数大全</a></li>
<li><a href="https://www.cbyexample.com/">C by Example</a></li>
<li><a href="https://www.learncpp.com/">Learn C++ – Skill up with our free tutorials</a></li>
</ol>
<h4 id="实战"><a class="markdownIt-Anchor" href="#实战"></a> 实战</h4>
<ol>
<li><a href="https://brennan.io/2015/01/16/write-a-shell-in-c/">Tutorail - Write a Shell in C</a></li>
<li><a href="https://buildyourownlisp.com/contents">Build your Own Lisp</a></li>
</ol>
<h4 id="文章收集"><a class="markdownIt-Anchor" href="#文章收集"></a> 文章收集</h4>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/483372519">用gdb学C语言</a></li>
<li><a href="https://www.cnblogs.com/sky-heaven/p/8547950.html">Linux下C程序的反汇编</a></li>
<li><a href="https://blog.csdn.net/puppet_master/article/details/49963727">指针的大小到底由谁决定</a></li>
<li><a href="https://opensource.com/article/22/5/gnu-c-compiler">A programmer’s guide to GNU C Compiler</a></li>
<li><a href="https://tmewett.com/c-tips/">Everything I wish I knew when learning C - Tom Mewett</a>：C语言学习笔记</li>
<li><a href="https://www.deusinmachina.net/p/c-strings-and-my-slow-descent-to">C Strings and my slow descent to madness - by Diego Crespo</a>：C语言字符串处理</li>
</ol>
<h4 id="工具"><a class="markdownIt-Anchor" href="#工具"></a> 工具</h4>
<ol>
<li><a href="https://pythontutor.com/c.html#mode=edit">C Tutor</a></li>
</ol>
<h3 id="c"><a class="markdownIt-Anchor" href="#c"></a> C++</h3>
<h4 id="综合教程-2"><a class="markdownIt-Anchor" href="#综合教程-2"></a> 综合教程</h4>
<ol>
<li><a href="https://www.w3cschool.cn/cpp/">C++教程（W3Cschool）</a></li>
<li><a href="http://c.biancheng.net/cplus/">C++入门教程（C语言中文网）</a></li>
<li><a href="https://en.cppreference.com/w/cpp/language">C++ language (cppreference)</a></li>
<li><a href="https://www.stroustrup.com/index.html">Bjarne Stroustrup’s homepage</a>：C++之父的主页</li>
<li><a href="https://cppbyexample.com/">C++ By Example</a></li>
<li><a href="https://cntransgroup.github.io/EffectiveModernCppChinese/Introduction.html">Effective Modern C++</a></li>
</ol>
<h4 id="工具-2"><a class="markdownIt-Anchor" href="#工具-2"></a> 工具</h4>
<ol>
<li><a href="https://pythontutor.com/cpp.html#mode=edit">C++ Tutor</a></li>
</ol>
<h4 id="文章收集-2"><a class="markdownIt-Anchor" href="#文章收集-2"></a> 文章收集</h4>
<ol>
<li>[<a href="https://www.stroustrup.com/index.html">Bjarne Stroustrup</a>’s C++ Style and Technique FAQ](<a href="https://www.stroustrup.com/bs_faq2.html#whitespace">https://www.stroustrup.com/bs_faq2.html#whitespace</a>)</li>
</ol>
<h4 id="实战-2"><a class="markdownIt-Anchor" href="#实战-2"></a> 实战</h4>
<ol>
<li><a href="https://github.com/natalie-lang/natalie_parser">Natalie Parser</a></li>
</ol>
<h3 id="c-2"><a class="markdownIt-Anchor" href="#c-2"></a> C#</h3>
<h4 id="综合教程-3"><a class="markdownIt-Anchor" href="#综合教程-3"></a> 综合教程</h4>
<p>1.<a href="https://www.csharp-examples.net/">C# Examples</a></p>
<h3 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h3>
<h4 id="综合教程-4"><a class="markdownIt-Anchor" href="#综合教程-4"></a> 综合教程</h4>
<ol>
<li><a href="https://www.runoob.com/python3/python3-tutorial.html">Python 3 教程（菜鸟教程）</a></li>
<li><a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python教程 - 廖雪峰</a></li>
<li><a href="https://pymotw.com/3/">Python标准库</a></li>
<li><a href="https://pythonguidecn.readthedocs.io/zh/latest/">Python最佳实践指南</a></li>
<li><a href="https://wiki.python.org/moin/">Python wiki</a></li>
<li><a href="https://docs.python.org/3/">Python 3.10.6 documentation</a></li>
<li><a href="https://www.learnbyexample.org/python/">Learn Python By Example</a></li>
<li><a href="https://realpython.com/cpython-source-code-guide/">Your Guide to the CPython Source Code – Real Python</a></li>
</ol>
<h4 id="实战-3"><a class="markdownIt-Anchor" href="#实战-3"></a> 实战</h4>
<ol>
<li><a href="https://python-patterns.guide/">Python Design Patterns</a></li>
<li><a href="https://python3webspider.cuiqingcai.com/">Python3网络爬虫开发实战</a></li>
<li><a href="https://www.coursera.org/projects/python-game">Create Your First Game with Python</a>：使用python制作翻牌游戏</li>
<li><a href="https://www.coursera.org/projects/snakegame-python-pygame">Snake game in Python: use Pygame to build your game</a>：使用python制作贪吃蛇</li>
<li><a href="https://www.coursera.org/learn/principles-of-computing-1#syllabus">Principles of Computing (Part 1) | Coursera</a>：使用python学习计算原理</li>
</ol>
<h4 id="文章收集-3"><a class="markdownIt-Anchor" href="#文章收集-3"></a> 文章收集</h4>
<ol>
<li><a href="https://www.zhihu.com/question/55493026/answer/163537026">你们都是怎么学Python的</a></li>
<li><a href="https://www.zhihu.com/question/361165485/answer/950351397">Python进阶之路</a></li>
<li><a href="https://docs.python.org/3/reference/datamodel.html#specialnames">Special method names</a></li>
<li><a href="https://www.scrapingbee.com/blog/web-scraping-101-with-python/">Web Scraping with Python: Everything you need to know (2022)</a></li>
<li><a href="https://ahgamut.github.io/2021/07/13/ape-python/">Python is Actually Protable</a></li>
<li><a href="https://www.kawabangga.com/how-to-learn-python">如何学Python?</a></li>
<li><a href="https://www.cnblogs.com/liangmingshen/p/9297381.html">Pycharm常用快捷键</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/98096152">有什么 Pycharm 插件能让你撸代码撸到高潮？</a></li>
<li><a href="https://github.com/chinesehuazhou/python-whydo">Explore Python’s charms by asking WHY questions</a>：一系列关于Python特性的文章</li>
</ol>
<h4 id="工具-3"><a class="markdownIt-Anchor" href="#工具-3"></a> 工具</h4>
<ol>
<li><a href="https://pythontutor.com/">Python Tutor</a></li>
<li><a href="https://www.jetbrains.com/pycharm/learn/">Learn PyCharm</a></li>
</ol>
<h3 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> JavaScript</h3>
<h4 id="综合教程-5"><a class="markdownIt-Anchor" href="#综合教程-5"></a> 综合教程</h4>
<ol>
<li><a href="https://cn.history.js.org/index.html">JavaScript二十年</a></li>
<li><a href="https://javascript.info/">The Modern JavaScript Tutorial</a></li>
<li><a href="https://zh.javascript.info/?utm_source=bestxtools.com">现代 JavaScript 教程</a></li>
<li><a href="https://wangdoc.com/es6/index.html">ES6 教程</a></li>
<li><a href="https://javascriptbyexample.com/">JavaScript by Example</a></li>
</ol>
<h4 id="实战-4"><a class="markdownIt-Anchor" href="#实战-4"></a> 实战</h4>
<ol>
<li><a href="https://www.patterns.dev/posts/">Patterns</a></li>
</ol>
<h4 id="文章收集-4"><a class="markdownIt-Anchor" href="#文章收集-4"></a> 文章收集</h4>
<ol>
<li><a href="https://blog.openreplay.com/how-to-use-chrome-as-a-code-editor-and-debugger">How to use Chrome as a Code Editor and Debugger</a></li>
<li><a href="https://www.tuicool.com/articles/NJvQbu6">一文搞懂JavaScript中的预编译</a></li>
<li><a href="https://www.tuicool.com/articles/iqMzEz6">JS运行机制最全面的一次梳理</a></li>
</ol>
<h4 id="工具-4"><a class="markdownIt-Anchor" href="#工具-4"></a> 工具</h4>
<ol>
<li><a href="https://www.joshwcomeau.com/operator-lookup/">Operator Lookup</a></li>
</ol>
<h3 id="typescript"><a class="markdownIt-Anchor" href="#typescript"></a> TypeScript</h3>
<h4 id="综合教程-6"><a class="markdownIt-Anchor" href="#综合教程-6"></a> 综合教程</h4>
<ol>
<li><a href="https://wangdoc.com/typescript/">TypeScript 教程 - 网道</a>：阮一峰编写的教程</li>
</ol>
<h3 id="css"><a class="markdownIt-Anchor" href="#css"></a> CSS</h3>
<h4 id="实战-5"><a class="markdownIt-Anchor" href="#实战-5"></a> 实战</h4>
<ol>
<li><a href="https://github.com/ui-buttons/core">ui-button/core</a></li>
<li><a href="https://www.handsome-css.com/">AwA | HANDSOME-CSS3-LIB</a>：CSS样式组件</li>
</ol>
<h3 id="prolog"><a class="markdownIt-Anchor" href="#prolog"></a> Prolog</h3>
<h4 id="综合教程-7"><a class="markdownIt-Anchor" href="#综合教程-7"></a> 综合教程</h4>
<ol>
<li><a href="https://www.swi-prolog.org/pldoc/man?section=quickstart">SWI Prolog</a></li>
</ol>
<h4 id="文章收集-5"><a class="markdownIt-Anchor" href="#文章收集-5"></a> 文章收集</h4>
<ol>
<li><a href="https://www.ruanyifeng.com/blog/2019/01/prolog.html">Prolog 语言入门教程</a></li>
</ol>
<h3 id="go"><a class="markdownIt-Anchor" href="#go"></a> Go</h3>
<h4 id="综合教程-8"><a class="markdownIt-Anchor" href="#综合教程-8"></a> 综合教程</h4>
<ol>
<li><a href="https://draveness.me/golang/">Go 语言设计与实现</a></li>
<li><a href="https://books.studygolang.com/gopl-zh/">Go语言圣经（中文版）</a></li>
<li><a href="https://chai2010.cn/go-ast-book/">Go语言定制指南</a></li>
<li><a href="https://geektutu.com/post/high-performance-go.html">Go 语言高性能编程</a></li>
<li><a href="http://books.studygolang.com/The-Golang-Standard-Library-by-Example/">Go语言标准库</a></li>
<li><a href="https://pkg.go.dev/std?from=from_parent_mindnote">Standard library</a></li>
<li><a href="https://studygolang.com/pkgdoc?from=from_parent_mindnote">Golang标准库文档</a></li>
<li><a href="https://go.dev/doc/">Documentation</a></li>
<li><a href="https://go.dev/ref/spec">The Go Programming Language Specification</a></li>
<li><a href="https://chai2010.cn/advanced-go-programming-book/">Go语言高级编程</a></li>
<li><a href="https://gobyexample.com/">Go by Example</a></li>
<li><a href="http://books.studygolang.com/gobyexample/">Go by Example 中文</a></li>
</ol>
<h4 id="文章收集-6"><a class="markdownIt-Anchor" href="#文章收集-6"></a> 文章收集</h4>
<ol>
<li><a href="https://coolshell.cn/articles/21615.html">GO编程模式：泛型编程</a></li>
<li><a href="https://zetcode.com/golang/module/">Go module</a></li>
<li><a href="https://www.tuicool.com/articles/uERzieF">9张图轻松吃透Go内存管理单元</a></li>
<li><a href="https://linux.cn/article-14525-1.html">我最喜欢的Go构建选项</a></li>
<li><a href="https://go.dev/blog/">The Go Blog</a></li>
<li><a href="https://www.karanpratapsingh.com/blog/learn-go-the-complete-course">Learn Go: The complete course</a></li>
<li><a href="https://www.tuicool.com/articles/Qjm2YzE">我做Go项目的一些实战经验</a></li>
<li><a href="http://www.yinwang.org/blog-cn/2014/04/18/golang">对Go语言的综合评价</a></li>
<li><a href="https://avivcarmi.com/finding-the-best-go-project-structure-part-1/">Finding The Best Go Project Structure - Part 1</a></li>
<li><a href="https://avivcarmi.com/finding-the-best-go-project-structure-part-2/">Finding The Best Go Project Structure - Part 2</a></li>
</ol>
<h4 id="实战-6"><a class="markdownIt-Anchor" href="#实战-6"></a> 实战</h4>
<ol>
<li><a href="https://eli.thegreenplace.net/2022/a-faster-lexer-in-go/">A faster lexer in Go</a></li>
<li><a href="https://wa-lang.org/ugo-compiler-book/#%C2%B5go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E8%BF%B7%E4%BD%A0go%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E5%99%A8">µGo语言实现——从头开发一个迷你Go语言编译器</a></li>
<li><a href="https://go.dev/doc/effective_go">Effective Go</a></li>
<li><a href="https://dave.cheney.net/practical-go/presentations/qcon-china.html">Practical Go : Real world advice for writing maintainable Go programs</a></li>
<li><a href="https://dave.cheney.net/high-performance-go-workshop/dotgo-paris.html">High Performance Go Workshop</a></li>
<li><a href="https://learnku.com/docs/go-database-sql">Go SQL 数据库教程</a></li>
</ol>
<h4 id="工具-5"><a class="markdownIt-Anchor" href="#工具-5"></a> 工具</h4>
<ol>
<li><a href="https://go.dev/play/">The Go Playground</a></li>
</ol>
<h4 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h4>
<ol>
<li><a href="https://goproxy.io/zh/docs/getting-started.html">GOPROXY.IO</a></li>
<li><a href="https://goproxy.cn/">Goproxy.cn</a></li>
</ol>
<h3 id="matlab"><a class="markdownIt-Anchor" href="#matlab"></a> Matlab</h3>
<h4 id="实战-7"><a class="markdownIt-Anchor" href="#实战-7"></a> 实战</h4>
<ol>
<li><a href="https://wps.pearsoned.com/aw_sauer_numerical_2/212/54479/13946681.cw/index.html">NUMERICAL ANALYSIS</a></li>
</ol>
<h3 id="clojure"><a class="markdownIt-Anchor" href="#clojure"></a> Clojure</h3>
<h4 id="综合教程-9"><a class="markdownIt-Anchor" href="#综合教程-9"></a> 综合教程</h4>
<ol>
<li><a href="https://tryclojure.org/">Try Clojure</a></li>
</ol>
<h3 id="rust"><a class="markdownIt-Anchor" href="#rust"></a> Rust</h3>
<h4 id="综合教程-10"><a class="markdownIt-Anchor" href="#综合教程-10"></a> 综合教程</h4>
<ol>
<li><a href="https://nomicon.purewhite.io/">Rust秘典</a></li>
<li><a href="https://zh.practice.rs/why-exercise.html">Rust语言实战</a></li>
<li><a href="https://course.rs/about-book.html">Rust语言圣经(Rust Course)</a></li>
<li><a href="https://doc.rust-lang.org/book/#the-rust-programming-language">The Rust Programming Language</a></li>
<li><a href="https://doc.rust-lang.org/rust-by-example/index.html#rust-by-example">Rust by Example</a></li>
<li><a href="https://doc.rust-lang.org/std/index.html#the-rust-standard-library">The Rust Standard Library</a></li>
<li><a href="https://cheats.rs/">Rust Language Cheat Sheet</a></li>
</ol>
<h4 id="文章收集-7"><a class="markdownIt-Anchor" href="#文章收集-7"></a> 文章收集</h4>
<ol>
<li><a href="https://www.sheshbabu.com/posts/rust-wasm-yew-single-page-application/">Single Page Applications using Rust</a></li>
<li><a href="https://linux.cn/article-14563-1.html">2022 Rust 入门指南</a></li>
<li><a href="https://github.com/rustlang-cn/Rustt/blob/main/Articles/%5B2022-05-04%5D%20%E5%8F%AF%E8%A7%86%E5%8C%96%20Rust%20%E5%90%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80.md">可视化 Rust 各数据结构的内存布局</a></li>
<li><a href="https://github.blog/2023-08-30-why-rust-is-the-most-admired-language-among-developers/">Why Rust is the most admired language among developers - The GitHub Blog</a>：为什么Rust受开发者欢迎</li>
</ol>
<h4 id="工具-6"><a class="markdownIt-Anchor" href="#工具-6"></a> 工具</h4>
<ol>
<li><a href="https://c2rust.com/">C2Rust</a></li>
</ol>
<h3 id="lisp"><a class="markdownIt-Anchor" href="#lisp"></a> Lisp</h3>
<h4 id="文章收集-8"><a class="markdownIt-Anchor" href="#文章收集-8"></a> 文章收集</h4>
<ol>
<li><a href="http://www.ruanyifeng.com/blog/2010/10/why_lisp_is_superior.html">为什么Lisp语言如此先进？（译文）</a></li>
<li><a href="https://twobithistory.org/2018/10/14/lisp.html">How Lisp Became God’s Own Programming Language</a></li>
</ol>
<h3 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h3>
<ol>
<li><a href="https://www.morling.dev/blog/getting-started-with-java-development-2023/">Getting Started With Java Development in 2023 — An Opinionated Guide - Gunnar Morling</a></li>
</ol>
<h3 id="kotlin"><a class="markdownIt-Anchor" href="#kotlin"></a> Kotlin</h3>
<h4 id="综合教程-11"><a class="markdownIt-Anchor" href="#综合教程-11"></a> 综合教程</h4>
<ol>
<li><a href="https://developer.android.com/kotlin?hl=zh-cn">使用Kotlin开发Android应用</a></li>
</ol>
<h4 id="工具-7"><a class="markdownIt-Anchor" href="#工具-7"></a> 工具</h4>
<ol>
<li><a href="https://play.kotlinlang.org/">Kotlin Playground</a></li>
</ol>
<h3 id="haskell"><a class="markdownIt-Anchor" href="#haskell"></a> Haskell</h3>
<h4 id="综合教程-12"><a class="markdownIt-Anchor" href="#综合教程-12"></a> 综合教程</h4>
<ol>
<li><a href="https://lotz84.github.io/haskellbyexample/">Haskell by Example</a></li>
<li><a href="https://lhbg-book.link/">Learn Haskell By Build A Blog</a></li>
<li><a href="http://cnhaskell.com/#">Real World Haskell 中文版</a></li>
<li><a href="https://learnyouahaskell.mno2.org">Haskell 趣学指南</a></li>
<li><a href="https://github.com/bitemyapp/learnhaskell">bitemyapp/learnhaskell</a></li>
<li><a href="https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours">Write Yourself a Scheme in 48 Hours</a></li>
<li><a href="https://smunix.github.io/dev.stephendiehl.com/fun/index.html">Write You a Haskell</a></li>
<li><a href="https://argumatronic.com/">argumatronic -</a>：函数式编程和代数</li>
<li><a href="http://learnyouahaskell.com/chapters">Chapters - Learn You a Haskell for Great Good!</a></li>
<li><a href="https://rwh.readthedocs.io/en/latest/">Real World Haskell 中文版 — Real World Haskell 中文版</a></li>
<li><a href="https://typeclasses.substack.com/p/memfd-an-example-of-haskell-and-c">memfd: An example of Haskell and C - by Chris Martin</a></li>
</ol>
<h4 id="dart"><a class="markdownIt-Anchor" href="#dart"></a> Dart</h4>
<h4 id="综合教程-13"><a class="markdownIt-Anchor" href="#综合教程-13"></a> 综合教程</h4>
<ol>
<li><a href="https://www.jpryan.me/dartbyexample/">Dart by Example</a></li>
</ol>
<h3 id="ocaml"><a class="markdownIt-Anchor" href="#ocaml"></a> OCaml</h3>
<h4 id="综合教程-14"><a class="markdownIt-Anchor" href="#综合教程-14"></a> 综合教程</h4>
<ol>
<li><a href="https://cs3110.github.io/textbook/chapters/intro/intro.html">Better Programming Through OCaml</a></li>
<li><a href="https://dev.realworldocaml.org/toc.html">Real World OCaml</a></li>
</ol>
<h3 id="scheme-包括racket"><a class="markdownIt-Anchor" href="#scheme-包括racket"></a> Scheme (包括Racket)</h3>
<h4 id="综合教程-15"><a class="markdownIt-Anchor" href="#综合教程-15"></a> 综合教程</h4>
<ol>
<li><a href="https://htdp.org/">How to Design Programs</a></li>
<li><a href="https://book.douban.com/subject/1140942/">程序设计方法（中文版）</a>（下载有电子版）</li>
<li><a href="https://wizardforcel.gitbooks.io/teach-yourself-scheme/content/000-preface.html">前言 | Scheme 语言简明教程</a></li>
<li><a href="https://deathking.github.io/yast-cn/">Scheme入门教程</a>：英文版为<a href="http://www.shido.info/lisp/idx_scm_e.html">Yet Another Scheme Tutorial</a></li>
<li><a href="https://github.com/OnRoadZy/RacketGuideInChinese">GitHub - OnRoadZy/RacketGuideInChinese: Racket指南（中文翻译）</a></li>
<li><a href="https://tyrchen.github.io/racket-book/index.html">Racket语言入门</a></li>
<li><a href="https://docs.racket-lang.org/quick/index.html">Quick: An Introduction to Racket with Pictures</a></li>
<li><a href="https://mrmathematica.gitbooks.io/ooplai/content/">前言 · OOPLAI中文版</a>：《面向对象编程语言：应用和解释》</li>
<li><a href="https://lotuc.gitbooks.io/plai-cn/content/">封面 · PLAI-cn</a>：《编程语言：应用与解释》</li>
</ol>
<h4 id="文章收集-9"><a class="markdownIt-Anchor" href="#文章收集-9"></a> 文章收集</h4>
<ol>
<li><a href="https://www.ruanyifeng.com/blog/2010/10/why_lisp_is_superior.html">为什么Lisp语言如此先进？（译文） - 阮一峰的网络日志</a></li>
</ol>
<h3 id="agda"><a class="markdownIt-Anchor" href="#agda"></a> Agda</h3>
<h4 id="综合教程-16"><a class="markdownIt-Anchor" href="#综合教程-16"></a> 综合教程</h4>
<ol>
<li><a href="https://people.inf.elte.hu/divip/AgdaTutorial/Index.html">Agda Tutorial</a></li>
</ol>
<h3 id="java-2"><a class="markdownIt-Anchor" href="#java-2"></a> Java</h3>
<h4 id="综合教程-17"><a class="markdownIt-Anchor" href="#综合教程-17"></a> 综合教程</h4>
<ol>
<li><a href="https://www3.ntu.edu.sg/home/ehchua/programming/index.html">https://www3.ntu.edu.sg/home/ehchua/programming/index.html</a></li>
</ol>
<h3 id="cheatsheets"><a class="markdownIt-Anchor" href="#cheatsheets"></a> CheatSheets</h3>
<ul>
<li><a href="https://gto76.github.io/python-cheatsheet/">Comprehensive Python Cheatsheet</a></li>
<li><a href="https://github.com/mortennobel/cpp-cheatsheet">cpp-cheatsheet</a></li>
<li><a href="https://cheats.rs/">Rust Language Cheat Sheet</a></li>
<li><a href="https://github.com/mbeaudru/modern-js-cheatsheet">Modern JavaScript Cheatsheet</a></li>
<li><a href="https://github.com/typescript-cheatsheets/react">React+TypeScript Cheatsheets</a></li>
<li><a href="https://github.com/FavioVazquez/ds-cheatsheets">Data Science Cheatsheets</a></li>
</ul>
<h3 id="综合资料"><a class="markdownIt-Anchor" href="#综合资料"></a> 综合资料</h3>
<h4 id="综合教程-18"><a class="markdownIt-Anchor" href="#综合教程-18"></a> 综合教程</h4>
<ul>
<li><a href="https://learnxinyminutes.com/">Learn X in Y minutes</a></li>
<li><a href="https://exercism.org/tracks">exercism</a>：60 languages for you to master</li>
<li><a href="http://www.java2s.com/">Programming Tutorials and Source Code Examples</a></li>
<li><a href="https://quickref.me">Quick Reference</a></li>
<li><a href="https://www.codewars.com/join">codewars</a></li>
<li><a href="https://google.github.io/styleguide/">Google Style Guides | styleguide</a>：Google代码风格指南</li>
<li><a href="https://wiki.eryajf.net/comein/">博客导引 | 二丫讲梵</a>：二丫讲梵博客资源索引</li>
<li><a href="https://appletree.or.kr/quick_reference_cards/">Quick Reference Cards</a>：别人整理的各种cheatsheets</li>
</ul>
<h4 id="文章收集-10"><a class="markdownIt-Anchor" href="#文章收集-10"></a> 文章收集</h4>
<ol>
<li><a href="https://stackoverflow.blog/2022/04/04/comparing-go-vs-c-in-embedded-applications/">Comparing Go vs. C in embedded applications</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>指南</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟机上CentOS7系统网络配置</title>
    <url>/2021/12/11/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8ACentOS7%E7%B3%BB%E7%BB%9F%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在Virtual Box上安装的CentOS7系统上配置网络的过程，以便后续查阅。</p>
<span id="more"></span>
<h3 id="查看当前网络配置"><a class="markdownIt-Anchor" href="#查看当前网络配置"></a> 查看当前网络配置</h3>
<p>在安装好CentOS7系统后，打开终端运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line">ping 192.168.*.*    //主机地址</span><br></pre></td></tr></table></figure>
<p>会发现ping不通。</p>
<p>同样，通过 <code>ifconfig</code> 查看会发现还未给虚拟机分配Ipv4地址。</p>
<p>在进一步设置之前，需要在虚拟机设置里将网络设置为：Bridged Adapter + WiFi</p>
<h3 id="为虚拟机分配ip地址"><a class="markdownIt-Anchor" href="#为虚拟机分配ip地址"></a> 为虚拟机分配IP地址</h3>
<p>在此，我们通过 <code>dhclient</code> 来为虚拟机分配一个静态的IP地址（需要切换到root模式）</p>
<p>通过 <code>ifconfig</code> 可以查看给虚拟机分配的IP地址，并记录下来。</p>
<p>然后，通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>
<p>对网络配置文件进行编辑。需要修改的内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BOOTPROTO=static</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.123.*    //前面分配的IP地址</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.123.1</span><br><span class="line">DNS1=119.29.29.29</span><br></pre></td></tr></table></figure>
<p>在将上述文件保存后，通过：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure>
<p>重启网络服务使上述配置生效。</p>
<h3 id="检查配置是否生效"><a class="markdownIt-Anchor" href="#检查配置是否生效"></a> 检查配置是否生效</h3>
<p>此时，通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line">ping 192.168.*.*    //主机地址</span><br></pre></td></tr></table></figure>
<p>会发现可以ping通。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
        <tag>CentOS7</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>课程和书籍资源整理</title>
    <url>/2022/09/19/%E8%AF%BE%E7%A8%8B%E5%92%8C%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文整理一下网上口碑较好的英文课程和书籍所对应的中文翻译版本：</p>
<span id="more"></span>
<h3 id="编程入门"><a class="markdownIt-Anchor" href="#编程入门"></a> 编程入门</h3>
<ol>
<li><a href="https://github.com/apachecn/sicp-py-zh">SICP Python版</a>：部署版</li>
<li><a href="https://wizardforcel.gitbooks.io/sicp-py/content/">SICP Python 描述 中文版</a>：在线版</li>
<li><a href="https://inst.eecs.berkeley.edu/~cs61a/sp21/">CS61A</a>。对应精译<a href="https://www.bilibili.com/video/BV1v64y1Q78o">视频</a></li>
</ol>
<h3 id="数据结构和算法"><a class="markdownIt-Anchor" href="#数据结构和算法"></a> 数据结构和算法</h3>
<ol>
<li><a href="http://jeffe.cs.illinois.edu/teaching/algorithms/">Algorithms by Jeff Erickson</a>：据说递归和DP（动态规划）的部分讲的很好。</li>
<li><a href="https://book.douban.com/subject/4048566/">算法设计手册 (豆瓣)</a>：Steve Yegge推荐。</li>
<li><a href="https://www.coursera.org/specializations/algorithms#courses">Algorithms | Coursera</a>：Coursera上斯坦福的算法专项课程</li>
<li><a href="https://cp-algorithms.com/">Main Page - Algorithms for Competitive Programming</a>：编程算法网站，英文</li>
<li><a href="https://the-algorithms.com/">The Algorithms</a>：编程算法网站，英文</li>
</ol>
<h3 id="分布式系统"><a class="markdownIt-Anchor" href="#分布式系统"></a> 分布式系统</h3>
<ol>
<li><a href="https://mit-public-courses-cn-translatio.gitbook.io/mit6-824/">MIT6.824</a>：MIT6.824 中文翻译。对应Lab仓库<a href="https://github.com/OneSizeFitsQuorum/MIT6.824-2021">MIT6.824-2021</a></li>
</ol>
<h3 id="操作系统"><a class="markdownIt-Anchor" href="#操作系统"></a> 操作系统</h3>
<ol>
<li><a href="https://mit-public-courses-cn-translatio.gitbook.io/mit6-s081/">MIT6.S081</a>：MIT6.S081中文翻译。</li>
<li><a href="https://os.phil-opp.com/">Writing an OS in Rust</a>：使用Rust语言编写一个小型的操作系统。</li>
<li><a href="http://www.osdever.net/tutorials/">OS Development Tutorials</a>：操作系统开发教程</li>
<li><a href="http://www.osdev.org/">OSDev.org</a>：操作系统开发维基百科</li>
<li><a href="https://pdos.csail.mit.edu/6.828/2022/index.html">6.1810 / Fall 2022</a>：MIT Operating System Engineering课程</li>
<li><a href="https://www.zhihu.com/question/439569498/answer/1693330823">Linux内核代码大佬们如何观看的？ - 知乎</a></li>
</ol>
<h3 id="解释器和编译器"><a class="markdownIt-Anchor" href="#解释器和编译器"></a> 解释器和编译器</h3>
<ol>
<li><a href="https://craftinginterpreters.com/contents.html">Crafting Interpreters</a></li>
<li><a href="https://zihengcat.github.io/crafting-interpreters-zh-cn/">解释器设计与实现</a>：上书的中文版，只翻译了部分</li>
<li><a href="https://www.yinwang.org/blog-cn/2012/08/01/interpreter">怎样写一个解释器</a>：王垠的文章</li>
<li><a href="https://en.wikipedia.org/wiki/Comparison_of_parser_generators">Comparison of parser generators</a>：维基百科上对各种parser生成器的比较和总结</li>
<li><a href="http://web.stanford.edu/class/cs143/">CS143 Compilers</a>：斯坦福的编译器课程</li>
<li><a href="https://github.com/lazyparser/becoming-a-compiler-engineer">becoming-a-compiler-engineer</a>：中科大出品的较现代化的编译器课程</li>
<li><a href="https://www.zhihu.com/question/315313590/answer/626705164">学习编译原理有什么好的书籍?</a>：有较多知乎大佬认可的编译原理书籍推荐。</li>
<li><a href="https://www.zhihu.com/collection/699187877">编译器</a>：本人编译器知乎收藏夹</li>
<li><a href="https://silverbullettt.bitbucket.io/courses/compiler-2022/index.html">编译原理</a>：南京大学编译原理课程，项目文档为中文</li>
<li><a href="https://hpc-wiki.info/hpc/Compiler">Compiler</a>：HPC网站上关于Compiler的介绍</li>
<li><a href="https://book.douban.com/people/RednaxelaFX/all?sort=rating&amp;start=0&amp;tag=%E7%BC%96%E8%AF%91%E5%99%A8&amp;mode=grid&amp;tags_sort=count">RednaxelaFX的书/编译器(73)</a>：知乎叛逆者的编译器豆瓣书单。</li>
<li><a href="http://parsing-techniques.duguying.net/">介绍 - 解析技术</a></li>
<li><a href="https://iucompilercourse.github.io/IU-P423-P523-E313-E513-Fall-2020/">Course Webpage for Compilers (P423, P523, E313, and E513) | IU-P423-P523-E313-E513-Fall-2020</a>：印第安纳大学使用Racket教学的编译器课程</li>
<li><a href="https://sqlite.org/src/doc/trunk/doc/lemon.html">The Lemon Parser Generator</a>：4000行的C语言parser，搭配《LEMON语法分析生成器（LALR（1）类型）源代码情景分析》使用</li>
<li><a href="https://citw.dev/tutorial/create-your-own-compiler">Create Your Own Compiler - Caught in the Web</a>：互动式地教你动手写编译器。</li>
<li><a href="https://www.timdbg.com/posts/fakers-guide-to-assembly/">The faker’s guide to reading (x86) assembly language // TimDbg</a>：叫你学习x86 assembly language。</li>
</ol>
<h3 id="计算机图形学"><a class="markdownIt-Anchor" href="#计算机图形学"></a> 计算机图形学</h3>
<ol>
<li><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">GAMES101</a>：现代计算机图形学入门</li>
</ol>
<h3 id="静态分析"><a class="markdownIt-Anchor" href="#静态分析"></a> 静态分析</h3>
<ol>
<li><a href="https://pascal-group.bitbucket.io/teaching.html">PASCAL</a>：南大静态分析课程</li>
</ol>
<h3 id="程序验证"><a class="markdownIt-Anchor" href="#程序验证"></a> 程序验证</h3>
<ol>
<li><a href="https://www.zhihu.com/column/c_1311359270597419008">程序验证 - 知乎</a></li>
<li><a href="https://www.andrew.cmu.edu/user/avigad/itp/">Interactive Theorem Proving</a>：CMU的交互式定理证明课程</li>
<li><a href="https://www.cs.cmu.edu/~fp/courses/atp/">15-815 Automated Theorem Proving</a>：CMU的自动定理证明课程</li>
<li><a href="https://xenaproject.wordpress.com/category/imperial/formalising-mathematics-course/">formalising mathematics course</a>：Kevin Buzzard的形式化数学博客教程</li>
<li><a href="https://github.com/analysis-tools-dev/static-analysis#writing">GitHub - analysis-tools-dev/static-analysis</a>：该仓库收集了针对各种语言的静态分析的工具</li>
</ol>
<h3 id="计算机结构"><a class="markdownIt-Anchor" href="#计算机结构"></a> 计算机结构</h3>
<ol>
<li><a href="https://www.coursera.org/learn/build-a-computer">依据基本原理构建现代计算机：从与非门到俄罗斯方块（基于项目的课程）</a>：coursera上的课程，教你从零造一台计算机。课程名又名《nand to tetris》，对应书籍为《计算机系统要素》，官网为 <a href="https://www.nand2tetris.org">https://www.nand2tetris.org</a></li>
<li><a href="https://fengmuzi2003.gitbook.io/csapp3e/">CSAPP重点解读</a>：整理了CSAPP一书的重点和学习建议。</li>
<li><a href="https://nandgame.com/">Nandgame</a>：在玩游戏的过程中教你学会计算机底层硬件知识。</li>
<li><a href="https://nju-projectn.github.io/ics-pa-gitbook/ics2022/index.html">计算机系统基础</a>：南大计算机系统基础</li>
<li>[rCore-Tutorial-Book]：本教程旨在一步一步展示如何从零开始用Rust语言写一个基于RISC-V架构的类Unix内核。</li>
<li><a href="https://inst.eecs.berkeley.edu/~cs61c/sp22/">CS 61C</a>：UCB的计算机架构课程。对应中文字幕<a href="https://www.bilibili.com/video/BV1Lu411X7u7">视频</a></li>
<li><a href="http://csapp.cs.cmu.edu/3e/labs.html">CSAPP</a>：CMU的CSAPP课程lab。</li>
<li><a href="https://nju-projectn.github.io/ics-pa-gitbook/ics2022/">Introduction · GitBook</a>：南京大学计算机系统基础2022，相关感悟见 <a href="https://note.tonycrane.cc/cs/system/pa/">ICS PA 实验纪实 - 鹤翔万里的笔记本</a></li>
</ol>
<h3 id="软件工程"><a class="markdownIt-Anchor" href="#软件工程"></a> 软件工程</h3>
<ol>
<li><a href="http://ddia.vonng.com/#/">设计数据密集型应用</a>：神书DDIA的中文版</li>
<li><a href="http://web.mit.edu/6.031/www/sp21/">6.031: Software Construction</a>：MIT的软件构造课程，看起来很棒。</li>
<li><a href="http://www.saasbook.info/courses">MOOC - Engineering Software as a Service: An Agile Approach Using Cloud Computing</a>：UCB的软件工程课程。</li>
<li><a href="https://patterns.eecs.berkeley.edu/?page_id=98">Our Pattern Language | Our Pattern Language</a>：UCB整理的各个方向的模式文章（包括Structural Patterns/Computational Patterns/Algorithm strategy Patterns/Implementation Strategy Patterns/Parallel execution Patterns），值得细看，体会各个方向的patterns，提高抽象能力 。</li>
</ol>
<h3 id="深度学习和机器学习"><a class="markdownIt-Anchor" href="#深度学习和机器学习"></a> 深度学习和机器学习</h3>
<ol>
<li><a href="https://dlsyscourse.org/">Deep Learning Systems</a>：CMU深度学习课程，涉及算法和实现。</li>
<li><a href="https://github.com/labmlai/annotated_deep_learning_paper_implementations">GitHub - labmlai/annotated_deep_learning_paper_implementations</a>：常见模型架构的代码及其注释。</li>
<li><a href="https://karpathy.ai/zero-to-hero.html">Neural Networks: Zero To Hero</a>：教你从头构建网络的系列视频</li>
<li><a href="https://microsoft.github.io/ai-edu/">AI-EDU</a>：微软社区开源的AI-EDU学习资源</li>
</ol>
<h3 id="概率图模型"><a class="markdownIt-Anchor" href="#概率图模型"></a> 概率图模型</h3>
<ol>
<li><a href="https://www.coursera.org/learn/probabilistic-graphical-models">Probabilistic Graphical Models 1: Representation | Coursera</a>：斯坦福概率图模型课程</li>
</ol>
<h3 id="程序语言理论"><a class="markdownIt-Anchor" href="#程序语言理论"></a> 程序语言理论</h3>
<ol>
<li><a href="https://bobzhang.github.io/courses/">程序语言理论与实现</a>：Rescript语言创建者张宏波推出的程序语言理论课程，注重于实践，使用Rescript教学。</li>
<li><a href="https://cgi.luddy.indiana.edu/~c311/doku.php?id=home">C311/B521/A596 Programming Languages [Home]</a>：印第安纳大学Dan P.Friedman的程序语言课程</li>
<li><a href="https://www.cs.cmu.edu/~fp/courses.html">Frank Pfenning / Courses</a> 和 <a href="https://www.cs.cornell.edu/~kozen/#Courses">Dexter Kozen’s Home Page</a> 和 <a href="https://www.coursera.org/instructor/~873260">Dan Grossman, Instructor | Coursera</a><a href=""></a> (Programming Languages A/B/C)</li>
<li><a href="https://cs.brown.edu/courses/cs173/2012/OnLine/">Programming Languages: On-Line Offering</a></li>
<li><a href="https://github.com/bitemyapp/learnhaskell/blob/master/guide-zh_CN.md">learnhaskell/guide-zh</a>：学习Haskell的中文路线。</li>
<li><a href="https://www.seas.upenn.edu/~cis1940/spring13/lectures.html">CIS 194</a>：经典的Haskell课程</li>
<li><a href="http://www.cs.cornell.edu/courses/cs3110/2013fa/course_info.php">CS 3110 - Fall 2013 - Course Info</a>：经典的OCaml课程</li>
<li><a href="https://sites.google.com/cs.washington.edu/cse341winter2022/lecture">CSE 341 Winter 2022 - Lecture</a>：Programming Languages A/B/C的新版</li>
<li><a href="https://groups.seas.harvard.edu/courses/cs152/2015sp/schedule.html">CS152 - Harvard University - Lectures</a>：哈佛大学Programming Languages课程</li>
<li><a href="https://inst.eecs.berkeley.edu/~cs164/fa22/">CS 164, Fall 2022</a>：UC Berkeley的 Programming Languages and Compilers课程。<a href="https://inst.eecs.berkeley.edu/~cs164/fa04/">CS164 (Fall 2004)</a> 版本。</li>
</ol>
<h3 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h3>
<ol>
<li><a href="https://cstack.github.io/db_tutorial/">How Does a Database Work? | Let’s Build a Simple Database</a></li>
<li><a href="http://www.redbook.io/">Readings in Database Systems, 5th Edition</a>：数据库方向的论文集</li>
</ol>
<h3 id="服务器开发"><a class="markdownIt-Anchor" href="#服务器开发"></a> 服务器开发</h3>
<ol>
<li><a href="https://github.com/yuesong-feng/30dayMakeCppServer">30dayMakeCppServer</a>：30天自制服务器（C++）</li>
</ol>
<h3 id="计算机网络"><a class="markdownIt-Anchor" href="#计算机网络"></a> 计算机网络</h3>
<p>计算机网络：</p>
<ol>
<li><a href="https://gaia.cs.umass.edu/kurose_ross/wireshark.php">Jim Kurose Homepage</a>：《计算机网络自顶向下方法》第八版官网</li>
</ol>
<h3 id="函数式编程"><a class="markdownIt-Anchor" href="#函数式编程"></a> 函数式编程</h3>
<ol>
<li><a href="https://a-little-java-a-few-patterns.readthedocs.io/zh_CN/latest/index.html">Welcome to 《A Little Java, A Few Patterns》笔记 — 《A Little Java, A Few Patterns》笔记 1.0 文档</a></li>
<li><a href="https://the-little-schemer.readthedocs.io/zh_CN/latest/index.html">Welcome to 《The Little Schemer》笔记 — 《The Little Schemer》笔记 1.0 文档</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/37056659">DrRacket 的安装与 SICP 的配置 - 知乎</a></li>
<li><a href="https://uternet.gitbooks.io/tspl-v4-cn/content/">Introduction · Scheme编程语言（第四版）</a></li>
<li><a href="https://tyrchen.github.io/racket-book/begin.html">Racket语言入门</a></li>
<li><a href="http://xbluer.github.io/note/2013/12/04/drracket_include_module/">DrRacket 载入模块</a></li>
</ol>
<h3 id="网络编程"><a class="markdownIt-Anchor" href="#网络编程"></a> 网络编程</h3>
<ol>
<li><a href="https://weblab.mit.edu/schedule/">schedule | web.lab</a>：MIT的网站开发课程</li>
<li><a href="https://web.stanford.edu/class/cs142/lectures.html">CS142 Lectures</a>：斯坦福大学的网络编程课程</li>
</ol>
<h3 id="并行"><a class="markdownIt-Anchor" href="#并行"></a> 并行</h3>
<ol>
<li><a href="https://github.com/parallel101/course">GitHub - parallel101/course: 高性能并行编程与优化 - 课件</a>：</li>
</ol>
<h3 id="全栈开发"><a class="markdownIt-Anchor" href="#全栈开发"></a> 全栈开发</h3>
<ol>
<li><a href="https://fullstackopen.com/zh/about">关于本课程 | 全栈公开课2022</a>：本课程是介绍如何使用JavaScript开发现代Web应用程序。 课程的重点是使用ReactJS构建单页面应用程序（SPA），并使用由Node.js构建REST API。 该课程还包含介绍GraphQL的部分，这是REST API的现代替代方案。课程还包括测试、配置和环境管理，以及使用 MongoDB 来存储应用的数据</li>
</ol>
<h3 id="技术文章"><a class="markdownIt-Anchor" href="#技术文章"></a> 技术文章</h3>
<ol>
<li><a href="http://learn.lianglianglee.com/">技术文章摘抄</a></li>
<li><a href="https://tls13.xargs.org/">The Illustrated TLS 1.3 Connection: Every Byte Explained</a></li>
</ol>
<h3 id="软件组织"><a class="markdownIt-Anchor" href="#软件组织"></a> 软件组织</h3>
<ol>
<li><a href="https://www.figma.com/best-practices/team-file-organization/">Team, Project, and file organization</a></li>
</ol>
<h3 id="programming-idioms"><a class="markdownIt-Anchor" href="#programming-idioms"></a> Programming Idioms</h3>
<ol>
<li><a href="https://programming-idioms.org/all-idioms">https://programming-idioms.org/all-idioms</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>指南</tag>
        <tag>课程</tag>
      </tags>
  </entry>
  <entry>
    <title>通过python脚本实现向kindle邮箱发送书籍</title>
    <url>/2022/05/15/%E9%80%9A%E8%BF%87python%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E5%90%91kindle%E9%82%AE%E7%AE%B1%E5%8F%91%E9%80%81%E4%B9%A6%E7%B1%8D/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>阅读别人的经历和人生</title>
    <url>/2022/11/18/%E9%98%85%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E7%BB%8F%E5%8E%86%E5%92%8C%E4%BA%BA%E7%94%9F/</url>
    <content><![CDATA[<p>本文记录一下别人对自己过去经历的总结和感悟的博客文章：</p>
<span id="more"></span>
<ol>
<li><a href="https://book.douban.com/subject/4006425/discussion/22802960/">徐宥：掉进读书的兔子洞</a></li>
<li><a href="http://mindhacks.cn/2009/05/17/seven-years-in-nju/">我在南大的七年 – 刘未鹏 | Mind Hacks</a></li>
<li>陈天奇：<a href="https://zhuanlan.zhihu.com/p/74249758">机器学习科研的十年 - 知乎</a></li>
<li>李沐：<a href="https://zhuanlan.zhihu.com/p/25099638">博士这五年 - 知乎</a></li>
<li>蒋陈凡夫：<a href="https://zhuanlan.zhihu.com/p/560415998">从转系生到终身教授：十二年图形学物理模拟的自我回顾 - 知乎</a></li>
<li><a href="https://tw93.fun/2023-07-20/great.html">译·如何做出伟大的工作 - Tw93</a>：《黑客与画家》作者Paul Graham的思考</li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>自传</tag>
      </tags>
  </entry>
  <entry>
    <title>AutoHotkey使用指南</title>
    <url>/2023/05/31/AutoHotkey%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下所使用的AutoHotkey脚本：</p>
<span id="more"></span>
<h3 id="快捷键ctrlshiftg使用google搜索剪贴板-clipboard-的内容"><a class="markdownIt-Anchor" href="#快捷键ctrlshiftg使用google搜索剪贴板-clipboard-的内容"></a> 快捷键<code>Ctrl+shift+g</code>使用google搜索剪贴板 (clipboard) 的内容</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">^+g::
    <span class="token punctuation">&#123;</span>
        Send, ^c
        Sleep <span class="token number">50</span>
        Run, https://www.google.com/search?q<span class="token operator">=</span>%clipboard%
        Return
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.makeuseof.com/tag/10-cool-autohotkey-scripts-make/">10 Cool AutoHotkey Scripts (And How to Make Your Own!)</a></li>
</ol>
</blockquote>
<h3 id="双击选中单词并将其复制到剪贴板-clipboard使用golden-dict搜索"><a class="markdownIt-Anchor" href="#双击选中单词并将其复制到剪贴板-clipboard使用golden-dict搜索"></a> 双击选中单词并将其复制到剪贴板 (clipboard)，使用golden dict搜索</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~LButton::

  Loop <span class="token punctuation">&#123;</span>
    LButtonDown :<span class="token operator">=</span> GetKeyState<span class="token punctuation">(</span><span class="token string">"LButton"</span>,<span class="token string">"P"</span><span class="token punctuation">)</span> 
    If <span class="token punctuation">(</span><span class="token operator">!</span>LButtonDown<span class="token punctuation">)</span>
      Break
  <span class="token punctuation">&#125;</span>

WaitTime:<span class="token operator">=</span>DllCall<span class="token punctuation">(</span><span class="token string">"GetDoubleClickTime"</span><span class="token punctuation">)</span>/4000
KeyWait, LButton, D T%WaitTime%
If <span class="token assign-left variable">errorlevel</span><span class="token operator">=</span><span class="token number">0</span>
   GoSub, Routine
Return



Routine:
<span class="token punctuation">&#123;</span>

  ifwinactive ahk_class CabinetWClass
  <span class="token punctuation">&#123;</span>
    <span class="token builtin class-name">return</span>
  <span class="token punctuation">&#125;</span>

  clipboard <span class="token operator">=</span> 
  send ,^c
  ClipWait,1

  StringLen, cliplen, clipboard
  <span class="token keyword">if</span> cliplen <span class="token operator">></span> <span class="token number">20</span>
  <span class="token punctuation">&#123;</span> 
    <span class="token punctuation">;</span>避免不是英文單字的東西送到GoldenDict去翻譯。
    <span class="token builtin class-name">return</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">if</span> cliplen <span class="token operator">&lt;</span> <span class="token number">2</span>
  <span class="token punctuation">&#123;</span>   
    <span class="token punctuation">;</span>避免不是英文單字的東西送到GoldenDict去翻譯。
    <span class="token builtin class-name">return</span>
  <span class="token punctuation">&#125;</span>


<span class="token punctuation">;</span> send,<span class="token punctuation">&#123;</span>Ctrl down<span class="token punctuation">&#125;</span>cc<span class="token punctuation">&#123;</span>Ctrl up<span class="token punctuation">&#125;</span> 可用這行，也可用下行

run D:<span class="token punctuation">\</span>Tools<span class="token punctuation">\</span>GoldenDict<span class="token punctuation">\</span>GoldenDict.exe  %clipboard%

<span class="token punctuation">&#125;</span>

<span class="token builtin class-name">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.zhihu.com/question/291320101">goldendict词典如何实现高亮取词（双击取词）？ - 知乎</a></li>
</ol>
</blockquote>
<h3 id="在当前目录使用ctrlshiftt新建text文件"><a class="markdownIt-Anchor" href="#在当前目录使用ctrlshiftt新建text文件"></a> 在当前目录使用<code>Ctrl+shift+t</code>新建text文件</h3>
<p>主要参考资料3</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_44119557/article/details/123284048">Windows新建文件快捷键使用AutoHotKey脚本_✿三日月的博客-CSDN博客</a></li>
<li><a href="https://www.autohotkey.com/boards/viewtopic.php?t=64289">Script to create and open a new text file? - AutoHotkey Community</a>：打开nodepad</li>
<li><a href="https://gist.github.com/aborruso/8867d871bbb421495476b22f040f0ee2">AutoHotKey: Create a new file with Alt+N keyboard shortcut in Windows Explorer · GitHub</a>：完美满足A</li>
</ol>
</blockquote>
<h3 id="将多个ahk文件组合为一个脚本-script"><a class="markdownIt-Anchor" href="#将多个ahk文件组合为一个脚本-script"></a> 将多个<code>.ahk</code>文件组合为一个脚本 (script)</h3>
<p>并无必要，运行多个脚本可以选择性终止脚本</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.autohotkey.com/boards/viewtopic.php?f=6&amp;t=788&amp;p=5942#p5942">AHK Startup (Consolidate AHK Scripts’ Tray Icons) - AutoHotkey Community</a></li>
</ol>
</blockquote>
<h3 id="设置脚本开机自启动"><a class="markdownIt-Anchor" href="#设置脚本开机自启动"></a> 设置脚本开机自启动</h3>
<ul>
<li>对脚本创建快捷方式<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230608221430.png" alt="" /></li>
<li><code>Win+r -&gt; shell:startup</code>：打开开机启动项的放置位置，在<code>C:\Users\A\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>目录。</li>
<li>将创建的快捷方式放置在上述目录。</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.autohotkey.com/docs/v1/FAQ.htm">Frequently Asked Questions (FAQ) | AutoHotkey</a></li>
<li><a href="https://www.youtube.com/watch?v=qo3XIAbHbCo&amp;t=14s&amp;ab_channel=CarsonClark">How to Launch AutoHotkey Scripts At Startup (4k) - YouTube</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>AutoHotkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker学习指南</title>
    <url>/2023/06/13/Docker%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下Docker的学习指南：</p>
<span id="more"></span>
<h3 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h3>
<ul>
<li>[x] <a href="https://www.youtube.com/watch?v=31ieHmcTUOk&amp;list=PL4cUxeGkcC9hxjeEtdHFNYMtCpjNBm3h7&amp;index=2&amp;ab_channel=TheNetNinja">Docker Crash Course #1 - What is Docker? - YouTube</a>：The Net Ninja油管博主的入门教程，有配套的git repo。已看完，CoursesNotes中的MIT-weblab中有对应笔记</li>
</ul>
<h3 id="进阶"><a class="markdownIt-Anchor" href="#进阶"></a> 进阶</h3>
<ul>
<li>[ ] <a href="https://www.bilibili.com/read/cv21266100">Docker&amp;Kubernetes小记 - 哔哩哔哩</a>：Udemy上的付费教程，b站上有中英文字幕</li>
</ul>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA使用指南</title>
    <url>/2023/08/18/IDEA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下IDEA的一些好用的特性：</p>
<span id="more"></span>
<h3 id="idea显示git-commits"><a class="markdownIt-Anchor" href="#idea显示git-commits"></a> IDEA显示git commits</h3>
<p>使用快捷键<code>Ctrl + Shift + g</code> 即可显示git commits tree：<br />
<img src="" alt="Uploading file...rvl83" /></p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker常见bug</title>
    <url>/2023/08/09/Docker%E5%B8%B8%E8%A7%81bug/</url>
    <content><![CDATA[<p>本文记录一下Docker的常见bug：</p>
<span id="more"></span>
<h3 id="报错-builder-lifecycle-creator-failed-with-status-code-51"><a class="markdownIt-Anchor" href="#报错-builder-lifecycle-creator-failed-with-status-code-51"></a> 报错 <code>Builder lifecycle 'creator' failed with status code 51</code></h3>
<p>原因：在构建image的过程中，使用代理下载github上的依赖项。这可能导致错误。详见资料5<br />
解决方案：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/65212231/cloud-native-buildpacks-paketo-with-java-spring-boot-how-to-configure-different">Cloud Native Buildpacks/Paketo with Java/Spring Boot: How to configure different JDK download uri (e.g. no access to github.com) - Stack Overflow</a></li>
<li><a href="https://www.lmm.show/24/">落叶飘</a>：有对应gitee仓库</li>
<li><a href="https://raw.githubusercontent.com/paketo-buildpacks/bellsoft-liberica/main/buildpack.toml">https://raw.githubusercontent.com/paketo-buildpacks/bellsoft-liberica/main/buildpack.toml</a></li>
<li><a href="https://paketo.io/docs/howto/configuration/">How To Configure Paketo Buildpacks - Paketo Buildpacks</a></li>
<li><a href="https://github.com/paketo-buildpacks/bellsoft-liberica/issues/353">github bellsoft-jre17.0.5+8-linux-amd64.tar.gz x509: certificate signed by unknown authority · Issue #353 · paketo-buildpacks/bellsoft-liberica · GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/74399883/how-to-set-dependency-mapping-binding-in-gradle-bootbuildimage-spring-boot-2-7">docker - How to set dependency-mapping binding in gradle bootBuildImage (Spring-boot 2.7.1, native) - Stack Overflow</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/issues/23009">Image building with newer Paketo base-platform-api-0.3 fails · Issue #23009 · spring-projects/spring-boot · GitHub</a></li>
</ol>
</blockquote>
<h3 id="docker一直处于docker-is-staring界面"><a class="markdownIt-Anchor" href="#docker一直处于docker-is-staring界面"></a> Docker一直处于&quot;Docker is staring…&quot;界面</h3>
<p>以管理员身份打开powershell，运行：</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Enable-WindowsOptionalFeature</span> <span class="token operator">-</span>Online <span class="token operator">-</span>FeatureName $<span class="token punctuation">(</span><span class="token string">"Microsoft-Hyper-V"</span><span class="token punctuation">,</span> <span class="token string">"Containers"</span><span class="token punctuation">)</span> <span class="token operator">-</span>All<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>重启电脑。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/43041331/docker-forever-in-docker-is-starting-at-windows-task">Docker forever in “Docker is starting…” at Windows task - Stack Overflow</a></li>
<li><a href="https://www.youtube.com/watch?v=JRluDLoiHXM&amp;t=5s">Solve Problem Docker stucks and still in starting mode - YouTube</a></li>
<li><a href="https://stackoverflow.com/questions/36590514/how-to-enable-the-windows-10-containers-feature">c# - How to enable the Windows 10 “Containers” feature? - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="运行docker-build后出现no-matching-manifest-for-windowsamd64-in-the-manifest-list-entries"><a class="markdownIt-Anchor" href="#运行docker-build后出现no-matching-manifest-for-windowsamd64-in-the-manifest-list-entries"></a> 运行<code>docker build</code>后出现no matching manifest for windows/amd64 in the manifest list entries</h3>
<p>解决方案：右键docker图标Switching to Linux containers</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/48066994/docker-no-matching-manifest-for-windows-amd64-in-the-manifest-list-entries">Docker: “no matching manifest for windows/amd64 in the manifest list entries” - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA常见bug</title>
    <url>/2023/08/13/IDEA%E5%B8%B8%E8%A7%81bug/</url>
    <content><![CDATA[<p>本文记录一下在IDEA中一些常见的bug：</p>
<span id="more"></span>
<h3 id="intellij-errorjava-error-release-version-5-not-supported"><a class="markdownIt-Anchor" href="#intellij-errorjava-error-release-version-5-not-supported"></a> <a href="https://stackoverflow.com/questions/59601077/intellij-errorjava-error-release-version-5-not-supported">IntelliJ: Error:java: error: release version 5 not supported</a></h3>
<p>解决方案：<br />
重新选择jdk版本或maven</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/59601077/intellij-errorjava-error-release-version-5-not-supported">IntelliJ: Error:java: error: release version 5 not supported - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="error-could-not-find-or-load-main-class-in-intellij-ide"><a class="markdownIt-Anchor" href="#error-could-not-find-or-load-main-class-in-intellij-ide"></a> <a href="https://stackoverflow.com/questions/10654120/error-could-not-find-or-load-main-class-in-intellij-ide">Error: Could not find or load main class in intelliJ IDE</a></h3>
<p>原因：在更改项目后，IDEA build应用时未覆盖同名文件，导致更改未生效<br />
解决方案：见参考资料</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/10654120/error-could-not-find-or-load-main-class-in-intellij-ide">java - Error: Could not find or load main class in intelliJ IDE - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="plugin-orgspringframeworkbootspring-boot-maven-plugin-not-found"><a class="markdownIt-Anchor" href="#plugin-orgspringframeworkbootspring-boot-maven-plugin-not-found"></a> <a href="https://stackoverflow.com/questions/64639836/plugin-org-springframework-bootspring-boot-maven-plugin-not-found">Plugin ‘org.springframework.boot:spring-boot-maven-plugin:’ not found</a></h3>
<p>在<code>pom.xml</code>中添加：</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;project.parent.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/64639836/plugin-org-springframework-bootspring-boot-maven-plugin-not-found">java - Plugin ‘org.springframework.boot:spring-boot-maven-plugin:’ not found - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="could-not-autowire-no-beans-of-bookrepository-type-found"><a class="markdownIt-Anchor" href="#could-not-autowire-no-beans-of-bookrepository-type-found"></a> Could not autowire. No beans of ‘BookRepository’ type found</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/26889970/intellij-incorrectly-saying-no-beans-of-type-found-for-autowired-repository">java - intellij incorrectly saying no beans of type found for autowired repository - Stack Overflow</a></li>
<li><a href="https://youtrack.jetbrains.com/issue/IDEA-281454/Could-not-autowire.-No-beans-of-XXX-type-found-IntelliJ-2021.2.3-Spring-2.5.6">https://youtrack.jetbrains.com/issue/IDEA-281454/Could-not-autowire.-No-beans-of-XXX-type-found-IntelliJ-2021.2.3-Spring-2.5.6</a></li>
</ol>
</blockquote>
<h3 id="bad-sql-grammar-insert-into-order-book_isbn-quantity-status-created_date-last_modified_date-version"><a class="markdownIt-Anchor" href="#bad-sql-grammar-insert-into-order-book_isbn-quantity-status-created_date-last_modified_date-version"></a> bad SQL grammar [INSERT INTO order (book_isbn, quantity, status, created_date, last_modified_date, version)</h3>
<p>GitHub Copilot: 这个错误可能是因为 <code>order</code> 是 SQL 中的保留关键字，不能用作表名。您可以尝试将表名改为其他名称，例如 <code>orders</code>，并更新相应的 SQL 语句。<br />
如果您使用的是 Spring Data JPA，可以在实体类上使用 <code>@Table</code> 注解来指定表名，例如：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"orders"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果您使用的是 Spring Data R2DBC，可以在 <code>application.properties</code> 文件中配置表名，例如：</p>
<pre class="line-numbers language-none"><code class="language-none">spring.r2dbc.url&#x3D;r2dbc:postgresql:&#x2F;&#x2F;localhost:5432&#x2F;mydatabase
spring.r2dbc.username&#x3D;myusername
spring.r2dbc.password&#x3D;mypassword
spring.r2dbc.initialization-mode&#x3D;always
spring.r2dbc.sql-client.init-location&#x3D;classpath:&#x2F;schema.sql
spring.r2dbc.sql-client.init-mode&#x3D;embedded
spring.r2dbc.sql-client.name&#x3D;orders<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在上面的配置中，<code>spring.r2dbc.sql-client.name</code> 属性指定了表名为 <code>orders</code>。您需要将其替换为您实际使用的表名。</p>
<h3 id="bad-sql-grammar-insert-into-orders-book_isbn-quantity-status-created_date-last_modified_date-version"><a class="markdownIt-Anchor" href="#bad-sql-grammar-insert-into-orders-book_isbn-quantity-status-created_date-last_modified_date-version"></a> bad SQL grammar [INSERT INTO orders (book_isbn, quantity, status, created_date, last_modified_date, version)</h3>
<p>[42P01] relation “orders” does not exist<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230825155514.png" alt="" /></p>
<h3 id="报错cannot-resolve-symbol-streambridge"><a class="markdownIt-Anchor" href="#报错cannot-resolve-symbol-streambridge"></a> 报错Cannot resolve symbol “‘StreamBridge’”</h3>
<p>原因：Spring Cloud和Spring boot版本不匹配<br />
解决方案：更改build.gradle使得二者版本匹配</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/75367370/streambridge-bean-not-found-in-spring-context">StreamBridge bean not found in Spring context - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="could-not-autowire-no-beans-of-reactiveclientregistrationrepository-type-found"><a class="markdownIt-Anchor" href="#could-not-autowire-no-beans-of-reactiveclientregistrationrepository-type-found"></a> Could not autowire. No beans of ‘ReactiveClientRegistrationRepository’ type found.</h3>
<p>可能是IDEA无法正确解析依赖。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/26889970/intellij-incorrectly-saying-no-beans-of-type-found-for-autowired-repository">java - intellij incorrectly saying no beans of type found for autowired repository - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="range-for-response-status-value-403-forbidden-expected-successful-but-wasclient_error"><a class="markdownIt-Anchor" href="#range-for-response-status-value-403-forbidden-expected-successful-but-wasclient_error"></a> Range for response status value 403 FORBIDDEN expected: &lt; SUCCESSFUL&gt; but was:&lt;CLIENT_ERROR&gt;</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.baeldung.com/java-spring-fix-403-error">How to Solve 403 Error in Spring Boot POST Request | Baeldung</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes使用指南</title>
    <url>/2023/08/15/Kubernetes%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下Kubernetes的使用指南：</p>
<span id="more"></span>
<h3 id="报错-unable-to-resolve-the-current-docker-cli-context-default"><a class="markdownIt-Anchor" href="#报错-unable-to-resolve-the-current-docker-cli-context-default"></a> 报错 Unable to resolve the current Docker CLI context “default”</h3>
<p>根据参考资料2运行<code>docker context use default</code>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/docker/for-mac/issues/3790">All docker cli commands fail: “unable to resolve docker endpoint” · Issue #3790 · docker/for-mac · GitHub</a></li>
<li><a href="https://github.com/kubernetes/minikube/issues/16788">Minikube v1.30.1 unable to resolve current docker CLI context after upgrade on Ubuntu 22.04 LTS · Issue #16788 · kubernetes/minikube · GitHub</a></li>
</ol>
</blockquote>
<h3 id="启用ingress-addons插件时报错-exiting-due-to-mk_enable-run-callbacks-running-callbacks"><a class="markdownIt-Anchor" href="#启用ingress-addons插件时报错-exiting-due-to-mk_enable-run-callbacks-running-callbacks"></a> 启用Ingress addons插件时报错 Exiting due to MK_ENABLE: run callbacks: running callbacks</h3>
<pre class="line-numbers language-minikube" data-language="minikube"><code class="language-minikube">minikube delete --all
choco install minikube &#x2F;&#x2F;更新minikube
minikube start --cpus 2 --memory 4g --driver docker --profile polar
minikube addons enable ingress --profile polar
kubectl get all -n ingress-nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/67194692/problem-with-minikube-and-nginx-ingress-when-reinstalled-minikube">kubernetes - Problem with minikube and nginx ingress when reinstalled minikube - Stack Overflow</a></li>
<li><a href="https://minikube.sigs.k8s.io/docs/start/">minikube start | minikube</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux进阶指南</title>
    <url>/2023/07/29/Linux%E8%BF%9B%E9%98%B6%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下Linux的一些进阶使用方式，跟踪效率更高的Linux系统使用方式。</p>
<span id="more"></span>
<h3 id="linux新的发行版本"><a class="markdownIt-Anchor" href="#linux新的发行版本"></a> Linux新的发行版本</h3>
<ol>
<li><a href="https://borretti.me/article/nixos-for-the-impatient">NixOS for the Impatient</a>：NixOS 是一个 Linux 发行版，它有一个系统配置文件，记录所安装的软件。只要有这个文件，就能还原出一模一样的系统。</li>
</ol>
<h3 id="保持linux服务器安全"><a class="markdownIt-Anchor" href="#保持linux服务器安全"></a> 保持Linux服务器安全</h3>
<ol>
<li><a href="https://github.com/imthenachoman/How-To-Secure-A-Linux-Server">GitHub - imthenachoman/How-To-Secure-A-Linux-Server: An evolving how-to guide for securing a Linux server.</a></li>
</ol>
<h3 id="linux现代化教程"><a class="markdownIt-Anchor" href="#linux现代化教程"></a> Linux现代化教程</h3>
<ol>
<li><a href="https://dunwu.github.io/linux-tutorial/">LINUX-TUTORIAL</a></li>
</ol>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsidian使用技巧</title>
    <url>/2023/06/02/Obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>本文记录一下Obsidian的使用技巧：</p>
<span id="more"></span>
<h3 id="obsidian在新标签页打开文件"><a class="markdownIt-Anchor" href="#obsidian在新标签页打开文件"></a> Obsidian在新标签页打开文件</h3>
<p><code>Ctrl + click</code>。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text使用指南</title>
    <url>/2023/08/28/Sublime-Text%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下在 Sublime Text编辑器中一些常用的配置方法。</p>
<span id="more"></span>
<h3 id="sublime-text中ctrlshiftp不起作用"><a class="markdownIt-Anchor" href="#sublime-text中ctrlshiftp不起作用"></a> Sublime Text中Ctrl+Shift+P不起作用</h3>
<p>解决方案：安装Visual Studio，使用其spyxx.exe工具。顺利找出PicGo占据了<code>Ctrl+Shift+P</code>快捷键。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/46330939/command-palette-shortcut-not-working-in-sublime-text3">editor - Command Palette shortcut not working in Sublime Text3 - Stack Overflow</a></li>
<li><a href="https://github.com/microsoft/vscode/issues/152448">Ctrl Shift P not working to show command pallete · Issue #152448 · microsoft/vscode · GitHub</a></li>
<li><a href="https://superuser.com/questions/999106/find-out-what-program-is-using-a-hotkey">windows - Find out what program is using a hotkey - Super User</a></li>
<li><a href="https://stackoverflow.com/questions/829007/find-out-what-process-registered-a-global-hotkey-windows-api/43645062#43645062">delphi - Find out what process registered a global hotkey? (Windows API) - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/43360339/how-do-i-get-spy-with-visual-studio-2017">How do I get Spy++ with Visual Studio 2017? - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text配置</title>
    <url>/2023/08/28/Sublime-Text%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下在 Sublime Text编辑器中一些常用的配置方法。</p>
<span id="more"></span>
<h3 id="打开vim编辑模式"><a class="markdownIt-Anchor" href="#打开vim编辑模式"></a> 打开Vim编辑模式</h3>
<ol>
<li>选择<code>Preferences-&gt;Settings</code>菜单</li>
<li>编辑右侧settings文件中的<code>ignored_packages</code>配置，即添加</li>
</ol>
 <pre class="line-numbers language-none"><code class="language-none">ignored_packages&quot; : []<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="3">
<li>默认模式为插入模式，可以添加以下配置进行修改：</li>
</ol>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"vintage_start_in_command_mode"</span><span class="token operator">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.sublimetext.com/docs/vintage.html">Vintage Mode</a></li>
<li><a href="https://wenbinfei.github.io/sublime-vim/">Sublime text is your vim editor – Wenbin Fei</a></li>
</ol>
</blockquote>
<h3 id="自动保存"><a class="markdownIt-Anchor" href="#自动保存"></a> 自动保存</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://salitha94.blogspot.com/2017/11/how-to-enable-autosave-feature-in-sublime-text.html">How to enable Autosave feature in Sublime Text editor</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu环境配置</title>
    <url>/2023/06/09/Ubuntu%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文记录一下Ubuntu系统的环境配置：</p>
<span id="more"></span>
<h3 id="tldr"><a class="markdownIt-Anchor" href="#tldr"></a> tldr</h3>
<p>以简洁的方式说明各个常用命令如<code>tar</code>的用法。<br />
安装：</p>
<ul>
<li><code>npm install -g tldr</code>：node.js中安装</li>
<li><code>pip3 install tldr</code>：linux中安装<br />
使用：</li>
<li><code>tldr git</code>：即可查看git的用法，第一次使用时需要建立索引</li>
<li>给git bash配置颜色。参考资料2/3/4。</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.oh-my-zsh<span class="token punctuation">\</span>custom<span class="token punctuation">\</span>plugins<span class="token punctuation">\</span>tldr<span class="token punctuation">\</span>_tldr D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>tldr-node-client<span class="token punctuation">\</span>bin<span class="token punctuation">\</span>completion<span class="token punctuation">\</span>zsh<span class="token punctuation">\</span>_tldr
mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.tldrrc D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.tldrrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>PS：根据参考资料2和3，在gitbash中<code>tldr</code>的输出没有颜色，此时可以在<code>.zshrc</code>中添加<code>export FORCE_COLOR=2</code>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/tldr-pages/tldr">GitHub - tldr-pages/tldr: 📚 Collaborative cheatsheets for console commands</a></li>
<li><a href="https://github.com/tldr-pages/tldr/issues/1262">How to get colors? · Issue #1262 · tldr-pages/tldr · GitHub</a></li>
<li><a href="https://github.com/tldr-pages/tldr-node-client/issues/276">tldr doesnt pick color config from .tldrrc file · Issue #276 · tldr-pages/tldr-node-client · GitHub</a></li>
<li><a href="https://github.com/tldr-pages/tldr-node-client">GitHub - tldr-pages/tldr-node-client: Node.js command-line client for tldr pages</a></li>
</ol>
</blockquote>
<h3 id="tree"><a class="markdownIt-Anchor" href="#tree"></a> tree</h3>
<p>在不使用sudo的情况下安装tree命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/deb
<span class="token builtin class-name">cd</span> ~/deb
<span class="token function">apt</span> download tree
dpkg-deb -xv ./*deb ./
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/home/FT/deb/usr/bin:<span class="token environment constant">$PATH</span>"</span> <span class="token comment"># 加入路径</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tree -I <span class="token string">'*png|*pyc|*.jpg'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://askubuntu.com/questions/1322467/how-to-install-tree-on-ubuntu-without-sudo-right">apt - How to install tree on Ubuntu without sudo right? - Ask Ubuntu</a></li>
<li><a href="https://unix.stackexchange.com/questions/47805/how-do-we-specify-multiple-ignore-patterns-for-tree-command">How do we specify multiple ignore patterns for <code>tree</code> command? - Unix &amp; Linux Stack Exchange</a></li>
</ol>
</blockquote>
<h3 id="trash-cli"><a class="markdownIt-Anchor" href="#trash-cli"></a> trash-cli</h3>
<p>使用<code>trash</code>替代<code>rm</code>，更加安全，类似回收站</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://pypi.org/project/trash-cli/">trash-cli · PyPI</a></li>
</ol>
</blockquote>
<h3 id="bat"><a class="markdownIt-Anchor" href="#bat"></a> bat</h3>
<p>和cat功能类似，具有语法高亮</p>
<ul>
<li><code>sudo apt install bat</code>：在Ubuntu上安装</li>
<li><code>choco install bat</code>：在windows10上安装</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/sharkdp/bat/#installation">GitHub - sharkdp/bat: A cat(1) clone with wings.</a></li>
</ol>
</blockquote>
<h3 id="ripgrep"><a class="markdownIt-Anchor" href="#ripgrep"></a> ripgrep</h3>
<p>使用regex模式递归地在当前目录下搜索的工具。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/BurntSushi/ripgrep#installation">GitHub - BurntSushi/ripgrep: ripgrep recursively searches directories for a regex pattern while respecting your gitignore</a></li>
</ol>
</blockquote>
<h3 id="综合类"><a class="markdownIt-Anchor" href="#综合类"></a> 综合类</h3>
<ol>
<li><a href="https://jvns.ca/blog/2023/08/08/what-helps-people-get-comfortable-on-the-command-line-/">What helps people get comfortable on the command line?</a>：推荐了很多使你习惯使用命令行的工具</li>
</ol>
<h3 id="从deb文件安装软件"><a class="markdownIt-Anchor" href="#从deb文件安装软件"></a> 从deb文件安装软件</h3>
<p>GitHub Copilot: 在Linux中，可以使用<code>dpkg</code>命令从<code>.deb</code>文件安装软件包。具体来说，可以按照以下步骤进行操作：</p>
<ol>
<li>下载<code>.deb</code>文件。可以从软件包的官方网站或其他可信来源下载<code>.deb</code>文件。（下载对应架构的版本，amd64/arm64）</li>
<li>打开终端，并使用<code>cd</code>命令进入<code>.deb</code>文件所在的目录。</li>
<li>使用<code>dpkg</code>命令安装软件包。例如，要安装名为<code>example.deb</code>的软件包，可以使用以下命令：<pre class="line-numbers language-none"><code class="language-none">sudo dpkg -i example.deb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
其中，<code>-i</code>选项表示安装软件包，<code>example.deb</code>为要安装的软件包文件名。需要使用<code>sudo</code>命令以管理员权限运行<code>dpkg</code>命令。</li>
<li>如果安装过程中出现依赖项错误，可以使用以下命令来修复依赖项：<pre class="line-numbers language-none"><code class="language-none">sudo apt-get install -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
该命令会自动安装缺失的依赖项，并尝试修复其他依赖项错误。</li>
<li>安装完成后，可以使用<code>dpkg</code>命令来查询已安装的软件包。例如，要查询名为<code>example</code>的软件包是否已安装，可以使用以下命令：<pre class="line-numbers language-none"><code class="language-none">dpkg -s example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
如果软件包已安装，该命令会显示软件包的详细信息，包括版本号、安装时间等。<br />
需要注意的是，使用<code>dpkg</code>命令安装软件包时，可能会出现依赖项错误或其他问题。如果无法解决问题，可以尝试使用其他软件包管理工具，例如<code>apt</code>或<code>yum</code>，来安装软件包。<br />
总之，要在Linux中从<code>.deb</code>文件安装软件包，可以使用<code>dpkg</code>命令，并使用<code>sudo</code>命令以管理员权限运行该命令。如果出现依赖项错误，可以使用<code>apt-get</code>命令来修复依赖项。</li>
</ol>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Web开发常见问题解决方案</title>
    <url>/2023/06/06/Web%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>本文记录一下Web开发常见问题的解决方案：</p>
<span id="more"></span>
<h3 id="cross-origin-opener-policy"><a class="markdownIt-Anchor" href="#cross-origin-opener-policy"></a> Cross Origin Opener Policy</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy">Cross-Origin-Opener-Policy - HTTP | MDN</a></li>
<li><a href="https://medium.com/@dtkatz/3-ways-to-fix-the-cors-error-and-how-access-control-allow-origin-works-d97d55946d9">3 Ways to Fix the CORS Error — and How the Access-Control-Allow-Origin Header Works | by David Katz | Medium</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下neovim配置指南</title>
    <url>/2023/07/14/Windows%E4%B8%8Bneovim%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下在Windows中neovim的配置：</p>
<span id="more"></span>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/folke/tokyonight.nvim">GitHub - folke/tokyonight.nvim: 🏙 A clean, dark Neovim theme written in Lua, with support for lsp, treesitter and lots of plugins. Includes additional themes for Kitty, Alacritty, iTerm and Fish.</a></li>
<li><a href="https://vi.stackexchange.com/questions/16396/cannot-find-color-scheme-error-in-neovim">microsoft windows - Cannot find color scheme error in Neovim - Vi and Vim Stack Exchange</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Vim</tag>
        <tag>neovim</tag>
      </tags>
  </entry>
  <entry>
    <title>git使用指南01</title>
    <url>/2022/05/12/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%9701/</url>
    <content><![CDATA[<p>本文记录一下使用git时的常见操作。</p>
<span id="more"></span>
<p>1.<code>git remote -v</code>：查看当前项目远程地址。</p>
</br>
<p>2.<code>echo $PATH | tr &quot;:&quot; &quot;\n&quot;</code>：在<code>git bash</code>终端中分行展示环境变量。</p>
<blockquote>
<p>参考资料：<a href="https://stackoverflow.com/questions/33469374/how-to-split-the-contents-of-path-into-distinct-lines">How to split the contents of $PATH into distinct lines</a></p>
</blockquote>
</br>
<p>3.在未将修改的本地文件推送到远程仓库的状态下，通过 <code>git pull</code> 拉取远程仓库的内容时会出现<code>conflicts</code>，如下图所示：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220516212248506.png?token=AKWAGW4TWAIV3UZMNZVZDRLCQJLUY" alt="image-20220516212248506" /></p>
<p>此时可以通过如下步骤解决<code>conflicts</code>：</p>
<ul>
<li>
<p><code>git fetch origin</code>：下载远程分支的所有变动，但不与本地分支合并</p>
</li>
<li>
<p><code>git pull origin hexo</code>：下载远程<code>hexo</code>分支的所有变动并与本地分支合并。此时会出现如下情形</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220516212734022.png?token=AKWAGWYZ35VBES4T4KXFT5LCQJLUG" alt="image-20220516212734022" /></p>
</li>
<li>
<p><code>git status</code>：查看当前分支状态。</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/image-20220516212832926.png?token=AKWAGWYTCJTJYHQH53NVMFDCQJLUS" alt="image-20220516212832926" /></p>
</li>
<li>
<p><code>git add ./</code>：添加指定目录到暂存区，包括子目录</p>
</li>
<li>
<p><code>git commit -m &quot;update&quot;</code>：提交暂存区到仓库区</p>
</li>
<li>
<p><code>git pull origin hexo</code>：发现<code>Already up to date.</code></p>
</li>
<li>
<p><code>git status</code>：发现<code>nothing to commit, working tree clean</code></p>
</li>
</ul>
<blockquote>
<p>参考资料：<a href="https://stackoverflow.com/questions/161813/how-do-i-resolve-merge-conflicts-in-a-git-repository">How do I resolve merge conflicts in a Git repository?</a></p>
</blockquote>
</br>
<p>4.在文件或者文件夹已经存在在仓库中时，将这些文件或者文件夹加入<code>.gitignore</code>文件后，git 并不会将这些文件或者文件夹删除。此时可以通过以下步骤使<code>.gitignore</code>中的改动生效：</p>
<ul>
<li><code>git rm -rf --cached path_to_file</code>：将对应路径的文件从仓库缓存中删除；</li>
<li><code>git add ./</code></li>
<li><code>git commim -m &quot;add a commit&quot;</code></li>
<li><code>git push origin main</code></li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/25436312/gitignore-not-working">Gitignore not working</a></li>
<li><a href="https://www.quora.com/Can-you-have-multiple-Gitignore-files">Can you have multiple Gitignore files?</a></li>
</ol>
<p>PS：可以为仓库中的每个文件夹创建一个<code>.gitignore</code>，但是并不建议，因为不方便查询和管理。</p>
</blockquote>
</br>
<p>5.给 git 配置代理：</p>
<ul>
<li>
<p>配置 socks 协议代理：</p>
<ol>
<li>设置代理：</li>
</ol>
</li>
</ul>
 <pre class="line-numbers language-none"><code class="language-none">git config --global http.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39; 
git config --global https.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="2">
<li>查看代理：</li>
</ol>
 <pre class="line-numbers language-none"><code class="language-none">git config --global --get http.proxy
git config --global --get https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="3">
<li>取消代理：</li>
</ol>
 <pre class="line-numbers language-none"><code class="language-none">git config --global --unset http.proxy
git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ul>
<li>
<p>配置 http 协议代理：</p>
<ol>
<li>设置代理：</li>
</ol>
</li>
</ul>
 <pre class="line-numbers language-none"><code class="language-none">git config --global http.proxy &#39;http:&#x2F;&#x2F;127.0.0.1:1080&#39; 
git config --global https.proxy &#39;https:&#x2F;&#x2F;127.0.0.1:1080&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="2">
<li>查看代理：</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">git config --global --get http.proxy
git config --global --get https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="3">
<li>取消代理：</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">git config --global --unset http.proxy
git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="4">
<li>查看代理是否生效</li>
</ol>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">curl https://www.google.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>PS：1080 为在 ShadowSocksR 或者 V2rayN 客户端中设置的代理的端口；Windows V2rayN 客户端似乎不支持 http 协议代理（注意在 git 更新 personal access token 时不支持 socks 协议）</p>
<blockquote>
<p>参考文献：</p>
<ol>
<li><a href="https://www.cnblogs.com/yongy1030/p/11699086.html">git设置、查看、取消代理</a></li>
</ol>
</blockquote>
<p>6.有时需要在<code>.gitignore</code>文件中添加仓库中所有的名为<code>folder_name</code>文件夹或文件，此时可以通过在<code>.gitignore</code>中添加如下内容实现：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">*folder_name*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>例如，要忽略所有名为<code>datafile</code>和<code>pth</code>的文件夹或文件，可以在<code>.gitignore</code>中添加：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">*</span>datafile<span class="token operator">*</span>
<span class="token operator">*</span>pth<span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>PS：此种方式由于使用了极其宽松的正则表达式，凡是文件夹名或文件名中包含<code>datafile</code>或<code>pth</code>的连续字符串都将被忽略。</p>
</br>
<p>7.同时进行多个项目的开发时，对<code>git commmit -m &quot;msg&quot;</code>中的<code>msg</code>没有过多要求的情况下，可以通过Windows <code>.bat</code>脚本对多个项目进行批量的<code>git pull</code>和<code>git push</code>。</p>
<ul>
<li>
<p><code>git pull</code>：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off
<span class="token builtin class-name">echo</span> <span class="token string">"batch git pull"</span>
D:

<span class="token builtin class-name">echo</span> <span class="token string">"moving to D:\Projects\AndroidProjects"</span>
<span class="token builtin class-name">cd</span> D:<span class="token punctuation">\</span>Projects<span class="token punctuation">\</span>AndroidProjects
<span class="token builtin class-name">echo</span> <span class="token function">git</span> pull D:<span class="token punctuation">\</span>Projects<span class="token punctuation">\</span>AndroidProjects <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>pull.txt
<span class="token function">git</span> pull <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>pull.txt
<span class="token builtin class-name">echo</span> <span class="token string">"D:\Projects\AndroidProjects git pull finish"</span>
<span class="token assign-left variable">echo</span><span class="token operator">=</span> <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>pull.txt
<span class="token assign-left variable">echo</span><span class="token operator">=</span>

<span class="token punctuation">..</span>.

pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面演示了对<code>AndroidProjects</code>项目进行<code>git pull</code>操作，并将相关输出记录到<code>pull.txt</code>文件。最后的<code>pause</code>命令使得执行<code>.bat</code>脚本执行完毕后停留在<code>cmd</code>页面。</p>
</li>
<li>
<p><code>git push</code>：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off
<span class="token builtin class-name">echo</span> <span class="token string">"batch git push"</span>
D:

<span class="token builtin class-name">echo</span> <span class="token string">"moving to D:\Desktop\Tom89757.github.io"</span>
<span class="token builtin class-name">cd</span> D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>Tom89757.github.io
<span class="token builtin class-name">echo</span> <span class="token function">git</span> push D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>Tom89757.github.io <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>push.txt
<span class="token function">git</span> <span class="token function">add</span> ./ <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>push.txt
<span class="token function">git</span> commit -m <span class="token string">"update"</span> <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>push.txt
<span class="token function">git</span> push origin hexo <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>push.txt
<span class="token builtin class-name">echo</span> <span class="token string">"D:\Desktop\Tom89757.github.io git push finish"</span>
<span class="token assign-left variable">echo</span><span class="token operator">=</span> <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>push.txt
<span class="token assign-left variable">echo</span><span class="token operator">=</span> <span class="token operator">>></span>D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>push.txt
<span class="token assign-left variable">echo</span><span class="token operator">=</span>
<span class="token builtin class-name">cd</span> D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>Tom89757.github.io<span class="token punctuation">\</span>blog
hexo d -g

pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面演示了对<code>Tom89757.github.io</code>项目进行<code>git push</code>操作，并将相关输出记录到<code>push.txt</code>文件。并在完成<code>git push</code>操作后，对<code>blog</code>中的内容进行生成和部署。</p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/Ep_Little_prince/article/details/108895103">Windows 下bat脚本git提交代码到github</a></li>
<li><a href="https://www.w3cschool.cn/dosmlxxsc1/wvqyr9.html">bat 批处理教程</a></li>
<li><a href="https://blog.csdn.net/justlpf/article/details/120077423">bat脚本echo命令输出空行的11种方法和效率</a></li>
</ol>
</blockquote>
</br>
<p>8.当<code>git push</code>较大文件（大于50M）时，会出现如下<code>warning</code>。<br />
此时可以通过<code>git lfs</code>来解决，其步骤如下：</p>
<ol>
<li>安装git bash，运行<code>git lfs install</code>。注意对每个user account只运行一次</li>
<li>在每个你想要使用<code>Git LFS</code>的仓库，训责你想要用<code>Git LFS</code>管理的文件类型（或者直接编辑你的<code>.gitattributes</code>文件），可以在任何使用配置额外的扩展文件类型。例如：<code>git lfs track &quot;.pptx&quot;</code>。将<code>.pptx</code>文件类型添加到<code>Git LFS</code>管理的文件类型中。</li>
<li>上述操作会在当前仓库根目录下添加<code>.gitattributes</code>文件，其内容如下：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220903153435.png" alt="" /></li>
<li>使用<code>git add .gitattributes</code>便可使<code>Git LFS</code>生效。</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://git-lfs.github.com/">Git Large File Storage</a></li>
</ol>
</blockquote>
</br>
9.使用git bash进行javac编译时出现中文乱码：
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220929170956.png" alt="" /></p>
<p>解决方案：在选项里将字符集设为GBK，重启git bash：</p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20220929171040.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_21260033/article/details/78786608">在 git bash 里运行 java 命令，打印出的中文显示乱码</a></li>
<li><a href="https://minsonlee.github.io/2020/11/how-to-set-utf8-with-git-bash">解决 Git Bash 在 windows 下中文乱码的问题</a>（不针对此问题）</li>
</ol>
</blockquote>
</br>
10.有时需要给git终端设置别名。给git设置别名分为两种：
- 给git本身的命令设置别名，此时可以通过`git config --global alias.co checkout`设置全局别名，这样可以`git co`等同于`git checkout`，该配置会写入`~/.gitconfig`文件。故也可以直接编辑该文件来设置别名
- 给git终端运行的其他命令设置别名，如`javac -encoding utf8`简化为`javac`，此时可以编辑`~/.bashrc`文件（如果没有则创建），在里面写入`alias javac='javac -encoding utf8'`。设置后每次启动git终端窗口后该文件中的配置都会生效
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-Git-%E5%88%AB%E5%90%8D">2.7 Git 基础 - Git 别名</a></li>
<li><a href="https://segmentfault.com/a/1190000023541589">玩转 Git 别名</a></li>
</ol>
</blockquote>
</br>
11.出现报错`error: RPC failed; curl 92 HTTP/2 stream 7 was not closed cleanly before end of the underlying stream`：
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20221108182409.png" alt="" /><br />
解决方案：</p>
<ol>
<li>配置http版本：<code>git config --global http.version HTTP/1.1</code></li>
<li>配置<code>http.postBuffer：git config --global http.postBuffer 157286400</code></li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/59282476/error-rpc-failed-curl-92-http-2-stream-0-was-not-closed-cleanly-protocol-erro">git - error: RPC failed; curl 92 HTTP/2 stream 0 was not closed cleanly: PROTOCOL_ERROR (err 1) - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
12.在linux中使用git时，出现如下情况：
![](https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230203180529.png)
解决方案：在Linux的git中配置personal token
- `git config --global credential.helper cache`：在`.gitconfig`中添加配置，使得系统记住后续输入的token，避免重复输入
- `git clone https://github.com/Tom89757/dotfiles.git`：clone对应仓库，并输入对应用户名和token。由于上述配置，此次输入后后续无需再次输入。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/68775869/message-support-for-password-authentication-was-removed-please-use-a-personal#:~:text=From%202021%2D08%2D13%2C,a%20PAT%20on%20your%20system.">git - Message “Support for password authentication was removed. Please use a personal access token instead.” - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
13.clone仓库时出现：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Host key verification failed. fatal: The remote end hung up unexpectedly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
解决方案：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的github账户名"</span>
<span class="token function">git</span> config --global user.email <span class="token string">"你的github账户默认的邮箱地址"</span>
ssh-keygen -t rsa -b <span class="token number">4096</span> -C <span class="token string">"你的github账户默认的邮箱地址"</span>
<span class="token function">cat</span> ~/.ssh/id_rsa.pub <span class="token comment"># 添加到git ssh</span>
ssh-keyscan -t rsa github.com <span class="token operator">>></span> ~/.ssh/known_hosts <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [我的现代化Neovim配置 - 知乎](https://zhuanlan.zhihu.com/p/382092667)
> 2. [ssh - Git error: "Host Key Verification Failed" when connecting to remote repository - Stack Overflow](https://stackoverflow.com/questions/13363553/git-error-host-key-verification-failed-when-connecting-to-remote-repository)
</br>
14.下载仓库中某个文件夹：
工具：[Download GitHub directory](https://download-directory.github.io/)
</br>
<p>15.在运行<code>git push origin main</code>之后，在出现<code>Total</code>行之后卡住<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230415230020.png" alt="" /><br />
问题：推送的objects较大<br />
解决方案：参考下方参考资料</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/15843937/git-push-hangs-after-total-line">bitbucket - git push hangs after Total line - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
<p>16.查看分支的最早提交时间：<br />
切换到对应分支例如<code>w6-complete</code>然后运行如下命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --reverse --pretty<span class="token operator">=</span>format:<span class="token string">"%cd"</span> --date<span class="token operator">=</span>iso w6-complete <span class="token operator">|</span> <span class="token function">tail</span> -1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>PS：上述命令只能查看<code>w6-complete</code>的最早提交时间，而不是分支的创建时间</p>
<blockquote>
<p>参考资料：VSCode Copilot</p>
</blockquote>
</br>
17.`git log`显示commits时间并倒序输出到`commits.txt`：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --pretty<span class="token operator">=</span>format:<span class="token string">"%h %ad | %s%d [%an]"</span> --graph --date<span class="token operator">=</span>short <span class="token operator">|</span> <span class="token function">tac</span> <span class="token operator">></span>commits.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</br>
18.git添加PATH：
> 参考资料：
> 1. [node.js - How come npm install doesn't work on git bash - Stack Overflow](https://stackoverflow.com/questions/35915832/how-come-npm-install-doesnt-work-on-git-bash)
> 2. [node.js - Http-Server Command Not Found After Install in NPM - Stack Overflow](https://stackoverflow.com/questions/31694646/http-server-command-not-found-after-install-in-npm#:%7E:text=you%20should%20add%20the%20npm,%22%2C%20run%20the%20below%20command.&text=bashrc%20file%20in%20your%20home,commands%20on%20your%20git%20bash)
</br>
<p>19.git配置pager：<br />
GitHub Copilot: Git pager是指Git命令行工具中用于分页显示输出的程序。Git pager通常用于显示长时间运行的命令的输出，例如git log或git diff。当输出超过终端窗口的大小时，Git pager会自动将输出分页显示，以便您可以逐页查看输出。</p>
<p>默认情况下，Git pager使用less程序作为分页程序。您可以使用<code>git config</code>命令来配置Git pager的选项。例如，您可以使用以下命令将Git pager配置为使用more程序而不是less程序：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global core.pager <span class="token function">more</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>您还可以使用以下命令来禁用Git pager：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global core.pager <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这将使Git命令在终端窗口中直接输出所有内容，而不是分页显示。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/2183900/how-do-i-prevent-git-diff-from-using-a-pager">How do I prevent ‘git diff’ from using a pager? - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
20.git bash使用`git diff`，不显示任何东西。
问题：错误的使用方式
解决方案：按照下述流程使用：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> file_name

<span class="token function">git</span> <span class="token function">diff</span> --cached file_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. ['git status' shows changed files, but 'git diff' doesn't - Stack Overflow](https://stackoverflow.com/questions/14564946/git-status-shows-changed-files-but-git-diff-doesnt) 
</br>
21.git显示警告：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">warning: lF will be replaced by CRLF.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
解决方案：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global core.autocrlf <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [Windows git "warning: LF will be replaced by CRLF", is that warning tail backward? - Stack Overflow](https://stackoverflow.com/questions/17628305/windows-git-warning-lf-will-be-replaced-by-crlf-is-that-warning-tail-backwar)
</br>
22.git设置符号链接（软链接 `ln -s`）：
- 打开Windows 10中的开发者模式（"Developer Mode"），从而给`mklink`权限
- 使得git中symbol links生效：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global core.symlinks <span class="token boolean">true</span> <span class="token comment"># 全局生效</span>
<span class="token function">git</span> config core.symlinks <span class="token boolean">true</span> <span class="token comment"># 当前仓库生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
- 添加symbol link链接：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span><span class="token number">26899</span><span class="token punctuation">\</span>.bash_aliases D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.bash_aliases<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
- 添加文件夹链接：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">
mklink /d D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.oh-my-zsh C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span><span class="token number">26899</span><span class="token punctuation">\</span>.oh-my-zsh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Symbolic link does not work in Git over Windows - Super User](https://superuser.com/questions/1713099/symbolic-link-does-not-work-in-git-over-windows)
> 2. [Git symbolic links in Windows - Stack Overflow](https://stackoverflow.com/questions/5917249/git-symbolic-links-in-windows)
</br>
23.git bash配置定制（custom）的`git-prompt.sh`文件：
1. 找到`git-prompt.sh`文件，在Git安装目录下。
2. 将其复制到`~/.config/git/`目录下。
3. 即可编辑上述复制的`git-prompt.sh`文件对git prompt进行定制。
PS：同理，可以对使用oh-my-zsh的git prompt进行定制，其文件位于`/c/Users/26899/.oh-my-zsh/plugins/gitfast/git-prompt.sh`。
> 参考资料：
> 1. [How to change the display name in Git bash prompt](https://www.brainstormcreative.co.uk/git-bash/how-to-change-the-display-name-in-git-bash/)
</br>
24.git bash中使用`tree`命令。在`.bash_aliases`中添加：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">tree</span><span class="token operator">=</span><span class="token string">'cmd //c tree //a'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [How to add the 'tree' command to git-bash in Windows? - Super User](https://superuser.com/questions/531592/how-to-add-the-tree-command-to-git-bash-in-windows)
</br>
25.git bash中使用`trash`替代`rm`，类似回收站。
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --global trash-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [trash-cli - npm](https://www.npmjs.com/package/trash-cli)
</br>
26.使用`mklink`命令将`.vimrc`和`monokai.vim`等文件对`dotfiles`仓库中的文件进行软链接：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.vimrc D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.vimrc
mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.vim<span class="token punctuation">\</span>colors<span class="token punctuation">\</span>monokai.vim D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.vim<span class="token punctuation">\</span>colors<span class="token punctuation">\</span>monokai.vim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</br>
27.使用`mklink`将`.zshrc`，`.bash_aliases`，`.bash_path`，`.bashrc`，`.bash_profile`链接到`dotfiles`仓库中的文件。
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.zshrc D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.zshrc
mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.bash_aliases D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.bash_aliases
mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.bash_path D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.bash_path
mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.bash_profile D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</br>
28.将git配置文件链接到`dotfiles`仓库：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mklink C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>A<span class="token punctuation">\</span>.gitconfig D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>.gitconfig
mklink D:<span class="token punctuation">\</span>Develop<span class="token punctuation">\</span>Git<span class="token punctuation">\</span>etc<span class="token punctuation">\</span>gitconfig D:<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>dotfiles<span class="token punctuation">\</span>git<span class="token punctuation">\</span>gitconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</br>
29.配置`git-delta`，高亮工具，可以使得`git`, `diff`和`grep`等输出高亮。
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/dandavison/delta">GitHub - dandavison/delta: A syntax-highlighting pager for git, diff, and grep output</a></li>
<li><a href="https://www.bilibili.com/video/BV1Jo4y1N7fi/?vd_source=71b57f2bb132ac1f88ed255cad4a06a6">git-delta 终端代码 diff 也很酷！_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
</br>
30.git新建分支，不保留当前分支文件：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> switch --orphan <span class="token operator">&lt;</span>new-branch-name<span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
> 参考资料：
> 1. [git - Create empty branch on GitHub - Stack Overflow](https://stackoverflow.com/questions/34100048/create-empty-branch-on-github)
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git使用指南02</title>
    <url>/2023/06/15/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%9702/</url>
    <content><![CDATA[<p>本文记录一下使用git时的常见操作。</p>
<span id="more"></span>
<p>1.git更新版本并添加到Windows Terminal：</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://linuxhint.com/upgrade-git-latest-version-windows/">How to Upgrade git to the Latest Version on Windows</a></li>
<li><a href="https://stackoverflow.com/questions/56839307/adding-git-bash-to-the-new-windows-terminal">Adding Git-Bash to the new Windows Terminal - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
<p>2.git terminal在VSCode中行为很奇怪：<br />
更新git版本。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/microsoft/vscode/issues/184719">git bash terminal is acting wierd in vscode · Issue #184719 · microsoft/vscode · GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/76479076/git-bash-terminal-is-acting-wierd-in-vscode">visual studio code - git bash terminal is acting wierd in vscode - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
3.git bash终端中文显示乱码：
解决方案1（无效）：
- `git config --global core.quotepath false`
- 在设置里将`text`改为`zh-CN`和`UTF-8`。
解决方案2：
- `chcp.com 65001`：`65001`对应UTF-8，可以写在`.zshrc`文件中。
> 参考资料：
> 1. [Git Bash终端中文输出显示乱码解决方案 - lybingyu - 博客园](https://www.cnblogs.com/sdlz/p/13023342.html)
> 2. [windows - Unicode (utf-8) with git-bash - Stack Overflow](https://stackoverflow.com/questions/10651975/unicode-utf-8-with-git-bash)
</br>
4.git中创建pull request
> 参考资料：
> 1. [How to Code Good Part 2 - Google 幻灯片](https://docs.google.com/presentation/d/15WY-h0lr-t3jDO0eJTaeBq5zbnwfjPxPr1aauI1xhF4/edit#slide=id.g1f8707ec125_0_4)
</br>
5.git仓库fork后创建pull request
Github Copilot：如果您想将自己的更改贡献给原始仓库，可以通过 Pull Request 的方式向原始仓库提交更改请求。下面是一些基本步骤：
1. 在 GitHub 上 Fork 原始仓库，将其复制到自己的账户中。
2. 在自己的账户中 Clone Fork 后的仓库到本地。
3. 在本地仓库中创建一个新的分支，并在该分支中进行代码更改。
4. 将更改推送到自己的 GitHub 仓库中。
5. 在自己的 GitHub 仓库中创建一个 Pull Request，请求将更改合并到原始仓库中。
6. 在 Pull Request 中描述您所做的更改、为什么要做这些更改以及如何测试这些更改。
7. 等待原始仓库的维护者审核并合并您的更改。
请注意，不同的项目可能有不同的贡献流程和规则。在参与开源项目时，建议仔细阅读项目的贡献指南和代码贡献流程，以了解项目的贡献规则和流程。
</br>
6.本仓库pull request和fork后pull request的区别：
GitHub Copilot: Fork 和 Pull Request 都是 GitHub 中用于协作开发的重要机制。
Fork 是指将一个开源项目的代码库复制到自己的 GitHub 账户中，以便进行修改和贡献。通过 Fork，开发人员可以在自己的分支中进行代码更改，并将这些更改推送到自己的 GitHub 仓库中。这样，他们就可以在自己的仓库中管理代码，并随时将更改推送到原始项目中。
Pull Request 是指开发人员在自己的分支中进行代码更改后，向原始项目的维护者请求审核和合并这些更改的机制。通过 Pull Request，开发人员可以描述他们所做的更改、为什么要做这些更改以及如何测试这些更改。项目维护者可以查看 Pull Request，并在必要时提出问题或建议修改。一旦 Pull Request 被审核通过，项目维护者可以将更改合并到项目的主分支中。
总的来说，Fork 和 Pull Request 都是用于协作开发的机制，但它们的使用场景和目的有所不同。Fork 通常用于在自己的分支中进行代码更改和管理，而 Pull Request 通常用于向原始项目贡献代码并请求审核和合并。
</br>
7.`git pull origin main`报错`fetch-pack: unexpected disconnect while reading sideband packet`
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/38618885/error-rpc-failed-curl-transfer-closed-with-outstanding-read-data-remaining">git - error: RPC failed; curl transfer closed with outstanding read data remaining - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/66366582/github-unexpected-disconnect-while-reading-sideband-packet">git - Github - unexpected disconnect while reading sideband packet - Stack Overflow</a></li>
</ol>
</blockquote>
</br>
8.在local git repository（本地git仓库）中同时在两个分支上工作
<pre class="line-numbers language-git" data-language="git"><code class="language-git">gb backend # 切换到backend分支
git worktee add frontend # 在当前worktree添加frontend分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
此时目录结构如下：
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/59579681/i-want-to-work-on-different-branches-in-git-in-my-local-repository-which-have-di">github - i want to work on different branches in git in my local repository which have different branches from origin set as upstream - Stack Overflow</a></li>
<li><a href="https://www.integralist.co.uk/posts/multiple-branches-in-git/#:~:text=Git%20offers%20a%20feature%20referred,directories%20where%20they%20are%20stored.">Multiple Branches in Git ⋆ Mark McDonnell</a></li>
<li><a href="https://www.youtube.com/watch?v=2uEqYw-N8uE">Git’s Best And Most Unknown Feature - YouTube</a></li>
</ol>
</blockquote>
</br>
9.`git rebase`操作
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.freecodecamp.org/news/git-rebase-handbook/">The Git Rebase Handbook – A Definitive Guide to Rebasing</a></li>
</ol>
</blockquote>
<p>10.<code>git merge</code>操作。报错<code>fatal: refusing to merge unrelated histories</code><br />
解决方案：<br />
当您尝试将两个没有共同祖先的分支合并时，可能会遇到<code>fatal: refusing to merge unrelated histories</code>错误。这通常发生在以下情况下：</p>
<ul>
<li>您创建了一个新的本地仓库，并将其推送到远程仓库，然后尝试将另一个仓库的分支合并到本地仓库中。</li>
<li>您在本地仓库中创建了一个新的分支，并将其推送到远程仓库，然后尝试将另一个仓库的分支合并到本地仓库中。<br />
在这些情况下，Git无法确定两个分支之间的共同祖先，因此会拒绝合并操作。<br />
要解决此问题，可以使用<code>--allow-unrelated-histories</code>选项强制合并两个没有共同祖先的分支。例如，要将<code>feature</code>分支合并到<code>master</code>分支，可以运行以下命令：</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">git merge --allow-unrelated-histories feature<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这将强制合并<code>feature</code>分支到<code>master</code>分支，即使它们没有共同祖先。请注意，这可能会导致合并冲突，因此在合并分支之前，请确保备份了所有重要的更改，并测试了所有更改以确保它们不会破坏应用程序的功能。</p>
</br>
<p>11.git bash中进行复制/粘贴</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">Git bash copy and paste 
Copy: Ctrl + Ins 
Paste: Shift + Ins 
or if your keyboard has function key named as fn 
Copy : Ctrl + fn + Ins 
Paste : Shift + fn + Ins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>everything搜索技巧</title>
    <url>/2023/05/31/everything%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>本文记录一下使用everything的搜索技巧。</p>
<span id="more"></span>
<h3 id="everything配置search-history-搜索历史"><a class="markdownIt-Anchor" href="#everything配置search-history-搜索历史"></a> everything配置search history (搜索历史)</h3>
<p>可搭配PowerToys映射快捷键<code>Ctrl+j/k</code>到<code>downarrow/uparrow</code>。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.voidtools.com/support/everything/search_history/">Search History - voidtools</a></li>
<li><a href="https://www.howtogeek.com/710290/how-to-remap-any-key-or-shortcut-on-windows-10/">How to Remap Any Key or Shortcut on Windows 10</a></li>
</ol>
</blockquote>
<h3 id="everything搜索技巧"><a class="markdownIt-Anchor" href="#everything搜索技巧"></a> everything搜索技巧</h3>
<ol>
<li>可以自定义筛选器（例如指定图片后缀）</li>
<li><code>*.png 1234</code>：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230531121936.png" alt="" /></li>
<li><code>123 | 456</code>：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230531122052.png" alt="" /></li>
<li>排除文件夹：在索引里面设置</li>
<li><code>file:123</code>：只搜索包含<code>123</code>的文件</li>
<li><code>folder:123</code>：只搜索包含<code>123</code>的文件夹</li>
<li><code>D:\Desktop 123</code>：指定搜索路径</li>
<li><code>123??</code>：通配符，<code>?</code>代表任意一个字符</li>
<li><code>123*</code>：<code>*</code>代表任意多个字符</li>
<li><code>vimrc$</code>：正则表达式，以<code>vimrc</code>结尾的文件</li>
<li>文件服务器：在浏览器中搜索、查看和下载文件</li>
</ol>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/165142586">高效搜索神器 Everything 搜索技巧汇总 - 知乎</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>everything</tag>
      </tags>
  </entry>
  <entry>
    <title>gradle使用指南</title>
    <url>/2023/08/10/gradle%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下gradle的使用指南：</p>
<span id="more"></span>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/">Spring Boot Gradle Plugin Reference Guide</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/2.7.0/gradle-plugin/api/index.html?org/springframework/boot/gradle/tasks/bundling/BootBuildImage.html">BootBuildImage (Spring Boot Gradle Plugin 2.7.0 API)</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/2.7.5/gradle-plugin/reference/htmlsingle/#build-image.customization">Spring Boot Gradle Plugin Reference Guide</a></li>
</ol>
</blockquote>
<h3 id="buildgradle中plugin使用本地文件"><a class="markdownIt-Anchor" href="#buildgradle中plugin使用本地文件"></a> build.gradle中plugin使用本地文件</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/54918583/using-gradle-plugin-from-flatdir-source">java - using gradle plugin from flatDir source - Stack Overflow</a></li>
<li><a href="https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver">Declaring repositories</a></li>
<li><a href="https://stackoverflow.com/questions/35302414/adding-local-plugin-to-a-gradle-project">java - Adding local plugin to a Gradle project - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/25965901/how-to-make-gradle-repository-point-to-local-directory">maven - How to make Gradle repository point to local directory - Stack Overflow</a></li>
<li><a href="https://docs.gradle.org/current/userguide/declaring_repositories.html#sec:declaring_multiple_repositories">Declaring repositories</a></li>
</ol>
</blockquote>
<h3 id="spring-cloud-bindings无法下载"><a class="markdownIt-Anchor" href="#spring-cloud-bindings无法下载"></a> spring-cloud-bindings无法下载</h3>
<p>根据以下参考资料6，spring-cloud-bindings已从<a href="https://repo.spring.io/ui/native/release/org/springframework/cloud/spring-cloud-bindings">repo.spring.io</a>迁移至Maven Central。<br />
根据参考资料7，可以在plugins中指定：</p>
<pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">implementation group: &#39;org.springframework.cloud&#39;, name: &#39;spring-cloud-bindings&#39;, version: &#39;1.11.0&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/spring-projects/spring-boot/issues/33699">Image building fails when downloading spring-cloud-bindings · Issue #33699 · spring-projects/spring-boot · GitHub</a></li>
<li><a href="https://github.com/paketo-buildpacks/spring-boot/issues/225">spring-cloud-bindings download returning 404 when running spring buildpack · Issue #225 · paketo-buildpacks/spring-boot · GitHub</a></li>
<li><a href="https://spring.io/blog/2022/12/14/notice-of-permissions-changes-to-repo-spring-io-january-2023">Notice of Permissions Changes to repo.spring.io, January 2023</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/issues/33699">Image building fails when downloading spring-cloud-bindings · Issue #33699 · spring-projects/spring-boot · GitHub</a></li>
<li><a href="https://github.com/paketo-buildpacks/spring-boot/issues/304">Builds failing as spring-cloud-bindings not accessible from repo.spring.io · Issue #304 · paketo-buildpacks/spring-boot · GitHub</a></li>
<li><a href="https://github.com/spring-cloud/spring-cloud-bindings/issues/71">Publish to Maven Central · Issue #71 · spring-cloud/spring-cloud-bindings · GitHub</a></li>
<li><a href="https://central.sonatype.com/artifact/org.springframework.cloud/spring-cloud-bindings/1.11.0">Maven Central: org.springframework.cloud:spring-cloud-bindings:1.11.0</a></li>
<li><a href="https://docs.vmware.com/en/VMware-Tanzu-Buildpacks/services/tanzu-buildpacks/GUID-release-notes-spring-boot-release-notes.html">Release Notes for Paketo Spring Boot Buildpack</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>iptables使用指南</title>
    <url>/2023/08/24/iptables%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下iptables的使用指南：</p>
<span id="more"></span>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1Jz4y1u7Lz">Fetching Title#kk8l</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>iptables</tag>
      </tags>
  </entry>
  <entry>
    <title>maven使用指南</title>
    <url>/2023/08/13/maven%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下maven的使用指南：</p>
<span id="more"></span>
<h3 id="mvnw-spring-bootrun运行失败"><a class="markdownIt-Anchor" href="#mvnw-spring-bootrun运行失败"></a> ./mvnw spring-boot:run运行失败</h3>
<p>报错<code>Caused by: org.apache.maven.plugin.MojoExecutionException: Process terminated with exit code: 1</code><br />
在Application.class中添加异常处理：<br />
由</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CatalogServiceApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>改为：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
	<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CatalogServiceApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/46428611/process-finished-with-exit-code-1-spring-boot-intellij">tomcat - Process finished with exit code 1 Spring Boot Intellij - Stack Overflow</a></li>
</ol>
</blockquote>
<h3 id="mvnw-spring-bootbuild-image运行失败"><a class="markdownIt-Anchor" href="#mvnw-spring-bootbuild-image运行失败"></a> ./mvnw spring-boot:build-image运行失败</h3>
<p>报错<code>Caused by: org.apache.maven.plugin.PluginExecutionException: Execution default-cli of goal org.springframework.boot:spring-boot-maven-plugin:3.1.2:build-image failed: Docker API call to 'localhost/v1.24/images/docker.io/paketobuildpacks/builder:base/json' failed with status code 404 &quot;Not Found&quot;</code></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://github.com/spring-projects/spring-boot/issues/25831">Use a local builder image when the image does not exist in the remote repository · Issue #25831 · spring-projects/spring-boot · GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/72095321/use-spring-native-with-custom-docker-registry">gradle - Use Spring Native with custom Docker registry - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>neovim使用指南</title>
    <url>/2023/07/23/neovim%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下neovim的一些配置指南和经验：</p>
<span id="more"></span>
<h3 id="neovim的各个发行版的比较"><a class="markdownIt-Anchor" href="#neovim的各个发行版的比较"></a> neovim的各个发行版的比较</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://medium.com/@adaml.poniatowski/exploring-the-top-neovim-distributions-lazyvim-lunarvim-astrovim-and-nvchad-which-one-reigns-3adcdbfa478d">Exploring the Top Neovim Distributions: LazyVim, LunarVim, AstroVim, and NVChad — Which One Reigns Supreme? | by Adam Poniatowski | Medium</a></li>
</ol>
</blockquote>
<h3 id="lazyvim"><a class="markdownIt-Anchor" href="#lazyvim"></a> lazy.vim</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://jdhao.github.io/2023/09/02/from_packer_to_lazy_nvim/">Migrating from Packer.nvim to Lazy.nvim - jdhao’s digital space</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Vim</tag>
        <tag>neovim</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs使用指南</title>
    <url>/2022/05/14/npm%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下使用npm管理包时的常见操作：</p>
<span id="more"></span>
<p>1.<code>npm root -g</code>：查看<code>npm</code>安装全局packages时的安装地址。例如在Windows10系统中运行其结果如下：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220514233532921.png" alt="image-20220514233532921" /></p>
<blockquote>
<p>参考资料：<a href="https://stackoverflow.com/questions/5926672/where-does-npm-install-packages">Where does npm install packages?</a></p>
</blockquote>
</br>
<p>2.<code>npm install package_name</code>：局部安装package。安装的package在当前目录的node_modules文件夹中。简写形式为<code>npm i package_name</code>。</p>
</br>
<p>3.<code>npm install -g package_name</code>：全局安装package。安装的package运行<code>npm root -g</code>后的展示路径中。简写形式为<code>npm i -g package_name</code>。</p>
</br>
<p>4.<code>npm uninstall package_name</code>：局部卸载package。要卸载的package在当前目录的node_modules文件夹中。简写形式为<code>npm un package_name</code> 。</p>
</br>
<p>5.<code>npm uninstall -g package_name</code>：全局卸载package。要卸载的package在运行<code>npm root -g</code>后的展示路径中中。简写形式为<code>npm un -g package_name</code> 。</p>
</br>
<p>6.<code>npm i package_name</code> vs <code>npm i package_name --save</code> vs <code>npm i package_name --save-dev</code>：</p>
<p>PS：本问题在为hexo博客安装<code>hexo</code>和<code>hexo-cli</code>包时出现，解决方案为使用<code>--save-dev</code>选项安装。</p>
<ul>
<li>
<p><code>npm i package_name --save</code>：当需要为自己的<code>app/modules</code>安装依赖时，使用该命令可以在安装相应package之后将其添加到当前路径中<code>package.json</code>文件的<code>&quot;dependencies&quot;</code>子对象中。如下图所示：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515003241850.png" alt="image-20220515003241850" /></p>
</li>
<li>
<p><code>npm i package_name</code>：当前版本中，该命令与<code>npm i package_name --save</code>等价，同样会将安装的package添加到当前路径中<code>package.json</code>文件的<code>&quot;dependencies&quot;</code>子对象中。即<code>--save</code>为<code>npm i</code>命令的默认选项。</p>
</li>
<li>
<p><code>npm i package_name --save-dev</code>：当为开发安装依赖包时，需要使用此命令。该命令会将 the third-party package添加到当前路径中<code>package.json</code>文件的<code>&quot;devDependencies&quot;</code>子对象中。如下图所示：</p>
<p><img src="https://hexo-1302648630.cos.ap-beijing.myqcloud.com/2022-05-15/image-20220515004019352.png" alt="image-20220515004019352" /></p>
</li>
</ul>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/22891211/what-is-the-difference-between-save-and-save-dev">What is the difference between --save and --save-dev</a></li>
<li><a href="https://docs.npmjs.com/cli/v8/commands/npm-install">npm-install</a></li>
</ol>
</blockquote>
</br>
7.Linux安装nodejs：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">VERSION</span><span class="token operator">=</span>v10.15.0
<span class="token assign-left variable">DISTRO</span><span class="token operator">=</span>linux-x64
<span class="token function">sudo</span> <span class="token function">mkdir</span> -p /usr/local/lib/nodejs
<span class="token function">sudo</span> <span class="token function">tar</span> -xJvf node-<span class="token variable">$VERSION</span>-<span class="token variable">$DISTRO</span>.tar.xz -C /usr/local/lib/nodejs 
<span class="token comment"># Nodejs</span>
<span class="token assign-left variable">VERSION</span><span class="token operator">=</span>v10.15.0
<span class="token assign-left variable">DISTRO</span><span class="token operator">=</span>linux-x64
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/lib/nodejs/node-<span class="token variable">$VERSION</span>-<span class="token variable">$DISTRO</span>/bin:<span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
> 参考资料：
> 1. [Installation · nodejs/help Wiki · GitHub](https://github.com/nodejs/help/wiki/Installation)
</br>
8.查看当前项目所安装的依赖：
Github Copilot：您可以使用 `npm list` 命令来查看当前 npm 项目中各个包的版本。在项目根目录下运行该命令，将输出当前项目中所有已安装的包及其版本号。如果您只想查看生产环境依赖项的版本，可以使用 `npm list --prod` 命令。如果您只想查看开发环境依赖项的版本，可以使用 `npm list --dev` 命令。
</br>
9.指定npm某个包的版本：
<pre class="line-numbers language-package.json" data-language="package.json"><code class="language-package.json">&quot;react&quot;: &quot;16.14.0&quot; #某个版本
&quot;react&quot;: &quot;latest&quot; #最新版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</br>
10.查看某个npm包的所有版本：
Github Copilot：您可以使用 npm view 命令来查看某个包的所有版本。在终端中运行以下命令，将 package-name 替换为您要查看的包的名称：
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> view <span class="token operator">&lt;</span>package-name<span class="token operator">></span> versions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
这将输出该包的所有版本号。如果您只想查看稳定版本，可以使用 npm view package-name versions --json | grep -v "-" 命令。
例如 `npm view react version`
</br>
查看当前npm项目中各个包的版本
Github Copilot：您可以使用 `npm list` 命令来查看当前 npm 项目中各个包的版本。在项目根目录下运行该命令，将输出当前项目中所有已安装的包及其版本号。如果您只想查看生产环境依赖项的版本，可以使用 `npm list --prod` 命令。如果您只想查看开发环境依赖项的版本，可以使用 `npm list --dev` 命令。]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>健身动作细节</title>
    <url>/2023/09/04/%E5%81%A5%E8%BA%AB%E5%8A%A8%E4%BD%9C%E7%BB%86%E8%8A%82/</url>
    <content><![CDATA[<p>本文整理一下健身各个动作的教程和细节：</p>
<span id="more"></span> 
<h3 id="硬拉"><a class="markdownIt-Anchor" href="#硬拉"></a> 硬拉</h3>
<h4 id="传统硬拉"><a class="markdownIt-Anchor" href="#传统硬拉"></a> 传统硬拉</h4>
<p>重心：中间重心压在髋骨上，前后重心放在足中<br />
核心：肩胛后缩下沉，上身刚性和核心刚性<br />
不要顶跨，髋关节横移也有很大压力。<br />
准备时形成张力，不要在放松状态下启动，减少腰部压力。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1dw411D7Py">新手硬拉大全！哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title>三分化训练计划</title>
    <url>/2023/08/23/%E4%B8%89%E5%88%86%E5%8C%96%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<p>本文整理一下有关三分化健身计划的资源和指南：</p>
<span id="more"></span> 
<h3 id="凯圣王三分化训练计划"><a class="markdownIt-Anchor" href="#凯圣王三分化训练计划"></a> 凯圣王三分化训练计划</h3>
<p>三分化一一推拉蹲<br />
推的动作：胸向肩过渡，同时带三头<br />
1 ．杠铃平板卧准：下胸<br />
2 ．杠铃上斜卧推：上胸<br />
3 ．平板窄距卧准：胸内侧，肱三头肌<br />
4 ．站姿推举：三角肌前束和中束<br />
拉的动作：<br />
1 ．硬拉：后侧链<br />
2 . 坐姿划船，对把手<br />
3 . T 杆划船：背肌，中下斜方肌<br />
4 ．高位下拉，宽把手（比肩宽一圈，倾斜不超过 35 度）<br />
5 ．杠铃弯举，肱二头肌<br />
蹲的动作：<br />
1 ．杠铃深蹲<br />
2 ．倒蹬/哈克：深蹲之后推荐做固定动作<br />
3 ．坐姿腿屈伸<br />
4 ．俯卧腿弯举<br />
前两个动作强度大后两个动作较小，调节强度</p>
<p>力量一速度一耐力<br />
卸载：缓解神经疲劳，肌肉疲劳，调节激素<br />
红肌纤维：耐力强，爆发力力量弱一一一马拉松<br />
白肌纤维：力量爆发强，耐力弱</p>
<p>前两周力量训练： 8 一 16 次／组。高次数到低次数。小重量热身，慢慢加重。不推荐单一组数，力量和耐力兼顾，红臼肌纤维兼顾。组间休息 1 分钟半。<br />
第三周容量训练： 12 一 25 次/组。弥补耐力短板。不要扌卓到 12 次以下。<br />
第四周：卸载。不是纯休息，而是来一次舒服的训练。训练强度降到 50 ％。这周可以做 8 一 10 组， 15RM 的训练可。</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1jy4y1g7b1/?spm_id_from=333.999.0.0">【上集】制定计划的原理/不再搬运计划/三分化训练/推拉蹲全面提高/手把手让你变强_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1Zh411a7dy/?spm_id_from=333.999.0.0&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">【下集】动作选择思路/周期性如何制定/卸载周的意义/次数是按什么决定的/健身界的睡前故事_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1DZ4y1y77T/?spm_id_from=333.788.recommend_more_video.1&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">【新手福利】5乘5训练计划，从理论到计划到实操！！帮你省点私教费_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
<h3 id="gandy训练计划"><a class="markdownIt-Anchor" href="#gandy训练计划"></a> Gandy训练计划</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1hg411Z7Ck">【收藏向】三分化增肌计划指南｜超详细教程_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ma411D7dC">【增肌必看】健身三分化增肌思路｜保姆级教程_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
<h3 id="好人松松训练计划"><a class="markdownIt-Anchor" href="#好人松松训练计划"></a> 好人松松训练计划</h3>
<p>计划<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902001102.png" alt="" /><br />
难易度<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902001642.png" alt="" /><br />
训练轮次<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902001855.png" alt="" /><br />
动作命名<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902002018.png" alt="" /><br />
RM<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902002127.png" alt="" /><br />
配重<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902002212.png" alt="" /><br />
配重改变<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902002759.png" alt="" /></p>
<h4 id="胸"><a class="markdownIt-Anchor" href="#胸"></a> 胸</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003022.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003035.png" alt="" /></p>
<h4 id="背"><a class="markdownIt-Anchor" href="#背"></a> 背</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003100.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003136.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003200.png" alt="" /></p>
<h4 id="肱三头"><a class="markdownIt-Anchor" href="#肱三头"></a> 肱三头</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003224.png" alt="" /></p>
<h4 id="肱二头"><a class="markdownIt-Anchor" href="#肱二头"></a> 肱二头</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003245.png" alt="" /></p>
<h4 id="肩"><a class="markdownIt-Anchor" href="#肩"></a> 肩</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003315.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003341.png" alt="" /></p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003357.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003414.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003433.png" alt="" /></p>
<h4 id="腿"><a class="markdownIt-Anchor" href="#腿"></a> 腿</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003529.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003549.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003604.png" alt="" /></p>
<h4 id="臀"><a class="markdownIt-Anchor" href="#臀"></a> 臀</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003617.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003632.png" alt="" /></p>
<h4 id="腹肌"><a class="markdownIt-Anchor" href="#腹肌"></a> 腹肌</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003651.png" alt="" /></p>
<h4 id="总览"><a class="markdownIt-Anchor" href="#总览"></a> 总览</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003855.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230902003910.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1Hk4y187jF/">💪🏻B站版《健身新手的训练完全手册》™_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
<h3 id="各个部位"><a class="markdownIt-Anchor" href="#各个部位"></a> 各个部位</h3>
<h4 id="肱二头-肱三头"><a class="markdownIt-Anchor" href="#肱二头-肱三头"></a> 肱二头、肱三头</h4>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/123997541">新手练手臂（肱二头+肱三头），看这篇就够了！ - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/72254588">最全二头和三头肌训练图解 - 知乎</a></li>
</ol>
</blockquote>
<h3 id="受伤调节"><a class="markdownIt-Anchor" href="#受伤调节"></a> 受伤调节</h3>
<h4 id="脚踝扭伤"><a class="markdownIt-Anchor" href="#脚踝扭伤"></a> 脚踝扭伤</h4>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/28926298">脚踝扭了必须要做的是？调整距骨位置 - 知乎</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title>前程似锦</title>
    <url>/2023/06/13/%E5%89%8D%E7%A8%8B%E4%BC%BC%E9%94%A6/</url>
    <content><![CDATA[<p>本文收集一下各种未来道路：</p>
<h3 id="体制"><a class="markdownIt-Anchor" href="#体制"></a> 体制</h3>
<ol>
<li><a href="http://81rc.81.cn/sy/zczd_210285/16202914_2.html">2023年军队文职人员公开招考报考指南——中国人民解放军专业技术人才网</a></li>
</ol>
<h3 id="出国"><a class="markdownIt-Anchor" href="#出国"></a> 出国</h3>
<ol>
<li><a href="https://v2ex.com/t/955368">30 岁从大厂裸辞全家搬往英国的故事（上） - V2EX</a>：V2EX上他人分享的30岁出国经历</li>
</ol>
<h3 id="工作经历分享"><a class="markdownIt-Anchor" href="#工作经历分享"></a> 工作经历分享</h3>
<ol>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzU0OTE4MzYzMw==&amp;mid=2247560168&amp;idx=1&amp;sn=821438e9c32c9bf44b9a5ed8e863385d&amp;chksm=fbb06216ccc7eb00a0adc9e36796cfe1aa60bea95c5f4053ae2a59c58def18cb1c943f766536&amp;scene=27">再见，字节跳动</a>：分享在字节的工作经历</li>
<li><a href="https://catcoding.me/p/remote-work/">远程办公的体验 | 程序员的喵</a></li>
</ol>
<h3 id="副业"><a class="markdownIt-Anchor" href="#副业"></a> 副业</h3>
<ol>
<li><a href="https://www.dochub.wiki/jingyifuyechengxuyuanruheyouyadezuofuye/">精益副业：程序员如何优雅地做副业-DocHub - 分享优质文档</a></li>
</ol>
]]></content>
      <categories>
        <category>工作</category>
        <category>求职</category>
      </categories>
      <tags>
        <tag>体制</tag>
        <tag>出国</tag>
        <tag>私企</tag>
        <tag>国企</tag>
      </tags>
  </entry>
  <entry>
    <title>前端知识点01</title>
    <url>/2023/07/08/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B901/</url>
    <content><![CDATA[<p>本文记录一下在开发前端项目时的知识点和所遇到的问题：</p>
<span id="more"></span>
<p>1.报错<code>Support for the experimental syntax 'jsx' isn't currently enabled</code>。<br />
问题：缺少<code>.babelrc</code>文件<br />
解决方案：在项目根目录创建一个<code>.babelrc</code>文件，并添加如下内容</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>
  <span class="token string-property property">"presets"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@babel/preset-env"</span><span class="token punctuation">,</span> <span class="token string">"@babel/preset-react"</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/63005011/support-for-the-experimental-syntax-jsx-isnt-currently-enabled">javascript - Support for the experimental syntax ‘jsx’ isn’t currently enabled - Stack Overflow</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>前端资源汇总</title>
    <url>/2023/06/01/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>本文整理一下网上收集的比较新的前端资源：</p>
<span id="more"></span>
<h3 id="react组件"><a class="markdownIt-Anchor" href="#react组件"></a> React组件</h3>
<ol>
<li><a href="https://fluent2.microsoft.design/components/web/react/">Overview - Fluent 2 Design System</a>：对应figma为<a href="https://www.figma.com/community/file/836828295772957889"># Microsoft Fluent 2 Web</a></li>
</ol>
<h3 id="swift语言"><a class="markdownIt-Anchor" href="#swift语言"></a> Swift语言</h3>
<ol>
<li><a href="https://swiftgg.gitbook.io/swift/">The Swift Programming Language中文版</a></li>
</ol>
<h3 id="figma素材"><a class="markdownIt-Anchor" href="#figma素材"></a> Figma素材</h3>
<ol>
<li><a href="https://www.figma.com/community/file/1248375255495415511/Apple-Design-Resources-%E2%80%93-iOS-17-and-iPadOS-17">Apple Design Resources – iOS 17 and iPadOS 17 | Figma Community</a>：Apple设计资源</li>
</ol>
<h3 id="ui"><a class="markdownIt-Anchor" href="#ui"></a> UI</h3>
<ol>
<li><a href="https://interfaces.rauno.me/">Web Interface Guidelines</a>：前端开发交互体验注意事项</li>
</ol>
<h3 id="课程"><a class="markdownIt-Anchor" href="#课程"></a> 课程</h3>
<ol>
<li><a href="https://microsoft.github.io/Web-Dev-For-Beginners/#/">Web Dev for Beginners</a>：微软推出的Web开发初学者课程</li>
<li><a href="https://frontendmasters.com/courses/vanilla-js-apps/?utm_source=email&amp;utm_medium=javascriptweekly&amp;utm_content=vanillajs">Comprehensive Guide to Vanilla JavaScript | Build Efficient Web Apps | Frontend Masters | Frontend Masters</a>：对Vanilla JavaScript的探究，框架可能是不必要的。</li>
<li><a href="https://discoverthreejs.com/#main">Discover three.js!</a>：three.js教程</li>
<li><a href="https://j08v3n7cqq.feishu.cn/docs/doccnu8PLq5zJcaZJUzTaLyEOPc#Tb3wvI">Web 3.0 通识课 - 飞书云文档</a>：Web3.0通识课程</li>
</ol>
<h3 id="发展趋势"><a class="markdownIt-Anchor" href="#发展趋势"></a> 发展趋势</h3>
<ol>
<li><a href="https://joshcollinsworth.com/blog/antiquated-react">Things you forgot (or never knew) because of React - Josh Collinsworth blog</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>双分化双循环训练计划</title>
    <url>/2023/08/13/%E5%8F%8C%E5%88%86%E5%8C%96%E5%8F%8C%E5%BE%AA%E7%8E%AF%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<p>本文整理一下有关双分化健身计划的资源和指南：</p>
<span id="more"></span> 
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://workout.lol/">Workout.lol | The easiest way to create a workout routine</a>：根据器械和肌肉为你推荐动作</li>
</ol>
</blockquote>
<h3 id="卓叔训练计划和格教练反馈"><a class="markdownIt-Anchor" href="#卓叔训练计划和格教练反馈"></a> 卓叔训练计划和格教练反馈</h3>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230813114142.png" alt="" /></p>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230813114149.png" alt="" /></p>
<p>卓叔：借力推举， 3-4组，5-8次<br />
格教练：不推荐，3-4组，10-15次，使用器械</p>
<p>卓叔：坐姿哑铃推举，3-4组，8-12次<br />
格教练：没必要，和上面重复，导致过度训练</p>
<p>卓叔：侧平举，3-4组，12-20次<br />
格教练：同意</p>
<p>卓叔：引体向上，共30次<br />
格教练：30次很武断，3-5组，8-15次</p>
<p>卓叔：俯身杠铃划船，4组，8-12次<br />
格教练：T杠划船，防止腰伤</p>
<p>卓叔：高位下拉，3组，10-15次<br />
格教练：重复</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1gW4y1o7HD/?spm_id_from=333.337.search-card.all.click&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">小骨架的瘦子，怎么练才能快速显壮？（附详细计划）</a></li>
<li><a href="https://www.bilibili.com/video/BV1FV41137yX/?spm_id_from=333.999.0.0">【卓叔bulking】小骨架如何增肌？哔哩哔哩bilibili</a></li>
</ol>
</blockquote>
<h3 id="凯圣王训练计划"><a class="markdownIt-Anchor" href="#凯圣王训练计划"></a> 凯圣王训练计划</h3>
<h4 id="躯干"><a class="markdownIt-Anchor" href="#躯干"></a> 躯干</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230815132026.png" alt="" /><br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230815170429.png" alt="" /></p>
<h4 id="四肢"><a class="markdownIt-Anchor" href="#四肢"></a> 四肢</h4>
<p><img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230816170720.png" alt="" /></p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1Qd4y1Z75J/?spm_id_from=333.788&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">【凯圣王】新手增肌系列、开篇_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1Nc411P7nc/?spm_id_from=333.999.0.0&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">【凯圣王】新手增肌系列、二分化带练躯干/体育课</a></li>
<li><a href="https://www.bilibili.com/video/BV1YL411q7HR/?spm_id_from=333.999.0.0&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6"> 【凯圣王】新手增肌系列、二分化带练四肢/体育课</a></li>
</ol>
</blockquote>
<h3 id="好人松松讲解"><a class="markdownIt-Anchor" href="#好人松松讲解"></a> 好人松松讲解</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV1Hk4y187jF/?spm_id_from=333.337.search-card.all.click&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">💪🏻B站版《健身新手的训练完全手册》™_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1AM411r7z3/?spm_id_from=333.337.search-card.all.click&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">💪🏻B站版《健身新手的减肥减脂完全手册》™_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1yX4y1q7LP/?spm_id_from=333.999.0.0">💪🏻B站版《健身新手的饮食完全手册》™_哔哩哔哩_bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV19L4y1w7zN/?spm_id_from=333.999.0.0&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">一口气讲完健身训练 | 分化 动作 配重（附健身计划）</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title>后端文章汇总</title>
    <url>/2023/06/11/%E5%90%8E%E7%AB%AF%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>本文收集一些较新的关于后端的文章或资料：</p>
<span id="more"></span>
<ol>
<li><a href="https://kreya.app/blog/rest-vs-grpc/">A detailed comparison of REST and gRPC | Kreya</a>：对REST和gRPC的详细比较。</li>
<li><a href="https://www.zhihu.com/question/21383903">Socket 为什么要翻译成套接字？ - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>向往的生活</title>
    <url>/2023/07/24/%E5%90%91%E5%BE%80%E7%9A%84%E7%94%9F%E6%B4%BB/</url>
    <content><![CDATA[<p>本文记录一下和未来向往的生活有关的一些资料：</p>
<span id="more"></span>
<ol>
<li><a href="https://nomadlist.com/">Nomad List - Best Places to Live for Digital Nomads</a>：记录了适宜于数字游民居住的城市</li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>未来</tag>
      </tags>
  </entry>
  <entry>
    <title>如何阅读源码</title>
    <url>/2023/07/29/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%BA%90%E7%A0%81/</url>
    <content><![CDATA[<p>本文收集一下关于如何阅读源码的经验和资料：</p>
<span id="more"></span>
<h3 id="阅读源码的经验"><a class="markdownIt-Anchor" href="#阅读源码的经验"></a> 阅读源码的经验</h3>
<ol>
<li><a href="https://www.zhihu.com/question/19625320">如何阅读程序源代码</a>：知乎上有关阅读源代码的回答</li>
<li><a href="https://www.codedump.info/post/20190324-how-to-read-code/">如何阅读一份源代码？ - codedump的网络日志</a>：别人关于阅读源代码的经验</li>
<li><a href="http://www.cnblogs.com/ToDoToTry/archive/2009/06/21/1507760.html">如何看懂源代码–(分析源代码方法) - fandyst - 博客园</a>：别人的另一份经验</li>
<li><a href="https://www.reddit.com/r/learnprogramming/comments/1272d0b/how_to_read_code_on_github/">How to read code on github? : r/learnprogramming</a>：reddit上关于阅读github仓库源码的讨论</li>
</ol>
<h3 id="典型的前端项目结构"><a class="markdownIt-Anchor" href="#典型的前端项目结构"></a> 典型的前端项目结构</h3>
<ol>
<li><a href="https://www.taniarascia.com/react-architecture-directory-structure/">React Architecture: How to Structure and Organize a React Application | Tania Rascia</a>：React Application结构</li>
<li><a href="https://www.joshwcomeau.com/react/file-structure/">Delightful React File/Directory Structure</a>：React目录结构</li>
<li><a href="https://github.com/CatsMiaow/nestjs-project-structure">GitHub - CatsMiaow/nestjs-project-structure: Node.js framework NestJS project structure</a>：nestjs项目结构</li>
</ol>
<h3 id="典型的后端项目结构"><a class="markdownIt-Anchor" href="#典型的后端项目结构"></a> 典型的后端项目结构</h3>
<ol>
<li><a href="https://medium.com/the-resonant-web/spring-boot-2-0-project-structure-and-best-practices-part-2-7137bdcba7d3">Spring Boot 2.0 — Project Structure and Best Practices (Part 2) | by Arpit Khandelwal | The Resonant Web | Medium</a>：Spring Boot项目结构最佳实践</li>
<li><a href="https://medium.com/thefreshwrites/best-practices-in-spring-boot-project-structure-2986adb290">Best Practices in Spring Boot Project Structure | by Mohammed Safir | The Fresh Writes | Medium</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>源码</tag>
      </tags>
  </entry>
  <entry>
    <title>实际工程中的调试</title>
    <url>/2023/07/24/%E5%AE%9E%E9%99%85%E5%B7%A5%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<p>本文记录一下在网上看到的比较好的贴合实际工程的调试实践：</p>
<span id="more"></span>
<ol>
<li><a href="https://blog.codingnow.com/2023/05/debug.html">云风的 BLOG: 记一次艰难的 debug 历程</a></li>
<li><a href="https://www.kawabangga.com/posts/5236">是谁杀了我？ | 卡瓦邦噶！</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>调试</tag>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>开发者工具和技巧</title>
    <url>/2023/07/19/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>本文记录一下开发者可能会用到的工具和技巧：</p>
<span id="more"></span>
<h3 id="代码搜索"><a class="markdownIt-Anchor" href="#代码搜索"></a> 代码搜索</h3>
<ul>
<li>技巧：<a href="https://developer.mozilla.org/en-US/blog/searching-code-with-grep/">Developer essentials: How to search code using grep | MDN Blog</a>，使用<code>grep</code>进行代码搜索</li>
<li>工具：<a href="https://www.mythicsoft.com/agentransack/">Agent Ransack – Mythicsoft</a>，免费的文件内容查找工具，可以用于搜索代码</li>
</ul>
<h3 id="gpt-engineer"><a class="markdownIt-Anchor" href="#gpt-engineer"></a> GPT Engineer</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.youtube.com/watch?v=FPZONhA0C60">GPT Engineer: Things Are Starting to Get Weird - YouTube</a></li>
<li><a href="https://github.com/AntonOsika/gpt-engineer">GitHub - AntonOsika/gpt-engineer: Specify what you want it to build, the AI asks for clarification, and then builds it.</a></li>
</ol>
</blockquote>
<h3 id="开发工具推荐"><a class="markdownIt-Anchor" href="#开发工具推荐"></a> 开发工具推荐</h3>
<ol>
<li><a href="https://www.youtube.com/watch?v=UMQGyeAnfFE&amp;ab_channel=TechWorldwithNana">10 DevOps Tools you need to know - The Complete Guide - YouTube</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>眼睛度数恢复指南</title>
    <url>/2023/05/31/%E7%9C%BC%E7%9D%9B%E8%BF%91%E8%A7%86%E6%81%A2%E5%A4%8D%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下网上所搜集的较为科学的眼睛近视缓解方法和教程。</p>
<span id="more"></span>
<h3 id="眼睛缓解疲劳"><a class="markdownIt-Anchor" href="#眼睛缓解疲劳"></a> 眼睛缓解疲劳</h3>
<ol>
<li><a href="https://www.bilibili.com/video/BV12h411X7Bi/?spm_id_from=333.788.recommend_more_video.-1&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">2分钟缓解眼睛疲劳</a>：活动眼球缓解疲劳</li>
</ol>
<h3 id="em视力训练"><a class="markdownIt-Anchor" href="#em视力训练"></a> EM视力训练</h3>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/526805881">01 如何开始？EndMyopia近视逆转训练 - 知乎</a>：知乎用户分享的训练经验。有广告的嫌疑。</li>
<li><a href="https://zhuanlan.zhihu.com/p/626883249">长期记录利用Endmyopia训练视力的过程 - 知乎</a>：知乎用户记录使用EM方法的长期过程。</li>
<li><a href="https://www.bilibili.com/video/BV1gA411Q7k4/?spm_id_from=333.999.0.0">第一天｜30天试验外网已帮上万近视人群恢复裸眼视力的：Endmyopia摘镜训练法。 #近视 #视力训练 #打卡_哔哩哔哩_bilibili</a>：B站up主，有广告的嫌疑。</li>
<li><a href="http://www.yinwang.org/blog-cn/2022/02/22/myopia?continueFlag=5a3e79f270afb6b658487bf638d9e49d">自然视力恢复法</a>：王垠分享的视力恢复方法，有较高的参考价值。</li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>kindle</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员生活指南</title>
    <url>/2023/06/18/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%94%9F%E6%B4%BB%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<span id="more"></span>
<ol>
<li><a href="https://v2ex.com/t/940584">作为程序员，有什么提升生活/工作体验的 App、硬件、服务？ - V2EX</a></li>
<li><a href="https://hagerhu.com/post/the-things-program-want/">程序员想要的节日礼物 - 寒峰路</a></li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>健康</tag>
      </tags>
  </entry>
  <entry>
    <title>羽毛球训练指南</title>
    <url>/2023/08/20/%E7%BE%BD%E6%AF%9B%E7%90%83%E8%AE%AD%E7%BB%83%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文整理以下羽毛球相关的资源和训练指南：</p>
<span id="more"></span>
<h3 id="力量训练"><a class="markdownIt-Anchor" href="#力量训练"></a> 力量训练</h3>
<p>正手手腕：<br />
正手挥拍练手腕<br />
弹力带练正/反手手腕<br />
腰背：<br />
杠铃俯身划船<br />
一头起(两侧)<br />
脚踝：<br />
靠墙单脚踮起落下<br />
跳绳双摇<br />
弹力带练脚踝<br />
杠铃踮脚尖<br />
踮脚尖半蹲跳起(可加负重)<br />
反手：<br />
反拍练手腕<br />
反手甩杠铃<br />
启动：<br />
分腿半蹲踮脚尖<br />
半蹲踮脚尖跳起<br />
分腿深蹲<br />
快速分腿半蹲<br />
小密步+转向或跳起<br />
大腿🦵：<br />
静蹲(练大腿)<br />
弓箭步(先弯后腿，再压前腿，其实感觉是同时)<br />
负重弓箭步</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV12t4y1e7L4/?spm_id_from=333.337.search-card.all.click&amp;vd_source=71b57f2bb132ac1f88ed255cad4a06a6">羽毛球改怎么练力量，为什么和健身不一样呢？爆发力和耐力怎么练？哔哩哔哩bilibili</a></li>
<li><a href="https://www.bilibili.com/video/BV1gv41167t1/?spm_id_from=333.999.0.0">羽毛球小细节《手指手腕的力量训练》_哔哩哔哩_bilibili</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>羽毛球</tag>
      </tags>
  </entry>
  <entry>
    <title>部署和维护文章汇总</title>
    <url>/2023/06/12/%E9%83%A8%E7%BD%B2%E5%92%8C%E7%BB%B4%E6%8A%A4%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>本文收集一些较好的关于部署和维护的文章或资料：</p>
<span id="more"></span>
<ol>
<li><a href="https://www.kawabangga.com/posts/5154">部署和维护开源软件的经验 | 卡瓦邦噶！</a></li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>部署</tag>
        <tag>维护</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云服务器使用指南</title>
    <url>/2023/07/23/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>本文记录一下在使用阿里云服务器过程中的一些经验和教训：</p>
<span id="more"></span>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bilibili.com/video/BV12b4y18725">阿里云服务器ECS建站教程全套（适合0基础初学者），小白轻松拥有个人网站！| 保姆级教程_哔哩哔哩_bilibili</a>：总教程</li>
</ol>
</blockquote>
<h3 id="添加安全组规则"><a class="markdownIt-Anchor" href="#添加安全组规则"></a> 添加安全组规则</h3>
<p>在<code>网络与安全-&gt;安全组</code>中添加如下安全组：<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230723231355.png" alt="" /><br />
使得可以通过workbench对云服务器进行远程连接</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://help.aliyun.com/document_detail/25471.html?spm=a2c6h.13066369.question.8.6c8a3631Zj66t6">添加安全组规则</a></li>
</ol>
</blockquote>
<h3 id="配置通过密码登录远程服务器"><a class="markdownIt-Anchor" href="#配置通过密码登录远程服务器"></a> 配置通过密码登录远程服务器</h3>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://help.aliyun.com/document_detail/469713.html">使用密码无法登录Linux云服务器ECS该如何处理？云服务器 ECS-阿里云帮助中心</a></li>
<li><a href="https://help.aliyun.com/document_detail/51796.html?spm=a2c4g.469713.0.0.681c6f59yyPZix#concept-zzt-nl1-ydb">为ECS实例绑定SSH密钥对_云服务器 ECS-阿里云帮助中心</a></li>
<li><a href="https://help.aliyun.com/document_detail/51798.html?spm=a2c4g.51796.0.0.16c67fe6CdboVr">如何登录Linux实例_云服务器 ECS-阿里云帮助中心</a></li>
<li><a href="https://help.aliyun.com/document_detail/41471.html">使用SSH远程连接Linux系统的ECS实例时，提示“Host key verification failed”错误怎么办？服务器 ECS-阿里云帮助中心</a></li>
</ol>
</blockquote>
<h3 id="宝塔面板"><a class="markdownIt-Anchor" href="#宝塔面板"></a> 宝塔面板</h3>
<p>安装后的信息：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">外网面板地址: https://39.107.115.36:55555/94f535c4
内网面板地址: https://172.29.108.220:55555/94f535c4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>记住不要设置多组安全组，只有一组安全组会生效</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://www.bt.cn/new/btcode.html">宝塔linux面板命令大全 - 宝塔面板</a></li>
<li><a href="https://help.aliyun.com/document_detail/163918.html">如何处理ECS实例上无法登录宝塔服务面板控制台问题？云服务器 ECS-阿里云帮助中心</a></li>
</ol>
</blockquote>
<h3 id="添加域名解析"><a class="markdownIt-Anchor" href="#添加域名解析"></a> 添加域名解析</h3>
<p>阿里云服务器无法解析到在腾讯云购买的域名，需要进行域名转入。<br />
<img src="https://raw.githubusercontent.com/Tom89757/ImageHost/main/hexo/20230724003829.png" alt="" /><br />
60天后方可转入域名</p>
<blockquote>
<p>参考资料：</p>
<ol>
<li><a href="https://juejin.cn/s/%E5%9F%9F%E5%90%8D%E6%80%8E%E4%B9%88%E8%A7%A3%E6%9E%90%E5%88%B0%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF">域名怎么解析到宝塔面板-掘金</a></li>
<li><a href="https://www.jianshu.com/p/2048fdb2da44">网站域名如何解析到阿里云和腾讯云服务器？ - 简书</a></li>
<li><a href="https://wanwang.aliyun.com/domain/transfers?spm=5176.100251.111252.18.2aad4f15Bi1VrH">域名批量转入【批量】</a></li>
<li><a href="https://www.alibabacloud.com/help/zh/domains/latest/domain-name-statuses">WHOIS查询参考：域名状态的含义 - 域名 - 阿里云</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>资料中的资料</title>
    <url>/2023/07/24/%E8%B5%84%E6%96%99%E4%B8%AD%E7%9A%84%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<p>本文收集一些别人收集的比较好的资料：</p>
<span id="more"></span>
<ol>
<li><a href="https://www.kawabangga.com/collection">珍藏资料 | 卡瓦邦噶！</a></li>
<li><a href="https://catcoding.me/p/get-better-info/">优化自己的信息源 | 程序员的喵</a>：优化自己的信息源</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机基础文章汇总</title>
    <url>/2023/06/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>本文收集一下关于计算机基础的较好的文章：</p>
<span id="more"></span>
<ol>
<li><a href="https://samwho.dev/memory-allocation/">Memory Allocation</a>：内存分配</li>
<li><a href="https://cangsdarm.github.io/illustrate/quic">图解协议</a>：图解各类传输层协议</li>
<li><a href="https://www.hello-algo.com/">Hello 算法</a>：数据结构开源书籍</li>
</ol>
]]></content>
      <categories>
        <category>资料</category>
      </categories>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
</search>
